[{"description":"The `CircularProgress` component is used to give visual feedback while your app\nis loading.\n\nThere are two different types of circular progress bars: `Determinate` and `Indeterminate`.\n\nA `Determinate` circular progress bar should be used when you want to keep track of the current\nprogress. An example would be downloading a file.\n\nAn `Indeterminate` circular progress bar should be used when you can not keep track of the progress\nyourself. An example would be waiting for some API call to complete.","methods":[],"props":{"id":{"type":{"name":"custom","raw":"isRequiredForA11y(PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]))"},"required":false,"description":"The `id` prop is required for accessibility concerns.\n[Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\n\n> If the progressbar is describing the loading progress of a particular region of a page, the author\n__SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\nregion until it is finished loading. It is not possible for the user to alter the value of a progressbar\nbecause it is always readonly."},"style":{"type":{"name":"object"},"required":true,"description":"A style object to apply to the svg. If this is a determinate `CircularProgress`,\nthe `transform` (and vendor prefixes) styles will be merged with the current\nprogress rotation.","defaultValue":{"value":"{}","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the svg."},"value":{"type":{"name":"custom","raw":"between(PropTypes.number, 0, 100)"},"required":false,"description":"The current value of the progress. If this value is defined, it will\nbe converted to a determinate circular progress. The progress will not\nadvance unless this value changes.\n\nThis value should also be a number between 0 and 100."},"scale":{"type":{"name":"number"},"required":true,"description":"The scale for the circular progress.","defaultValue":{"value":"1","computed":false}},"determinateDashoffset":{"type":{"name":"number"},"required":true,"description":"You probably don't want to update this. I'm not good at svg. This should\nmatch the scss variable `$md-circular-progress-stroke-dashoffset`.","defaultValue":{"value":"187","computed":false}},"centered":{"type":{"name":"bool"},"required":false,"description":"Boolean if the the progress should be centered in it's container.","defaultValue":{"value":"true","computed":false}}},"source":"src/js/Progress/CircularProgress.js","component":"CircularProgress"}]