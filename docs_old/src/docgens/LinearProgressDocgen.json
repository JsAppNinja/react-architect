[{"description":"There are 3 different types of linear progress bars: `Determinate`,\n`Indeterminate`, and `Query Indeterminate`.\n\nA `Determinate` linear progress bar should be used when you can keep track of the\nprogress and have a percentage complete you can work with. An example would be\nuploading/downloading a file.\n\nAn `Indeterminate` linear progress bar should be used when you can not keep track\nof the progess yourself. An example might be waiting for an API call to complete.\n\nA `Query Indeterminate` linear progress bar is used when you are combining\n`Indeterminate` and `Determinate`. A Linear Progress component can be displayed\nas a query indeterminate progress bar by adding the prop `query={true}` to the\ncomponent. Until a progress value is given, it will display the query linear\nprogress animation. Afterwards, it will start the determinate animation of where\nyou manually keep updating the value of the progress.","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the linear progress container."},"value":{"type":{"name":"custom","raw":"between(PropTypes.number, 0, 100)"},"required":false,"description":"The current value of the progress. If this value is defined, it will\nbe converted to a determinate circular progress. The progress will not\nadvance unless this value changes.\n\nThis value should also be a number between 0 and 100."},"query":{"type":{"name":"bool"},"required":false,"description":"Boolean if this should be a query indeterminate progress bar.","defaultValue":{"value":"false","computed":false}},"centered":{"type":{"name":"bool"},"required":false,"description":"Boolean if the Linear Progress should be centered. This\nwill only work if the `max-width` style is set."}},"source":"src/js/Progress/LinearProgress.js","component":"LinearProgress"}]