[{"description":"","methods":[],"props":{"style":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the toolbar."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the toolbar,"},"titleStyle":{"type":{"name":"object"},"required":false,"description":""},"titleClassName":{"type":{"name":"string"},"required":false,"description":""},"prominent":{"type":{"name":"bool"},"required":false,"description":"Boolean if the toolbar should more prominent. This will double the height of the toolbar."},"prominentTitle":{"type":{"name":"bool"},"required":false,"description":"Boolean if the toolbar's title should be more prominent. This will move the title to the\nsecond line of the toolbar. This only works when the `prominent` prop is true as well."},"title":{"type":{"name":"custom","raw":"invalidIf(PropTypes.node, 'titleMenu')"},"required":false,"description":"The current title of the page to show in the toolbar. It is invalid to specify both a\n`title` and a `titleMenu`. Only one should be given."},"titleMenu":{"type":{"name":"element"},"required":false,"description":"An optional title menu to display instead of the title. This should be a `SelectField` component.\nIt is cloned with some additional props, so if the `SelectField` is separated into a separate\ncomponent, the following props must be passed to get the correct styling: `className`, `block`,\n`paddedBlock`, `position`."},"nav":{"type":{"name":"element"},"required":false,"description":"This prop is used for rendering an optional navigation button to the left of the `title`\nor the `titleMenu` component. This needs to be an icon `Button` because some additional props\nare cloned into it."},"actions":{"type":{"name":"union","value":[{"name":"element"},{"name":"arrayOf","value":{"name":"element"}}]},"required":false,"description":"Any additional actions to display to the right of the title. This should be a list or a single\n`Button` to display. The buttons get cloned with an additional className for toolbar styling."},"children":{"type":{"name":"node"},"required":false,"description":"Any children to display in the toolbar. This will be displayed between the optional title and\nactions."},"fixed":{"type":{"name":"bool"},"required":false,"description":"Boolean if the toolbar should be fixed to the top of the page. This will add some additional box shadow."},"singleColor":{"type":{"name":"bool"},"required":false,"description":"Boolean if the nav, actions, and title should share the same color. For a `colored` or dark `themed`\ntoolbar, they will all be colored white. For a transparent or light `themed` toolbar, the colors will\nbe the `rgba(0, 0, 0, .87)`. Setting this to false will only style the title to the specific color\nstated above.","defaultValue":{"value":"true","computed":false}},"themed":{"type":{"name":"bool"},"required":false,"description":"Boolean if the toolbar should be colored based off the current theme. This will either style the background\nto be fairly white, or fairly black. You can not specify both `themed` and `colored`."},"colored":{"type":{"name":"custom","raw":"invalidIf(PropTypes.bool, 'themed')"},"required":false,"description":"Boolean if the toolbar should be colored with the `$md-primary-color`."},"component":{"type":{"name":"union","value":[{"name":"func"},{"name":"string"}]},"required":true,"description":"The component to render the toolbar as.","defaultValue":{"value":"'header'","computed":false}},"inset":{"type":{"name":"bool"},"required":false,"description":"Boolean if the toolbar is inset in the page. This will just add some margin around\nit."},"zDepth":{"type":{"name":"custom","raw":"between(PropTypes.number, 0, 5)"},"required":false,"description":"An optional zDepth to enforce for the toolbar. This should be a number between 0 and 5.\nIf this is omitted, the toolbar will gain a zDepth of 2 when `fixed`."},"containerStyle":{"type":{"name":"custom","raw":"deprecated(\n  PropTypes.object,\n  'The `container` no longer exists in the `Toolbar`. Use the `style` prop instead'\n)"},"required":false,"description":""},"containerClassName":{"type":{"name":"custom","raw":"deprecated(\n  PropTypes.string,\n  'The `container` no longer exists in the `Toolbar`. Use the `className` prop instead'\n)"},"required":false,"description":""},"primary":{"type":{"name":"custom","raw":"deprecated(PropTypes.bool, 'Use the `colored` prop instead')"},"required":false,"description":""},"secondary":{"type":{"name":"custom","raw":"deprecated(\n  PropTypes.bool,\n  'Toolbars can no longer be themed to the secondary color. Use the `colored` prop instead'\n)"},"required":false,"description":""},"actionLeft":{"type":{"name":"custom","raw":"deprecated(PropTypes.element, 'Use the `nav` prop instead')"},"required":false,"description":""},"actionsRight":{"type":{"name":"custom","raw":"deprecated(\n  PropTypes.node,\n  'Use the `menu` prop and/or the `actions` prop instead'\n)"},"required":false,"description":""}},"source":"src/js/Toolbars/Toolbar.js","component":"Toolbar"}]