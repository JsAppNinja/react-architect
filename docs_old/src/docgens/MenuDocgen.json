[{"description":"The `Menu` component is a controlled component that will display\na `List` of `ListItem` once it has been toggled open.","methods":[],"props":{"id":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":"An optional id to give to the menu's container. This is used for accessibility and is\ngenerally recommended."},"listId":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":"An optional id to give to the `List` that gets generated when open. This is used for\naccessibility and generally recommended. If this prop is given, the `aria-owns` attribute\nwill be added to the list."},"style":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the main container for a menu."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the main container for a menu."},"listStyle":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the menu's `List` once it has been toggled open."},"listClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the menu's `List` once it has been toggled open."},"component":{"type":{"name":"union","value":[{"name":"func"},{"name":"string"}]},"required":true,"description":"The component to render the container as.","defaultValue":{"value":"'div'","computed":false}},"children":{"type":{"name":"union","value":[{"name":"element"},{"name":"arrayOf","value":{"name":"element"}}]},"required":false,"description":"This can either be a single `List` component or an array of `ListItem`, `ListItemControl`,\n`Divider`, or `Subheader` to display when the menu is open. If it is the `List` component,\nit will be cloned with some additional class names."},"isOpen":{"type":{"name":"bool"},"required":true,"description":"Boolean if the `Menu` is currently open."},"transitionName":{"type":{"name":"string"},"required":true,"description":"The transition name to use for the menu's enter and leave transitions","defaultValue":{"value":"'md-menu'","computed":false}},"transitionEnterTimeout":{"type":{"name":"number"},"required":true,"description":"The timeout for the enter transition.","defaultValue":{"value":"200","computed":false}},"transitionLeaveTimeout":{"type":{"name":"number"},"required":true,"description":"The timeout for the leave transition.","defaultValue":{"value":"200","computed":false}},"toggle":{"type":{"name":"node"},"required":false,"description":"The node to use as the toggle for the menu."},"position":{"type":{"name":"enum","value":[{"value":"Menu.Positions.TOP_LEFT","computed":true},{"value":"Menu.Positions.TOP_RIGHT","computed":true},{"value":"Menu.Positions.BOTTOM_LEFT","computed":true},{"value":"Menu.Positions.BOTTOM_RIGHT","computed":true},{"value":"Menu.Positions.CONTEXT","computed":true},{"value":"Menu.Positions.BELOW","computed":true}]},"required":true,"description":"The position that the menu should appear from. If the position is set to\n`Menu.Positions.CONTEXT`, the `onClose` function will be called when something\noutside of the `List` is clicked instead of something outside of the `Menu`.","defaultValue":{"value":"Positions.TOP_RIGHT","computed":true}},"close":{"type":{"name":"custom","raw":"deprecated(PropTypes.func, 'Use `onClose` instead.')"},"required":false,"description":"A function used to close the menu. This is used when the user clicks\noutside of the menu or any list item inside."},"onClose":{"type":{"name":"func"},"required":true,"description":"A function used to close the menu. This is used when the user clicks outside\nof the menu or when a `ListItem` is clicked."},"cascading":{"type":{"name":"bool"},"required":false,"description":"Boolean if the menu is cascading. This isn't really working too well yet."},"contained":{"type":{"name":"bool"},"required":false,"description":"Boolean if the width of the `List` should be limited to the width of the `toggle`"},"fullWidth":{"type":{"name":"bool"},"required":false,"description":"Boolean if the menu should be displayed full width instead of inline."},"autoclose":{"type":{"name":"custom","raw":"deprecated(PropTypes.bool, 'The menus will always autoclose as according to the specs')"},"required":false,"description":""},"limitHeight":{"type":{"name":"custom","raw":"deprecated(PropTypes.bool, 'The menus will always be limited in height as according to the specs')"},"required":false,"description":""},"expanderIconClassName":{"type":{"name":"custom","raw":"deprecated(\n  PropTypes.node,\n  'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\n  'expander icon'\n)"},"required":false,"description":""},"expanderIconChildren":{"type":{"name":"custom","raw":"deprecated(\n  PropTypes.node,\n  'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\n  'expander icon'\n)"},"required":false,"description":""}},"source":"src/js/Menus/Menu.js","component":"Menu"},{"description":"A simple wrapper for creating Menus wrapped with Button. The props used are a\ncombination of the `Menu` and `Button` components. Menu props will be extracted\nand any props that are not `Menu` related will be passed to the `Button`.\n\nThe only main difference is that the `children` for the button are now defined with\n`buttonChildren`.","methods":[],"props":{"id":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":""},"menuId":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":""},"listId":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":""},"style":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the button."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the button."},"menuStyle":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the menu."},"menuClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the menu."},"listStyle":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the menu's list when it is open."},"listClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the menu's list when it is open."},"buttonChildren":{"type":{"name":"node"},"required":false,"description":"Any children used to render icons or anything else for the button."},"onClick":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the button is clicked."},"onMenuToggle":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the menu's visiblity is toggled. The callback\nwill include the next `open` state and the click event."},"defaultOpen":{"type":{"name":"bool"},"required":false,"description":"Boolean if the MenuButton is open by default."},"position":{"type":{"name":"enum","value":[{"value":"Positions.TOP_LEFT","computed":true},{"value":"Positions.TOP_RIGHT","computed":true},{"value":"Positions.BOTTOM_LEFT","computed":true},{"value":"Positions.BOTTOM_RIGHT","computed":true},{"value":"Positions.BELOW","computed":true}]},"required":false,"description":"The position for the menu."},"children":{"type":{"name":"node"},"required":false,"description":"A list of `ListItem`s to render when the Menu is toggled open."},"fullWidth":{"type":{"name":"bool"},"required":false,"description":"Boolean if the `Menu` is displayed as full width."},"autoclose":{"type":{"name":"bool"},"required":false,"description":"Boolean if the `Menu` should autoclose when a `ListItem` is closed."},"contained":{"type":{"name":"bool"},"required":false,"description":"Boolean if the max width of the menu's list should be equal to the `Button`."},"transitionName":{"type":{"name":"string"},"required":false,"description":"An optional transition name to use for the menu transitions."},"transitionEnterTimeout":{"type":{"name":"number"},"required":false,"description":"An optional transition leave timeout to use for the menu transitions."},"transitionLeaveTimeout":{"type":{"name":"number"},"required":false,"description":"An optional transition leave timeout to use for the menu transitions."}},"source":"src/js/Menus/MenuButton.js","component":"MenuButton"}]