[{"description":"The `SelectField` is a component for a material design styled `select` component with\nbuilt-in accessibility. The [Listbox Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_listbox_role)\nwas used to create this component.","methods":[{"name":"focus","docblock":"A simple function for focusing the `SelectField` via refs.\n\n```js\n<SelectField ref={field => field.focus(); } ... />\n```","modifiers":[],"params":[],"returns":null,"description":"A simple function for focusing the `SelectField` via refs.\n\n```js\n<SelectField ref={field => field.focus(); } ... />\n```"}],"props":{"style":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the text field."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the text field."},"menuStyle":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the main `Menu` component."},"menuClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the main `Menu` component."},"block":{"type":{"name":"bool"},"required":false,"description":"Boolean if the text field in the select field should be displayed as a `block`."},"listStyle":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the list that gets created when the `SelectField`\nis open."},"listClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the list that gets created when the `SelectField`\nis open."},"inputStyle":{"type":{"name":"object"},"required":false,"description":"An optional style to apply to the text field's input."},"inputClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the text field's input."},"id":{"type":{"name":"custom","raw":"isRequiredForA11y(PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]))"},"required":false,"description":"An id to use for the select field. This is used for multiple parts of accessibility."},"label":{"type":{"name":"custom","raw":"(props, propName, componentName, location, propFullName, ...args) => {\n  const componentNameSafe = componentName || '<<anonymous>>';\n  const propFullNameSafe = propFullName || propName;\n  if (props.position === Positions.BELOW && typeof props[propName] !== 'undefined') {\n    return new Error(\n      `You provided a \\`${propFullNameSafe}\\` ${location} to the ${componentNameSafe} when ` +\n      'the `position` was set to `SelectField.Positions.BELOW`. Only the `placeholder` ' +\n      'prop may be used with this position.'\n    );\n  }\n\n  return PropTypes.node(props, propName, componentName, location, propFullName, ...args);\n}"},"required":false,"description":"An optional floating label to display with the `SelectField`. The `label` prop can not\nbe used when setting the `position` to `SelectField.Positions.BELOW`. You must use the\n`placeholder` prop instead."},"placeholder":{"type":{"name":"string"},"required":false,"description":"An optional placeholder to display with the `SelectField`."},"defaultValue":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":"An optional default value for the text field."},"value":{"type":{"name":"custom","raw":"controlled(PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]), 'onChange')"},"required":false,"description":"An optional value for the text field. This will make the `SelectField` controlled\nand require the `onChange` prop to be defined."},"defaultOpen":{"type":{"name":"bool"},"required":false,"description":"Boolean if the `SelectField` is open by default."},"onClick":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the select field's container is clicked."},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the 'keydown' event is triggered anywhere\nin the select field's container."},"isOpen":{"type":{"name":"custom","raw":"controlled(PropTypes.bool, 'onMenuToggle', 'defaultOpen')"},"required":false,"description":"An optional boolean if the select field is currently open and displaying the\nmenu items. If this prop is set, it makes the select field controlled and requires\nthe `onMenuToggle` prop to be defined."},"onMenuToggle":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the select field's `isOpen` state changes.\nThe callback will include the next state of `isOpen` and a click event.\n\n```js\nonMenuToggle(true, event);\n```"},"onChange":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the select field's value changes. This will\nbe triggered any time a user:\n- clicks a menu item\n- presses enter or space on a menu item\n- presses a letter or number while the menu is closed and has focus\n\nThe callback will include the selected value, the selected index, and the event.\n\n```js\nonChange(value, index, event);\n```"},"itemLabel":{"type":{"name":"string"},"required":false,"description":"An optional menu item key to use to extract the label/value to display in a `ListItem`.\nThis is only used if the `menuItem` is an object.","defaultValue":{"value":"'label'","computed":false}},"menuItems":{"type":{"name":"arrayOf","value":{"name":"union","value":[{"name":"number"},{"name":"string"},{"name":"object"}]}},"required":true,"description":"A list of menu items to display when the select field is open.","defaultValue":{"value":"[]","computed":false}},"position":{"type":{"name":"enum","value":[{"value":"SelectField.Positions.TOP_LEFT","computed":true},{"value":"SelectField.Positions.TOP_RIGHT","computed":true},{"value":"SelectField.Positions.BELOW","computed":true}]},"required":false,"description":"The position the menu appears from."},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean if the select field is disabled."},"iconChildren":{"type":{"name":"node"},"required":false,"description":"Any children used to display the icon in the select field.","defaultValue":{"value":"'arrow_drop_down'","computed":false}},"iconClassName":{"type":{"name":"string"},"required":false,"description":"An optional icon className used to display the icon in the select field."},"size":{"type":{"name":"number"},"required":false,"description":"An optional size for the select field's input tag.\n\n> Note: The size will automatically be determined if the `noAutoAdust` prop is not\nfalse. However, this prop will have precendence over the automatic size calculation."},"lineDirection":{"type":{"name":"enum","value":[{"value":"'left'","computed":false},{"value":"'center'","computed":false},{"value":"'right'","computed":false}]},"required":false,"description":"The direction that the text field divider expands from when the text field\ngains focus. If this is omitted, it will automatically match the direction\nof the `position` prop so that the line expands from the same direction\nas the menu."},"noAutoAdjust":{"type":{"name":"bool"},"required":false,"description":"Boolean if the select field should not attempt to automatically calculate the best\nsize for the select field's text field."},"keyboardMatchingTimeout":{"type":{"name":"number"},"required":true,"description":"The amount of time(ms) that should be used before the matching of menu items is reset.\nWhen using a keyboard, a user will be able to keep typing to get the best match of items.\nWhen the user stops typing for this duration, the matching will be reset, and the user\ncan start matching with different letters.","defaultValue":{"value":"1000","computed":false}},"paddedBlock":{"type":{"name":"bool"},"required":false,"description":"Boolean if the text field should be a padded block when the `block` prop is true."},"fullWidth":{"type":{"name":"bool"},"required":false,"description":"Boolean if the SelectField should span the entire width.","defaultValue":{"value":"true","computed":false}},"initiallyOpen":{"type":{"name":"custom","raw":"deprecated(PropTypes.bool, 'Use `defaultOpen` instead')"},"required":false,"description":""}},"source":"src/js/SelectFields/SelectField.js","component":"SelectField"}]