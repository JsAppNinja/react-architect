[{"description":"The `BottomNavigation` component is an alternative to the `NavigationDrawer` for handling navigation\nonly on mobile devices.","methods":[],"props":{"style":{"type":{"name":"object"},"required":false,"description":"An optional style to apply."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply."},"links":{"type":{"name":"custom","raw":"(props, propName, component, ...args) => {\n  const links = props[propName] || props.actions;\n  const len = links.length;\n\n  if (len < 3) {\n    return new Error(\n      `Only ${len} \\`${propName}\\` were given to the ${component}. At least 3 are required.`\n    );\n  } else if (len > 5) {\n    return new Error(\n      `${len} \\`${propName}\\` were given to the ${component}. No more than 5 may be given.`\n    );\n  }\n\n  return PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node.isRequired,\n    iconChildren: PropTypes.node,\n    iconClassName: PropTypes.string,\n  })).isRequired(props, propName, component, ...args);\n}"},"required":false,"description":"A list of objects to generate a bottom navigation link. There must be at least 3 and no more\nthan 5 links. A link has a shape of:\n\n```js\nlink: {\n  label: PropTypes.node.isRequired,\n  iconChildren: PropTypes.node,\n  iconClassName: PropTypes.string,\n  component: PropTypes.oneOfType([\n     PropTypes.func,\n     PropTypes.string,\n  ]),\n},\n```\n\nA link gets rendered as the `AccessibleFakeButton` component, so any additional props\nin the link's shape will be passed along."},"colored":{"type":{"name":"bool"},"required":false,"description":"Boolean if the bottom navigation should be colored with the primary color or whatever color\nwas a result of the `react-md-theme-bottom-navigations-colored` mixin."},"dynamic":{"type":{"name":"bool"},"required":false,"description":"Boolean if the bottom navigation should dynamically appear based on scrolling. When the user\nscrolls the `dynamicThreshold` amount, this component will either disappear (scrolling down)\nor appera (scrolling up)."},"dynamicThreshold":{"type":{"name":"number"},"required":true,"description":"The distance a user must scroll before the bottom navigation appears or disappears when it is `dyanamic`.","defaultValue":{"value":"20","computed":false}},"onNavChange":{"type":{"name":"func"},"required":false,"description":"An optional function to call when a link has been clicked. The callback will\ninclude the new active index and the click event.\n\n```js\nonNavChange(newActiveIndex, event);\n```"},"activeIndex":{"type":{"name":"custom","raw":"controlled(PropTypes.number, 'onNavChange')"},"required":false,"description":"An optional active index to use. This will make the component controlled and require the\n`onNavChange` prop to be defined."},"defaultActiveIndex":{"type":{"name":"number"},"required":true,"description":"The index for the link that is active by default.","defaultValue":{"value":"0","computed":false}},"defaultVisible":{"type":{"name":"bool"},"required":true,"description":"Boolean if the bottom navigation is visible by default. This *should* probably always\nbe true.","defaultValue":{"value":"true","computed":false}},"component":{"type":{"name":"union","value":[{"name":"func"},{"name":"string"}]},"required":true,"description":"The component to render the bottom navigation as.","defaultValue":{"value":"'footer'","computed":false}},"renderNode":{"type":{"name":"object"},"required":false,"description":"Since the `BottomNavigation` component uses the `Portal` component, you can pass an optional\nHTML Node to render in."},"transitionDuration":{"type":{"name":"number"},"required":true,"description":"The transition duration for the dynamic bottom navigation to appear or disappear. This should\nmatch the `$md-bottom-navigation-transition-time` variable.","defaultValue":{"value":"300","computed":false}},"onVisibilityChange":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the visibility of the bottom navigation changes. The callback\nwill include the new visibility.\n\n```js\nonVisibilityChange(!visible);\n```"},"onChange":{"type":{"name":"custom","raw":"deprecated(PropTypes.func, 'Use `onNavChange` instead')"},"required":false,"description":""},"initiallyVisible":{"type":{"name":"custom","raw":"deprecated(PropTypes.bool, 'Use `defaultVisible` instead')"},"required":false,"description":""},"initialActiveIndex":{"type":{"name":"custom","raw":"deprecated(PropTypes.number, 'Use `defaultActiveIndex` instead')"},"required":false,"description":""},"containerStyle":{"type":{"name":"custom","raw":"deprecated(PropTypes.object, 'Use `style` instead')"},"required":false,"description":""},"containerClassName":{"type":{"name":"custom","raw":"deprecated(PropTypes.string, 'Use `className` instead')"},"required":false,"description":""},"transitionName":{"type":{"name":"custom","raw":"deprecated(PropTypes.string, 'There is no CSSTransitionGroup used anymore')"},"required":false,"description":""},"transitionEnterTimeout":{"type":{"name":"custom","raw":"deprecated(PropTypes.number, 'Use `transitionDuration` instead')"},"required":false,"description":""},"transitionLeaveTimeout":{"type":{"name":"custom","raw":"deprecated(PropTypes.number, 'Use `transitionDuration` instead')"},"required":false,"description":""},"actions":{"type":{"name":"custom","raw":"deprecated(PropTypes.array, 'Use `links` instead')"},"required":false,"description":""}},"source":"src/js/BottomNavigations/BottomNavigation.js","component":"BottomNavigation"}]