{"placeholders":[],"variables":[{"description":"The error color to use on text fields. This will be applied to the\nany icons, text field error message, floating label, and the text\nfield divider when there is an error.\n","commentRange":{"start":5,"end":8},"context":{"type":"variable","name":"md-text-field-error-color","value":"$md-red-500","scope":"default","line":{"start":9,"end":9}},"type":"Color","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":777,"end":799}}},{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-divider--text-field::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-divider--text-field-error,\n    .md-divider--text-field-error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":927,"end":940}}},{"description":"Modifies the styles of the text-field-message ONLY if:\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-text-field-error-color`\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-message","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-message-container {\n      color: get-color('hint', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-message-container--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1054,"end":1066}}},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1136,"end":1154}}}]},{"description":"The text field divider's active height. This is the bar that\ngets colored with the primary color or the error color.\n","commentRange":{"start":11,"end":13},"context":{"type":"variable","name":"md-text-field-divider-active-height","value":"2px","scope":"default","line":{"start":14,"end":14}},"type":"Number","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes only css for the text field dividers. This is really used if\nyou do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider","code":"\n  .md-divider--text-field {\n    margin-top: $md-text-field-divider-top-padding;\n\n    &::after {\n      background: $primary-color;\n      content: '';\n      display: block;\n      height: $md-text-field-divider-active-height;\n      transition-duration: $md-transition-time;\n      transition-property: width;\n      width: 0;\n    }\n  }\n\n  .md-divider--text-field-expanded::after {\n    width: 100%;\n  }\n\n  .md-divider--text-field-error,\n  .md-divider--text-field-error::after {\n    background: $error-color;\n  }\n\n  .md-divider--expand-from-left::after {\n    left: 0;\n  }\n\n  .md-divider--expand-from-center::after {\n    margin: auto;\n  }\n\n  .md-divider--expand-from-right::after {\n    @extend %md-cell--right;\n\n    right: 0;\n  }\n","line":{"start":874,"end":911}}}]},{"description":"A Map of custom sizes for text fields. Set this to null if you do not want any\ncustom sizes by default. This is a key value pair of String and List. The key will\nbe used to generate a `--suffix` class name to apply to floating labels and text\nfields. The list must have a length of 4 where it is the:\n  - custom font size\n  - the transition duration modifier\n  - the y position of the label when inactive on mobile devices\n  - the y position of the label when inactive on desktop screens\n\n","commentRange":{"start":16,"end":25},"context":{"type":"variable","name":"md-text-field-custom-sizes","value":"(\n  title: ($md-display-1-font-size, .25s, 42px, 36px),\n)","scope":"default","line":{"start":26,"end":28}},"type":"Map","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Boolean if the multiline styling should be included by default.\n","commentRange":{"start":30,"end":31},"context":{"type":"variable","name":"md-text-field-include-multiline","value":"true","scope":"default","line":{"start":32,"end":32}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the floating label styling should be included by default.\n","commentRange":{"start":34,"end":35},"context":{"type":"variable","name":"md-text-field-include-floating-label","value":"true","scope":"default","line":{"start":36,"end":36}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the block styling should be included by default.\n","commentRange":{"start":38,"end":39},"context":{"type":"variable","name":"md-text-field-include-block","value":"true","scope":"default","line":{"start":40,"end":40}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the icon styling for text fields should be included by default.\n","commentRange":{"start":42,"end":43},"context":{"type":"variable","name":"md-text-field-include-icon","value":"true","scope":"default","line":{"start":44,"end":44}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the message styling for text fields should be included by default.\n","commentRange":{"start":46,"end":47},"context":{"type":"variable","name":"md-text-field-include-message","value":"true","scope":"default","line":{"start":48,"end":48}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the password text field styling should be included by default.\n","commentRange":{"start":50,"end":51},"context":{"type":"variable","name":"md-text-field-include-password","value":"true","scope":"default","line":{"start":52,"end":52}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the minimal styling for inline indicators for text fields should be included by default.\n","commentRange":{"start":54,"end":55},"context":{"type":"variable","name":"md-text-field-include-inline-indicator","value":"true","scope":"default","line":{"start":56,"end":56}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}}],"functions":[],"mixins":[{"description":"Creates the styles for text fields on mobile devices. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","commentRange":{"start":149,"end":177},"context":{"type":"mixin","name":"react-md-text-fields-mobile","code":"\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile;\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n","line":{"start":178,"end":203}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-fields-mobile;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the `block` styling\n    should be included."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the minimal styling for\n    using icons should be included."},{"type":"Boolean","name":"include-message","default":"$md-text-field-include-message","description":"Boolean if the text field message\n    styling should be included. This is the css for the counter and/or help/error text."},{"type":"Boolean","name":"include-password","default":"$md-text-field-include-password","description":"Boolean if the styling for password\n    text fields should be included."},{"type":"Boolean","name":"include-inline-indicator","default":"$md-text-field-include-inline-indicator","description":"Bolean if the styling\n    for inline indicators should be included. If the `$include-password` param is `true`, this will automatically\n    be included as well."},{"type":"Map","name":"custom-sizes","default":"$md-text-field-custom-sizes","description":"A map of custom sizes to apply. If you do not\n    want any custom sizes, set the global or this param to null."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-container-mobile"},{"type":"mixin","name":"react-md-text-field-mobile"},{"type":"mixin","name":"react-md-text-field-divider-mobile"},{"type":"mixin","name":"react-md-text-field-floating-label-mobile"},{"type":"mixin","name":"react-md-text-field-icon-mobile"},{"type":"mixin","name":"react-md-text-field-inline-indicator-mobile"},{"type":"mixin","name":"react-md-text-field-custom-sizes-mobile"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries for text fields on mobile devices and desktop screens. The floating\nlabels, blocks, icons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-fields-mobile($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-fields-desktop($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n","line":{"start":288,"end":303}}}]},{"description":"Creates the styles for text fields on desktop screens. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for desktop screens.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","commentRange":{"start":205,"end":233},"context":{"type":"mixin","name":"react-md-text-fields-desktop","code":"\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop;\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n","line":{"start":234,"end":259}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-fields-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the `block` styling\n    should be included."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the minimal styling for\n    using icons should be included."},{"type":"Boolean","name":"include-message","default":"$md-text-field-include-message","description":"Boolean if the text field message\n    styling should be included. This is the css for the counter and/or help/error text."},{"type":"Boolean","name":"include-password","default":"$md-text-field-include-password","description":"Boolean if the styling for password\n    text fields should be included."},{"type":"Boolean","name":"include-inline-indicator","default":"$md-text-field-include-inline-indicator","description":"Bolean if the styling\n    for inline indicators should be included. If the `$include-password` param is `true`, this will automatically\n    be included as well."},{"type":"Map","name":"custom-sizes","default":"$md-text-field-custom-sizes","description":"A map of custom sizes to apply. If you do not\n    want any custom sizes, set the global or this param to null."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-container-desktop"},{"type":"mixin","name":"react-md-text-field-desktop"},{"type":"mixin","name":"react-md-text-field-divider-desktop"},{"type":"mixin","name":"react-md-text-field-floating-label-desktop"},{"type":"mixin","name":"react-md-text-field-icon-desktop"},{"type":"mixin","name":"react-md-text-field-inline-indicator-desktop"},{"type":"mixin","name":"react-md-text-field-custom-sizes-desktop"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries for text fields on mobile devices and desktop screens. The floating\nlabels, blocks, icons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-fields-mobile($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-fields-desktop($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n","line":{"start":288,"end":303}}}]},{"description":"Includes the media queries for text fields on mobile devices and desktop screens. The floating\nlabels, blocks, icons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","commentRange":{"start":261,"end":287},"context":{"type":"mixin","name":"react-md-text-fields-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-fields-mobile($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-fields-desktop($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n","line":{"start":288,"end":303}},"example":[{"type":"scss","code":"@include react-md-text-fields-media;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the `block` styling\n    should be included."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the minimal styling for\n    using icons should be included."},{"type":"Boolean","name":"include-message","default":"$md-text-field-include-message","description":"Boolean if the text field message\n    styling should be included. This is the css for the counter and/or help/error text."},{"type":"Boolean","name":"include-password","default":"$md-text-field-include-password","description":"Boolean if the styling for password\n    text fields should be included."},{"type":"Boolean","name":"include-inline-indicator","default":"$md-text-field-include-inline-indicator","description":"Bolean if the styling\n    for inline indicators should be included. If the `$include-password` param is `true`, this will automatically\n    be included as well."},{"type":"Map","name":"custom-sizes","default":"$md-text-field-custom-sizes","description":"A map of custom sizes to apply. If you do not\n    want any custom sizes, set the global or this param to null."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-fields-mobile"},{"type":"mixin","name":"react-md-text-fields-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","commentRange":{"start":305,"end":345},"context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}},"example":[{"type":"scss","code":"@include react-md-text-fields;\n\n// or\n$md-primary-color: $md-light-blue-500;\n@include react-md-text-fields;\n\n// or\n@include react-md-text-fields($md-light-theme, $md-light-blue-500);\n","description":"Basic Usage SCSS"}],"see":[{"description":"Includes the media queries for text fields on mobile devices and desktop screens. The floating\nlabels, blocks, icons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-fields-mobile($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-fields-desktop($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n","line":{"start":288,"end":303}}}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-media","default":"$md-media-included","description":"Boolean if the media queries should be included."},{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the `block` styling\n    should be included."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the minimal styling for\n    using icons should be included."},{"type":"Boolean","name":"include-message","default":"$md-text-field-include-message","description":"Boolean if the text field message\n    styling should be included. This is the css for the counter and/or help/error text."},{"type":"Boolean","name":"include-password","default":"$md-text-field-include-password","description":"Boolean if the styling for password\n    text fields should be included."},{"type":"Boolean","name":"include-inline-indicator","default":"$md-text-field-include-inline-indicator","description":"Bolean if the styling\n    for inline indicators should be included. If the `$include-password` param is `true`, this will automatically\n    be included as well."},{"type":"Map","name":"custom-sizes","default":"$md-text-field-custom-sizes","description":"This is a map of size names and font sizes\n    to apply as custom sizes for the text field."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-fields-media"},{"type":"mixin","name":"react-md-text-field-container"},{"type":"mixin","name":"react-md-text-field"},{"type":"mixin","name":"react-md-text-field-divider"},{"type":"mixin","name":"react-md-text-field-floating-label"},{"type":"mixin","name":"react-md-text-field-message"},{"type":"mixin","name":"react-md-text-field-icon"},{"type":"mixin","name":"react-md-text-field-inline-indicator"},{"type":"mixin","name":"react-md-text-field-password"},{"type":"mixin","name":"react-md-text-field-custom-sizes"},{"type":"variable","name":"md-text-field-custom-sizes"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes every component, transition, and typography including their\nmedia queries if the `$md-media-included` variable is `true`. You can\nmodify any global variables before including this mixin to change the overall\ntheme.\n\n","context":{"type":"mixin","name":"react-md-everything","code":"\n  @include react-md-typography;\n  @include react-md-accessibility;\n  @include react-md-grid;\n  @include react-md-transitions;\n\n  @include react-md-autocompletes;\n  @include react-md-avatars;\n  @include react-md-bottom-navigations;\n  @include react-md-buttons;\n  @include react-md-cards;\n  @include react-md-chips;\n  @include react-md-collapsers;\n  @include react-md-data-tables;\n  @include react-md-dialogs;\n  @include react-md-dividers;\n  @include react-md-drawers;\n  @include react-md-expansion-panels;\n  @include react-md-file-inputs;\n  @include react-md-inks;\n  @include react-md-icons;\n  @include react-md-lists;\n  @include react-md-media;\n  @include react-md-menus;\n  @include react-md-navigation-drawers;\n  @include react-md-overlays;\n  @include react-md-papers;\n  @include react-md-pickers;\n  @include react-md-progress;\n  @include react-md-select-fields;\n  @include react-md-selection-controls;\n  @include react-md-sliders;\n  @include react-md-subheaders;\n  @include react-md-snackbars;\n  @include react-md-tabs;\n  @include react-md-text-fields;\n  @include react-md-toolbars;\n  @include react-md-tooltips;\n\n  @include react-md-helpers-everything;\n  @include react-md-colors;\n","line":{"start":53,"end":94}}}]},{"description":"Themes all parts of the text fields if they are included.\n\n","commentRange":{"start":392,"end":418},"context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}},"example":[{"type":"scss","code":".my-subtheme {\n  @include react-md-theme-text-fields($md-blue-500);\n}","description":"Example Usage SCSS"}],"see":[{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1136,"end":1154}}},{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-divider--text-field::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-divider--text-field-error,\n    .md-divider--text-field-error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":927,"end":940}}},{"description":"Modifies the styles of the text-field-message ONLY if:\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-text-field-error-color`\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-message","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-message-container {\n      color: get-color('hint', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-message-container--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1054,"end":1066}}},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":777,"end":799}}}],"parameter":[{"type":"Color","name":"primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the `block` styling\n    should be included."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the minimal styling for\n    using icons should be included."},{"type":"Boolean","name":"include-message","default":"$md-text-field-include-message","description":"Boolean if the text field message\n    styling should be included. This is the css for the counter and/or help/error text."},{"type":"Boolean","name":"include-password","default":"$md-text-field-include-password","description":"Boolean if the styling for password\n    text fields should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-theme-placeholders"},{"type":"mixin","name":"react-md-theme-text-field-divider"},{"type":"mixin","name":"react-md-theme-text-field-floating-label"},{"type":"mixin","name":"react-md-theme-text-field-icon"},{"type":"mixin","name":"react-md-theme-text-field-message"},{"type":"function","name":"get-color"},{"type":"variable","name":"md-light-theme"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Updates the styles of every component with the new theme colors. If there\nare components that do not change if the `$light-theme` variable is the same,\ntheir updated styles will not be included. This is useful if you want to switch\nbetween the light or dark theme, or even the entire theme colors while keeping\nthe base css the same between all themes.\n\nIn addition, if the theme colors do not switch, those styles will not be created.\nSo this allows the same colors between light and dark themes.\n\nIf you switch between the light and dark theme, you will need to give a `$html-class-name`\nThat will nest every component inside.\n\n","context":{"type":"mixin","name":"react-md-theme-everything","code":"\n  @if $html-class-name != null {\n    @include react-md-theme-typography($html-class-name, $light-theme);\n\n    .#{$html-class-name} {\n      @include react-md-theme-avatars($light-theme);\n      @include react-md-theme-buttons($primary-color, $secondary-color, $light-theme);\n      @include react-md-theme-cards($light-theme);\n      @include react-md-theme-chips($light-theme);\n      @include react-md-theme-data-tables($light-theme);\n      @include react-md-theme-dividers($light-theme);\n      @include react-md-theme-expansion-panels($light-theme);\n      @include react-md-theme-icons($light-theme);\n      @include react-md-theme-inks($light-theme);\n      @include react-md-theme-lists($light-theme);\n      @include react-md-theme-pickers($primary-color, $light-theme);\n      @include react-md-theme-progress($secondary-color, $progress-swatch);\n      @include react-md-theme-selection-controls($secondary-color, $light-theme);\n      @include react-md-theme-sliders($primary-color, $secondary-color, $light-theme);\n      @include react-md-theme-tabs($secondary-color);\n      @include react-md-theme-text-fields($primary-color, $light-theme, $error-color);\n      @include react-md-theme-toolbars($light-theme);\n\n      @include react-md-theme-colors($primary-color, $secondary-color, $light-theme);\n    }\n  } @else {\n    @include react-md-theme-avatars($light-theme);\n    @include react-md-theme-buttons($primary-color, $secondary-color, $light-theme);\n    @include react-md-theme-cards($light-theme);\n    @include react-md-theme-chips($light-theme);\n    @include react-md-theme-data-tables($light-theme);\n    @include react-md-theme-dividers($light-theme);\n    @include react-md-theme-expansion-panels($light-theme);\n    @include react-md-theme-icons($light-theme);\n    @include react-md-theme-inks($light-theme);\n    @include react-md-theme-lists($light-theme);\n    @include react-md-theme-pickers($primary-color, $light-theme);\n    @include react-md-theme-progress($secondary-color, $progress-swatch);\n    @include react-md-theme-selection-controls($secondary-color, $light-theme);\n    @include react-md-theme-sliders($primary-color, $secondary-color, $light-theme);\n    @include react-md-theme-tabs($secondary-color);\n    @include react-md-theme-text-fields($primary-color, $light-theme, $error-color);\n    @include react-md-theme-toolbars($light-theme);\n\n    @include react-md-theme-colors($primary-color, $secondary-color, $light-theme);\n  }\n\n","line":{"start":145,"end":199}}}]},{"description":"Creates the styles for the text-field-container on mobile devices. This\nshould normally be used within the `react-md-text-fields-mobile` mixin.\n\n","commentRange":{"start":452,"end":461},"context":{"type":"mixin","name":"react-md-text-field-container-mobile","code":"\n  @if $include-block {\n    .md-text-field-container--input-block {\n      padding-bottom: $md-text-field-mobile-block-padding;\n      padding-top: $md-text-field-mobile-block-padding;\n    }\n\n    .md-text-field-container--multiline-block {\n      margin-bottom: $md-text-field-mobile-block-padding;\n      margin-top: $md-text-field-mobile-block-padding;\n    }\n\n    .md-text-field-container--padded-block {\n      padding-left: $md-text-field-mobile-block-padding;\n      padding-right: $md-text-field-mobile-block-padding;\n    }\n  }\n","line":{"start":462,"end":479}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @import react-md-text-field-container-mobile;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if block styling should\n    be included."}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on mobile devices. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-mobile","code":"\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile;\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n","line":{"start":178,"end":203}}},{"description":"Includes the media queries for the text-field container.\n\n","context":{"type":"mixin","name":"react-md-text-field-container-media","code":"\n  @if $include-block {\n    @media #{$md-mobile-media} {\n      @include react-md-text-field-container-mobile($include-block);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-text-field-container-desktop($include-block);\n    }\n  }\n","line":{"start":519,"end":529}}}]},{"description":"Creates the styles for the text-field-container on desktop screens. This\nshould normally be used within the `react-md-text-fields-desktop` mixin.\n\n","commentRange":{"start":482,"end":491},"context":{"type":"mixin","name":"react-md-text-field-container-desktop","code":"\n  @if $include-block {\n    .md-text-field-container--input-block {\n      padding-bottom: $md-text-field-desktop-block-padding;\n      padding-top: $md-text-field-desktop-block-padding;\n    }\n\n    .md-text-field-container--multiline-block {\n      margin-bottom: $md-text-field-desktop-block-padding;\n      margin-top: $md-text-field-desktop-block-padding;\n    }\n\n    .md-text-field-container--padded-block {\n      padding-left: $md-text-field-desktop-block-padding;\n      padding-right: $md-text-field-desktop-block-padding;\n    }\n  }\n","line":{"start":492,"end":509}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @import react-md-text-field-container-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if block styling should\n    be included."}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on desktop screens. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for desktop screens.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-desktop","code":"\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop;\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n","line":{"start":234,"end":259}}},{"description":"Includes the media queries for the text-field container.\n\n","context":{"type":"mixin","name":"react-md-text-field-container-media","code":"\n  @if $include-block {\n    @media #{$md-mobile-media} {\n      @include react-md-text-field-container-mobile($include-block);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-text-field-container-desktop($include-block);\n    }\n  }\n","line":{"start":519,"end":529}}}]},{"description":"Includes the media queries for the text-field container.\n\n","commentRange":{"start":512,"end":518},"context":{"type":"mixin","name":"react-md-text-field-container-media","code":"\n  @if $include-block {\n    @media #{$md-mobile-media} {\n      @include react-md-text-field-container-mobile($include-block);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-text-field-container-desktop($include-block);\n    }\n  }\n","line":{"start":519,"end":529}},"example":[{"type":"scss","code":"@import react-md-text-field-container-media;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if block styling should\n    be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-container-mobile"},{"type":"mixin","name":"react-md-text-field-container-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Includes only the `md-text-field-container` css. This should normally be used from\nthe `react-md-text-fields` mixin. The placeholders will also be styled accordingly.\n\n","commentRange":{"start":531,"end":547},"context":{"type":"mixin","name":"react-md-text-field-container","code":"\n\n  .md-text-field-container {\n    @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n\n    position: relative;\n\n    // scss-lint:disable VendorPrefix, PseudoElement\n    :-moz-placeholder {\n      opacity: 1;\n    }\n\n    ::-moz-placeholder {\n      opacity: 1;\n    }\n\n    :-ms-input-placeholder {\n      opacity: 1;\n    }\n\n    ::-webkit-input-placeholder {\n      opacity: 1;\n    }\n  }\n\n  .md-text-field-container--input {\n    line-height: 1;\n  }\n\n  @if $include-block {\n    .md-text-field-container--input-block {\n      display: flex;\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-multiline-container,\n    .md-text-field-container--multiline {\n      transition-duration: $md-transition-time;\n      transition-property: height;\n    }\n\n    .md-text-field-multiline-container {\n      position: relative;\n    }\n  }\n","line":{"start":548,"end":598}},"example":[{"type":"scss","code":"@include react-md-text-field-container;\n\n// or\n$md-primary-color: $md-orange-500;\n@include react-md-text-field-container;\n","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if currently using the light\n    theme."},{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the\n    multiline text field css should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the block styling\n    for text fields should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-theme-placeholders"},{"type":"function","name":"get-color"},{"type":"variable","name":"md-transition-time"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Includes the css for the input / textarea tags for text fields. This is normally\nused only within the `react-md-text-fields` mixin.\n\n","commentRange":{"start":602,"end":613},"context":{"type":"mixin","name":"react-md-text-field","code":"\n  .md-text-field {\n    background: none;\n    border: 0;\n    line-height: inherit;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:-webkit-autofill,\n    &:-webkit-autofill:focus {\n      box-shadow: 0 0 0 50px $md-white-base inset;\n    }\n  }\n\n  .md-text-field--margin {\n    margin-top: 13px;\n  }\n\n  @if $include-multiline {\n    .md-text-field--multiline {\n      padding-bottom: 0;\n      padding-top: 0;\n      resize: none;\n    }\n\n    .md-text-field--multiline-mask {\n      overflow: hidden;\n      position: absolute;\n      visibility: hidden;\n      z-index: -1;\n    }\n  }\n","line":{"start":614,"end":650}},"example":[{"type":"scss","code":"@include react-md-text-field;","description":"Basic Usage SCSS"}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text field should be styled\n    for the light-theme."},{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline styling\n    of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the floating\n    label styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-white-base"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Creates the css for styling text fields on a mobile device. This should\nbe used within media queries.\n\n","commentRange":{"start":652,"end":661},"context":{"type":"mixin","name":"react-md-text-field-mobile","code":"\n  .md-text-field {\n    font-size: $md-text-field-mobile-font-size;\n  }\n\n  @if $include-floating-label {\n    .md-text-field--floating-margin {\n      margin-top: 37px;\n    }\n  }\n\n","line":{"start":662,"end":673}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-mobile;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-mobile-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on mobile devices. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-mobile","code":"\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile;\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n","line":{"start":178,"end":203}}},{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-floating-label);\n  }\n","line":{"start":705,"end":713}}}]},{"description":"Creates the css for styling text fields on a mobile device. This should\nbe used within media queries.\n\n","commentRange":{"start":675,"end":684},"context":{"type":"mixin","name":"react-md-text-field-desktop","code":"\n  .md-text-field {\n    font-size: $md-text-field-desktop-font-size;\n  }\n\n  @if $include-floating-label {\n    .md-text-field--floating-margin {\n      margin-top: 33px;\n    }\n  }\n","line":{"start":685,"end":695}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-desktop-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on desktop screens. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for desktop screens.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-desktop","code":"\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop;\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n","line":{"start":234,"end":259}}},{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-floating-label);\n  }\n","line":{"start":705,"end":713}}}]},{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","commentRange":{"start":697,"end":704},"context":{"type":"mixin","name":"react-md-text-field-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-floating-label);\n  }\n","line":{"start":705,"end":713}},"example":[{"type":"scss","code":"@include react-md-text-field-media;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-mobile"},{"type":"mixin","name":"react-md-text-field-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Includes the styles for the text field's floating label.\n\n","commentRange":{"start":717,"end":725},"context":{"type":"mixin","name":"react-md-text-field-floating-label","code":"\n  .md-floating-label {\n    color: get-color('secondary', $light-theme);\n    cursor: text;\n    line-height: 1;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    transition-duration: $md-transition-time;\n    transition-property: transform, font-size, color;\n    white-space: nowrap;\n  }\n\n  .md-floating-label--disabled {\n    color: get-color('disabled', $light-theme);\n  }\n\n  .md-floating-label--floating {\n    font-size: $md-text-field-active-font-size;\n  }\n\n  .md-floating-label--active {\n    color: $primary-color;\n  }\n\n  .md-floating-label--error {\n    color: $error-color;\n  }\n\n  .md-floating-label--icon-offset {\n    left: 40px;\n  }\n","line":{"start":726,"end":758}},"example":[{"type":"scss","code":"@include react-md-text-field-floating-label;","description":"Example Usage SCSS"}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-transition-time"},{"type":"variable","name":"md-text-field-active-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":761,"end":776},"context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":777,"end":799}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-floating-label($md-light-blue-400, true, $md-orange-500);\n}","description":"Example Usage SCSS"}],"see":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to use."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."},{"type":"Color","name":"error-color","default":"$md-text-field-error-color","description":"The error color to use."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-primary-color"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-text-field-error-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}]},{"description":"Creates the styles for the text field floating labels for mobile devices.\nThis should be used within a media query.\n\n","commentRange":{"start":801,"end":807},"context":{"type":"mixin","name":"react-md-text-field-floating-label-mobile","code":"\n  .md-floating-label--inactive {\n    $text-field-size: floor($md-text-field-mobile-font-size * $md-line-height);\n    $distance: $md-text-field-mobile-top-padding + $md-text-field-active-font-size + ($text-field-size / 2);\n\n    transform: translate3d(0, $distance, 0);\n  }\n\n  .md-floating-label--inactive-sized {\n    font-size: $md-text-field-mobile-font-size;\n  }\n\n  .md-floating-label--floating {\n    transform: translate3d(0, 16px, 0);\n  }\n","line":{"start":808,"end":823}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-floating-label-mobile;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-mobile-font-size"},{"type":"variable","name":"md-line-height"},{"type":"variable","name":"md-text-field-mobile-top-padding"},{"type":"variable","name":"md-text-field-active-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on mobile devices. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-mobile","code":"\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile;\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n","line":{"start":178,"end":203}}},{"description":"Includes the media queries and styles for the text field floating labels..\n\n","context":{"type":"mixin","name":"react-md-text-field-floating-label-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n","line":{"start":853,"end":861}}}]},{"description":"Creates the styles for the text field floating labels for desktop screens.\nThis should be used within a media query.\n\n","commentRange":{"start":825,"end":831},"context":{"type":"mixin","name":"react-md-text-field-floating-label-desktop","code":"\n  .md-floating-label--inactive {\n    $text-field-size: floor($md-text-field-desktop-font-size * $md-line-height);\n    $distance: $md-text-field-desktop-top-padding + $md-text-field-active-font-size + ($text-field-size / 2);\n\n    transform: translate3d(0, $distance, 0);\n  }\n\n  .md-floating-label--inactive-sized {\n    font-size: $md-text-field-desktop-font-size;\n  }\n\n  .md-floating-label--floating {\n    transform: translate3d(0, 12px, 0);\n  }\n","line":{"start":832,"end":847}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-floating-label-desktop;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-desktop-font-size"},{"type":"variable","name":"md-line-height"},{"type":"variable","name":"md-text-field-desktop-top-padding"},{"type":"variable","name":"md-text-field-active-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on desktop screens. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for desktop screens.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-desktop","code":"\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop;\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n","line":{"start":234,"end":259}}},{"description":"Includes the media queries and styles for the text field floating labels..\n\n","context":{"type":"mixin","name":"react-md-text-field-floating-label-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n","line":{"start":853,"end":861}}}]},{"description":"Includes the media queries and styles for the text field floating labels..\n\n","commentRange":{"start":849,"end":852},"context":{"type":"mixin","name":"react-md-text-field-floating-label-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n","line":{"start":853,"end":861}},"example":[{"type":"scss","code":"@include react-md-text-field-floating-label-media;","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-floating-label-mobile"},{"type":"mixin","name":"react-md-text-field-floating-label-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Includes only css for the text field dividers. This is really used if\nyou do not use the `react-md-text-fields` mixin.\n\n","commentRange":{"start":864,"end":873},"context":{"type":"mixin","name":"react-md-text-field-divider","code":"\n  .md-divider--text-field {\n    margin-top: $md-text-field-divider-top-padding;\n\n    &::after {\n      background: $primary-color;\n      content: '';\n      display: block;\n      height: $md-text-field-divider-active-height;\n      transition-duration: $md-transition-time;\n      transition-property: width;\n      width: 0;\n    }\n  }\n\n  .md-divider--text-field-expanded::after {\n    width: 100%;\n  }\n\n  .md-divider--text-field-error,\n  .md-divider--text-field-error::after {\n    background: $error-color;\n  }\n\n  .md-divider--expand-from-left::after {\n    left: 0;\n  }\n\n  .md-divider--expand-from-center::after {\n    margin: auto;\n  }\n\n  .md-divider--expand-from-right::after {\n    @extend %md-cell--right;\n\n    right: 0;\n  }\n","line":{"start":874,"end":911}},"example":[{"type":"scss","code":"@include react-md-text-field-divider;","description":"Example Usage SCSS"}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-divider-top-padding"},{"type":"variable","name":"md-text-field-divider-active-height"},{"type":"variable","name":"md-transition-time"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":913,"end":926},"context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-divider--text-field::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-divider--text-field-error,\n    .md-divider--text-field-error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":927,"end":940}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-divider($md-light-blue-400, true, $md-orange-500);\n}","description":"Example Usage SCSS"}],"see":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to use."},{"type":"Color","name":"error-color","default":"$md-text-field-error-color","description":"The error color to use."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-primary-color"},{"type":"variable","name":"md-text-field-error-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}]},{"description":"Creates the styles for the text field dividers for mobile devices.\nThis should be used within a media query.\n\n","commentRange":{"start":942,"end":948},"context":{"type":"mixin","name":"react-md-text-field-divider-mobile","code":"\n  .md-divider--text-field {\n    margin-bottom: $md-text-field-mobile-divider-bottom-padding;\n  }\n","line":{"start":949,"end":953}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-divider-mobile;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-mobile-divider-bottom-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on mobile devices. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-mobile","code":"\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile;\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n","line":{"start":178,"end":203}}},{"description":"Includes the mobile and desktop media queries for the text field dividers.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n","line":{"start":972,"end":980}}}]},{"description":"Creates the styles for the text field dividers for mobile devices.\nThis should be used within a media query.\n\n","commentRange":{"start":955,"end":961},"context":{"type":"mixin","name":"react-md-text-field-divider-desktop","code":"\n  .md-divider--text-field {\n    margin-bottom: $md-text-field-desktop-divider-bottom-padding;\n  }\n","line":{"start":962,"end":966}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-divider-desktop;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-desktop-divider-bottom-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on desktop screens. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for desktop screens.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-desktop","code":"\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop;\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n","line":{"start":234,"end":259}}},{"description":"Includes the mobile and desktop media queries for the text field dividers.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n","line":{"start":972,"end":980}}}]},{"description":"Includes the mobile and desktop media queries for the text field dividers.\n\n","commentRange":{"start":968,"end":971},"context":{"type":"mixin","name":"react-md-text-field-divider-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n","line":{"start":972,"end":980}},"example":[{"type":"scss","code":"@include react-md-text-field-divider-media;","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-divider-mobile"},{"type":"mixin","name":"react-md-text-field-divider-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Includes the styles for the text field message / counter component.\n\n","commentRange":{"start":982,"end":991},"context":{"type":"mixin","name":"react-md-text-field-message","code":"\n  .md-text-field-message-container {\n    color: get-color('hint', $light-theme);\n    display: flex;\n    font-size: $md-text-field-message-font-size;\n    justify-content: space-between;\n  }\n\n  .md-text-field-message-container--error {\n    color: $error-color;\n  }\n\n  .md-text-field-message-container--count-only {\n    justify-content: flex-end;\n  }\n\n  @if $include-icon {\n    .md-text-field-message-container--left-icon-offset {\n      margin-left: 40px;\n    }\n\n    .md-text-field-message-container--right-icon-offset {\n      margin-right: 40px;\n    }\n  }\n\n  .md-text-field-message {\n    flex-grow: 1;\n    transition-duration: $md-transition-time;\n    transition-property: opacity;\n  }\n\n  .md-text-field-message--counter {\n    display: block;\n    flex-grow: initial;\n    flex-shrink: 0;\n    padding-left: $md-default-padding;\n  }\n\n  .md-text-field-message--inactive {\n    opacity: 0;\n  }\n\n  .md-text-field-message--active {\n    opacity: 1;\n  }\n","line":{"start":992,"end":1038}},"example":[{"type":"scss","code":"@include react-md-text-field-message;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the styles for text fields\n    with icons and messages shuld be included."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-text-field-message-font-size"},{"type":"variable","name":"md-transition-time"},{"type":"variable","name":"md-default-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Modifies the styles of the text-field-message ONLY if:\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-text-field-error-color`\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":1040,"end":1053},"context":{"type":"mixin","name":"react-md-theme-text-field-message","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-message-container {\n      color: get-color('hint', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-message-container--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1054,"end":1066}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-message(true);\n}","description":"Example Usage SCSS"}],"see":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."},{"type":"Color","name":"error-color","default":"$md-text-field-error-color","description":"The error color to use."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-text-field-error-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}]},{"description":"Includes the styles for using icons with text fields. This is really only useful if you did\nnot use the `react-md-text-fields` mixin.\n\n","commentRange":{"start":1074,"end":1083},"context":{"type":"mixin","name":"react-md-text-field-icon","code":"\n  .md-text-field-divider-container {\n    display: inline-block;\n  }\n\n  .md-text-field-divider-container--grow {\n    display: block;\n    flex-grow: 1;\n  }\n\n  .md-text-field-icon + .md-text-field-divider-container,\n  .md-text-field-divider-container + .md-text-field-icon {\n    margin-left: 16px;\n  }\n\n  .md-text-field-icon--disabled {\n    color: get-color('disabled', $light-theme);\n  }\n\n  .md-text-field-icon--active {\n    color: $primary-color;\n  }\n\n  .md-text-field-icon--error {\n    color: $error-color;\n  }\n\n  .md-text-field-icon-container {\n    align-items: flex-end;\n    display: flex;\n    width: 100%;\n  }\n","line":{"start":1084,"end":1116}},"example":[{"type":"scss","code":"@include react-md-text-field-icon;","description":"Example Usage SCSS"}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":1120,"end":1135},"context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1136,"end":1154}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-icon($md-light-blue-400, true, $md-orange-500);\n}","description":"Example Usage SCSS"}],"see":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to use."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."},{"type":"Color","name":"error-color","default":"$md-text-field-error-color","description":"The error color to use."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-primary-color"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-text-field-error-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}]},{"description":"Creates the styles for text field icons on mobile devices. This should be included within\na media query.\n\n","commentRange":{"start":1156,"end":1162},"context":{"type":"mixin","name":"react-md-text-field-icon-mobile","code":"\n  $text-field-height: 19px;\n\n  .md-text-field-icon {\n    margin-bottom: 16px - (($md-font-icon-size - $text-field-height) / 2);\n  }\n","line":{"start":1163,"end":1169}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-icon-mobile;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-font-icon-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on mobile devices. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-mobile","code":"\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile;\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n","line":{"start":178,"end":203}}},{"description":"Includes the media queries and styles for the text field icons.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop;\n  }\n","line":{"start":1190,"end":1198}}}]},{"description":"Creates the styles for text field icons on desktop screens. This should be included within\na media query.\n\n","commentRange":{"start":1171,"end":1177},"context":{"type":"mixin","name":"react-md-text-field-icon-desktop","code":"\n  $text-field-height: 15px;\n\n  .md-text-field-icon {\n    margin-bottom: 12px - (($md-font-icon-size - $text-field-height) / 2);\n  }\n","line":{"start":1178,"end":1184}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-icon-desktop;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-font-icon-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on desktop screens. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for desktop screens.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-desktop","code":"\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop;\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n","line":{"start":234,"end":259}}},{"description":"Includes the media queries and styles for the text field icons.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop;\n  }\n","line":{"start":1190,"end":1198}}}]},{"description":"Includes the media queries and styles for the text field icons.\n\n","commentRange":{"start":1186,"end":1189},"context":{"type":"mixin","name":"react-md-text-field-icon-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop;\n  }\n","line":{"start":1190,"end":1198}},"example":[{"type":"scss","code":"@include react-md-text-field-icon-media;","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-icon-mobile"},{"type":"mixin","name":"react-md-text-field-icon-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Includes the styles for having a password text field.\n\n","commentRange":{"start":1201,"end":1207},"context":{"type":"mixin","name":"react-md-text-field-password","code":"\n  .md-password-btn {\n    background: transparent;\n    border: 0;\n    color: get-color('hint', $light-theme);\n    height: $md-font-icon-size;\n    padding: 0;\n    width: $md-font-icon-size;\n\n    &:focus {\n      outline: none;\n    }\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-password-btn--active {\n    color: get-color('secondary', $light-theme);\n\n    &::before {\n      background: get-color('secondary', $light-theme);\n    }\n  }\n\n  .md-password-btn--invisible {\n    &::before,\n    &::after {\n      content: '';\n      display: block;\n      height: 2px;\n      position: absolute;\n      top: 50%;\n      width: 100%;\n    }\n\n    &::before {\n      transform: translate3d(-1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n\n    &::after {\n      background: get-color('background', $light-theme);\n      transform: translate3d(1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n  }\n","line":{"start":1208,"end":1254}},"example":[{"type":"scss","code":"@include react-md-text-field-password;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-font-icon-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Modifies the styles of the text-field-password ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":1257,"end":1268},"context":{"type":"mixin","name":"react-md-theme-text-field-password","code":"\n  @if $light-theme != $md-light-theme {\n    .md-password-btn {\n      color: get-color('hint', $light-theme);\n    }\n\n    .md-password-btn--active {\n      color: get-color('secondary', $light-theme);\n\n      &::before {\n        background: get-color('secondary', $light-theme);\n      }\n    }\n\n    .md-password-btn--invisible::after {\n      background: get-color('background', $light-theme);\n    }\n  }\n","line":{"start":1269,"end":1287}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-password(true);\n}","description":"Example Usage SCSS"}],"see":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-light-theme"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Creates teh styles for the text field's inline indicator. This is is for showing a password button\nor some other icon within the text field.\n\n","commentRange":{"start":1289,"end":1293},"context":{"type":"mixin","name":"react-md-text-field-inline-indicator","code":"\n  .md-text-field-inline-indicator {\n    position: absolute;\n    right: 0;\n  }\n\n  .md-text-field--inline-indicator {\n    padding-right: $md-font-icon-size;\n  }\n","line":{"start":1294,"end":1303}},"example":[{"type":"scss","code":"@include react-md-text-field-inline-indicator;","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-font-icon-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Creates the styles for showing inline indicators in text fields on mobile devices. This should\nbe used within a media query.\n\n","commentRange":{"start":1305,"end":1314},"context":{"type":"mixin","name":"react-md-text-field-inline-indicator-mobile","code":"\n  .md-text-field-inline-indicator {\n    bottom: 14px;\n  }\n\n  @if $include-block {\n    .md-text-field-inline-indicator--block {\n      bottom: 16px;\n    }\n  }\n","line":{"start":1315,"end":1325}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-inline-indicator-mobile;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the block styles should\n    be included"}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on mobile devices. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-mobile","code":"\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile;\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n","line":{"start":178,"end":203}}},{"description":"Includes the media queries for showing inline indicators in text fields.\n\n","context":{"type":"mixin","name":"react-md-text-field-inline-indicator-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-inline-indicator-mobile($include-block);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-inline-indicator-desktop($include-block);\n  }\n","line":{"start":1356,"end":1364}}}]},{"description":"Creates the styles for showing inline indicators in text fields on desktop screens. This should\nbe used within a media query.\n\n","commentRange":{"start":1327,"end":1336},"context":{"type":"mixin","name":"react-md-text-field-inline-indicator-desktop","code":"\n  .md-text-field-inline-indicator {\n    bottom: 9px;\n  }\n\n  @if $include-block {\n    .md-text-field-inline-indicator--block {\n      bottom: 11px;\n    }\n  }\n","line":{"start":1337,"end":1347}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-inline-indicator-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the block styles should\n    be included"}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on desktop screens. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for desktop screens.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-desktop","code":"\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop;\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n","line":{"start":234,"end":259}}},{"description":"Includes the media queries for showing inline indicators in text fields.\n\n","context":{"type":"mixin","name":"react-md-text-field-inline-indicator-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-inline-indicator-mobile($include-block);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-inline-indicator-desktop($include-block);\n  }\n","line":{"start":1356,"end":1364}}}]},{"description":"Includes the media queries for showing inline indicators in text fields.\n\n","commentRange":{"start":1349,"end":1355},"context":{"type":"mixin","name":"react-md-text-field-inline-indicator-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-inline-indicator-mobile($include-block);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-inline-indicator-desktop($include-block);\n  }\n","line":{"start":1356,"end":1364}},"example":[{"type":"scss","code":"@include react-md-text-field-inline-indicator-media;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the block styles should\n    be included"}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-inline-indicator-mobile"},{"type":"mixin","name":"react-md-text-field-inline-indicator-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Creates the styles for a custom sized text field for mobile devices. This\nshould normally be used within the `react-md-text-field-custom-sizes-mobile`\nmixin.\n\n","commentRange":{"start":1367,"end":1380},"context":{"type":"mixin","name":"react-md-text-field-custom-size-mobile","code":"\n  @if $include-floating-label != null {\n    .md-floating-label--inactive-#{$name} {\n      transform: translate3d(0, nth($list, 3), 0);\n    }\n  }\n","line":{"start":1381,"end":1387}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-custom-size-mobile('title', (34px, .25s, 46px, 34px));","description":"Example usage SCSS"}],"see":[{"description":"Creates all the styles for all the custom sizes for text fields for mobile devices. This\nshould normally be used in a media query or the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-custom-sizes-mobile","code":"\n  @if $custom-sizes != null {\n    @each $name, $list in $custom-sizes {\n      @include react-md-text-field-custom-size-mobile($name, $list, $include-floating-label);\n    }\n  }\n","line":{"start":1426,"end":1432}}}],"parameter":[{"type":"String","name":"name","description":"The custom size name."},{"type":"List","name":"list","description":"A list containing the font size, the transition-time, the mobile y position\n    and the desktop y position."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if floating label\n    styles should be included."}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates all the styles for all the custom sizes for text fields for mobile devices. This\nshould normally be used in a media query or the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-custom-sizes-mobile","code":"\n  @if $custom-sizes != null {\n    @each $name, $list in $custom-sizes {\n      @include react-md-text-field-custom-size-mobile($name, $list, $include-floating-label);\n    }\n  }\n","line":{"start":1426,"end":1432}}}]},{"description":"Creates the styles for a custom sized text field for desktop screens. This\nshould normally be used within the `react-md-text-field-custom-sizes-desktop`\nmixin.\n\n","commentRange":{"start":1390,"end":1403},"context":{"type":"mixin","name":"react-md-text-field-custom-size-desktop","code":"\n  @if $include-floating-label != null {\n    .md-floating-label--inactive-#{$name} {\n      transform: translate3d(0, nth($list, 4), 0);\n    }\n  }\n","line":{"start":1404,"end":1410}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-custom-size-desktop('title', (34px, .25s, 46px, 34px));","description":"Example usage SCSS"}],"see":[{"description":"Creates all the styles for all the custom sizes for text fields for desktop screens. This\nshould normally be used in a media query or the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-custom-sizes-desktop","code":"\n  @if $custom-sizes != null {\n    @each $name, $list in $custom-sizes {\n      @include react-md-text-field-custom-size-desktop($name, $list, $include-floating-label);\n    }\n  }\n","line":{"start":1449,"end":1455}}}],"parameter":[{"type":"String","name":"name","description":"The custom size name."},{"type":"List","name":"list","description":"A list containing the font size, the transition-time, the mobile y position\n    and the desktop y position."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if floating label\n    styles should be included."}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates all the styles for all the custom sizes for text fields for desktop screens. This\nshould normally be used in a media query or the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-custom-sizes-desktop","code":"\n  @if $custom-sizes != null {\n    @each $name, $list in $custom-sizes {\n      @include react-md-text-field-custom-size-desktop($name, $list, $include-floating-label);\n    }\n  }\n","line":{"start":1449,"end":1455}}}]},{"description":"Creates all the styles for all the custom sizes for text fields for mobile devices. This\nshould normally be used in a media query or the `react-md-text-fields` mixin.\n\n","commentRange":{"start":1413,"end":1425},"context":{"type":"mixin","name":"react-md-text-field-custom-sizes-mobile","code":"\n  @if $custom-sizes != null {\n    @each $name, $list in $custom-sizes {\n      @include react-md-text-field-custom-size-mobile($name, $list, $include-floating-label);\n    }\n  }\n","line":{"start":1426,"end":1432}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-custom-sizes-mobile($md-text-field-custom-sizes);\n}","description":"Example Usage SCSS"}],"see":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}},{"description":"A Map of custom sizes for text fields. Set this to null if you do not want any\ncustom sizes by default. This is a key value pair of String and List. The key will\nbe used to generate a `--suffix` class name to apply to floating labels and text\nfields. The list must have a length of 4 where it is the:\n  - custom font size\n  - the transition duration modifier\n  - the y position of the label when inactive on mobile devices\n  - the y position of the label when inactive on desktop screens\n\n","context":{"type":"variable","name":"md-text-field-custom-sizes","value":"(\n  title: ($md-display-1-font-size, .25s, 42px, 36px),\n)","scope":"default","line":{"start":26,"end":28}}}],"parameter":[{"type":"Map","name":"custom-sizes","default":"$md-text-field-custom-sizes","description":"A map of custom sizes to use"},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if floating label\n    styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-custom-size-mobile"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on mobile devices. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-mobile","code":"\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile;\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n","line":{"start":178,"end":203}}}]},{"description":"Creates all the styles for all the custom sizes for text fields for desktop screens. This\nshould normally be used in a media query or the `react-md-text-fields` mixin.\n\n","commentRange":{"start":1436,"end":1448},"context":{"type":"mixin","name":"react-md-text-field-custom-sizes-desktop","code":"\n  @if $custom-sizes != null {\n    @each $name, $list in $custom-sizes {\n      @include react-md-text-field-custom-size-desktop($name, $list, $include-floating-label);\n    }\n  }\n","line":{"start":1449,"end":1455}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-custom-sizes-desktop($md-text-field-custom-sizes);\n}","description":"Example Usage SCSS"}],"see":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}},{"description":"A Map of custom sizes for text fields. Set this to null if you do not want any\ncustom sizes by default. This is a key value pair of String and List. The key will\nbe used to generate a `--suffix` class name to apply to floating labels and text\nfields. The list must have a length of 4 where it is the:\n  - custom font size\n  - the transition duration modifier\n  - the y position of the label when inactive on mobile devices\n  - the y position of the label when inactive on desktop screens\n\n","context":{"type":"variable","name":"md-text-field-custom-sizes","value":"(\n  title: ($md-display-1-font-size, .25s, 42px, 36px),\n)","scope":"default","line":{"start":26,"end":28}}}],"parameter":[{"type":"Map","name":"custom-sizes","default":"$md-text-field-custom-sizes","description":"A map of custom sizes to use"},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if floating label\n    styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-custom-size-desktop"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Creates the styles for text fields on desktop screens. The floating labels, blocks,\nicons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for desktop screens.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-desktop","code":"\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop;\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n","line":{"start":234,"end":259}}}]},{"description":"Includes the css for custom sizes for text fields. This will create some class names with the\ncomponents they modify and a `--#{$name}` suffix.\n\n","commentRange":{"start":1458,"end":1475},"context":{"type":"mixin","name":"react-md-text-field-custom-sizes","code":"\n  @if $font-sizes != null {\n    @each $name, $list in $font-sizes {\n      $font-size: nth($list, 1);\n      $time: nth($list, 2);\n\n      .md-text-field--#{$name} {\n        font-size: $font-size;\n      }\n\n      @if $include-floating-label {\n        @if $time != null {\n          .md-floating-label--#{$name} {\n            transition-duration: $time;\n          }\n        }\n\n        .md-floating-label--inactive-#{$name} {\n          font-size: $font-size;\n        }\n      }\n    }\n  }\n","line":{"start":1476,"end":1499}},"example":[{"type":"scss","code":"@include react-md-text-field-custom-sizes;","description":"Example Usage SCSS"},{"type":"scss","code":".md-text-field--title {\n  font-size: 34px;\n}\n\n.md-floating-label--title {\n  font-size: 34px;\n}","description":"Example Usage CSS Output"}],"parameter":[{"type":"Map","name":"font-sizes","default":"$md-text-field-custom-sizes","description":"A map of size names with font sizes."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    custom text field size should include the styles for floating labels."}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values. If the `$include-media` param is true, the\nmobile and desktop media queries will be included for all included parts of the text fields.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n","line":{"start":346,"end":389}}}]},{"description":"Applies a color to all the browser placeholder psuedo elements.\n\n","commentRange":{"start":1505,"end":1531},"context":{"type":"mixin","name":"react-md-theme-placeholders","code":"\n  // scss-lint:disable VendorPrefix, PseudoElement\n\n  :-moz-placeholder {\n    color: $color;\n  }\n\n  ::-moz-placeholder {\n    color: $color;\n  }\n\n  :-ms-input-placeholder {\n    color: $color;\n  }\n\n  ::-webkit-input-placeholder {\n    color: $color;\n  }\n","line":{"start":1532,"end":1550}},"example":[{"type":"scss","code":".md-primary.md-toolbar {\n  @include md-theme-placeholders($md-dark-theme-help-text-color);\n}","description":"Basic Usage SASS"},{"type":"scss","code":".md-primary.md-toolbar {\n  :-moz-placeholder {\n    color: $color;\n  }\n\n  ::-moz-placeholder {\n    color: $color;\n  }\n\n  :-ms-input-placeholder {\n    color: $color;\n  }\n\n  ::-webkit-input-placeholder {\n    color: $color;\n  }\n}","description":"Basic Usage CSS Output"}],"parameter":[{"type":"Color","name":"color","description":"The placeholder color to use"}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}},{"description":"Includes only the `md-text-field-container` css. This should normally be used from\nthe `react-md-text-fields` mixin. The placeholders will also be styled accordingly.\n\n","context":{"type":"mixin","name":"react-md-text-field-container","code":"\n\n  .md-text-field-container {\n    @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n\n    position: relative;\n\n    // scss-lint:disable VendorPrefix, PseudoElement\n    :-moz-placeholder {\n      opacity: 1;\n    }\n\n    ::-moz-placeholder {\n      opacity: 1;\n    }\n\n    :-ms-input-placeholder {\n      opacity: 1;\n    }\n\n    ::-webkit-input-placeholder {\n      opacity: 1;\n    }\n  }\n\n  .md-text-field-container--input {\n    line-height: 1;\n  }\n\n  @if $include-block {\n    .md-text-field-container--input-block {\n      display: flex;\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-multiline-container,\n    .md-text-field-container--multiline {\n      transition-duration: $md-transition-time;\n      transition-property: height;\n    }\n\n    .md-text-field-multiline-container {\n      position: relative;\n    }\n  }\n","line":{"start":548,"end":598}}},{"description":"Includes the styles for toolbars.\n\n","context":{"type":"mixin","name":"react-md-toolbars","code":"\n  @if $include-media {\n    @include react-md-toolbars-media($include-prominent, $include-btn-text, $include-autocompletes, $include-select-fields);\n  }\n\n  .md-toolbar {\n    display: flex;\n\n    &--fixed {\n      left: 0;\n      position: fixed;\n      top: 0;\n      width: 100vw;\n      z-index: $md-toolbar-z-index;\n    }\n\n    &--inset {\n      margin: $md-toolbar-inset-margin;\n      max-width: calc(100vw - #{$md-toolbar-inset-margin * 2});\n    }\n  }\n\n  @if $include-themed {\n    .md-toolbar--themed {\n      background: get-color('toolbar', $light-theme);\n\n      .md-title {\n        color: if($light-theme, get-color('text', $light-theme), $md-white-base);\n      }\n    }\n  }\n\n  .md-title--toolbar {\n    color: if($light-theme, get-color('text', $light-theme), $md-white-base);\n    margin-bottom: 0;\n    transition-duration: $md-transition-time;\n    transition-property: transform;\n  }\n\n  @if $include-prominent and $md-toolbar-prominent-title-font-size != $md-title-font-size {\n    .md-title--toolbar-prominent {\n      font-size: $md-toolbar-prominent-title-font-size;\n    }\n  }\n\n  .md-toolbar--text-white {\n    color: $md-white-base;\n\n    $selectors: ('btn' 'icon' 'title--toolbar');\n    @if $include-text-fields or $include-select-fields or $include-autocompletes {\n      $selectors: append($selectors, 'text-field');\n    }\n\n    $color-selector: '';\n\n    @each $selector in $selectors {\n      $color-selector: $color-selector + if($color-selector != '', ', ', '');\n      $color-selector: $color-selector + '.md-#{$selector}';\n    }\n\n    #{$color-selector} {\n      color: inherit;\n    }\n\n    @if $include-text-fields or $include-autocompletes {\n      @include react-md-theme-placeholders($md-white-base);\n    }\n  }\n\n  @if $include-text-fields or $include-select-fields or $include-autocompletes {\n    .md-toolbar {\n      .md-text-field-container {\n        padding-bottom: 0;\n        padding-top: 0;\n      }\n\n      .md-text-field {\n        font-size: $md-title-font-size;\n      }\n    }\n  }\n\n  @if $include-autocompletes {\n    .md-toolbar {\n      .md-autocomplete {\n        height: 100%;\n      }\n    }\n  }\n\n  @if $include-select-fields {\n    .md-toolbar {\n      .md-menu-container {\n        padding-left: 0;\n        padding-right: 0;\n      }\n\n      .md-select-field-container {\n        height: 100%;\n      }\n    }\n  }\n","line":{"start":84,"end":195}}}]}]}