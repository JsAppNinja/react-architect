{"placeholders":[],"variables":[{"description":"The primary color to use throughout the app. This should be a color\nwith a `-500` suffix.\n","commentRange":{"start":3,"end":6},"context":{"type":"variable","name":"md-primary-color","value":"$md-indigo-500","scope":"default","line":{"start":7,"end":7}},"type":"Color","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Themes the buttons ONLY when the `$primary-color` does not equal the `$md-primary-color`,\nthe `$secondary-color` does not equal the `$md-secondary-color`, or the `$md-light-theme`\ndoes not equal the `$md-light-theme`.\n\n","context":{"type":"mixin","name":"react-md-theme-buttons","code":"\n  @if $light-theme != $md-light-theme {\n    @if $include-flat or $include-raised {\n      .md-btn--raised-disabled {\n        background: get-color('divider', $light-theme);\n      }\n    }\n\n    @if $include-icon or $include-floating {\n      .md-btn--icon {\n        color: get-color('icon', $light-theme);\n      }\n    }\n  }\n\n  @if $primary-color != $md-primary-color {\n    .md-btn--color-primary-active {\n      background: rgba($primary-color, .12);\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-btn--color-secondary-active {\n      background: rgba($secondary-color, .12);\n    }\n  }\n","line":{"start":255,"end":289}}},{"description":"This will conditionally update theme colors. The theme colors will only\nbe updated if their value does not equal the global value.\n\n","context":{"type":"mixin","name":"react-md-theme-colors","code":"\n  @if $primary-color != $md-primary-color {\n    .md-color--primary {\n      color: $primary-color;\n\n    }\n\n    .md-color--primary-ink {\n      .md-ink {\n        background: rgba($primary-color, .26);\n      }\n    }\n\n    .md-background--primary {\n      background: $primary-color;\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-color--secondary {\n      color: $secondary-color;\n    }\n\n    .md-color--secondary-ink {\n      .md-ink {\n        background: rgba($secondary-color, .26);\n      }\n    }\n\n    .md-background--secondary {\n      background: $secondary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-color--text {\n      color: get-color('text', $light-theme);\n    }\n\n    .md-color--secondary-text {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-color--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n\n    .md-background {\n      background: get-color('background', $light-theme);\n    }\n\n    .md-background--card {\n      background: get-color('card', $light-theme);\n    }\n  }\n\n  @if $include-media and ($primary-color != $md-primary-color or $secondary-color != $md-secondary-color) {\n    @media #{$md-desktop-media} {\n      @if $primary-color != $md-primary-color {\n        .md-background--primary-hover:hover {\n          background: rgba($primary-color, .9);\n        }\n      }\n\n      @if $secondary-color != $md-secondary-color {\n        .md-background--secondary-hover:hover {\n          background: rgba($secondary-color, .9);\n        }\n      }\n    }\n  }\n","line":{"start":1309,"end":1380}}},{"description":"Themes the pickers with the new colors only if the `primary-color` does not equal the `md-primary-color`,\nor the `light-theme` does not equal the `md-light-theme` and at least one of `include-date` or `include-time`\nare true.\n\n","context":{"type":"mixin","name":"react-md-theme-pickers","code":"\n  @if $include-date or $include-time {\n    $themed: $light-theme != $md-light-theme;\n\n    @if $primary-color != $md-primary-color {\n      @if not $light-theme and $themed {\n        .md-picker-header {\n          background: get-color('card', false);\n        }\n      } @else if $light-theme {\n        .md-picker-header {\n          background: $primary-color;\n        }\n      }\n\n      @if $include-date {\n        .md-calendar-date--btn::after {\n          background: $primary-color;\n        }\n      }\n\n      @if $include-time {\n        .md-clock-hand {\n          &::before,\n          &::after {\n            background: $primary-color;\n          }\n        }\n      }\n    }\n\n    @if $themed {\n      .md-picker-content-container {\n        background: if($light-theme, get-color('card', true), get-color('background', false));\n      }\n\n      @if $include-date {\n        .md-calendar-date {\n          color: get-color('secondary', false);\n\n          .md-picker-text--active {\n            color: get-color('background', false);\n          }\n        }\n      }\n\n      @if $include-time {\n        .md-clock-face {\n          background: if($light-theme, $md-grey-100, get-color('card', false));\n        }\n      }\n    }\n  }\n","line":{"start":187,"end":240}}},{"description":"This will theme the Slider component with an updated `primary-color` and\noptionally a switch in themes.\n\n","context":{"type":"mixin","name":"react-md-theme-sliders","code":"\n  $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n\n  @if $md-slider-on-color != $md-primary-color {\n    .md-slider-thumb--on,\n    .md-slider-track-fill {\n      background: $md-slider-on-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-slider-track,\n    .md-slider-thumb--disabled {\n      background: $md-slider-off-color;\n    }\n\n    .md-slider-thumb--continuous-off,\n    .md-slider-thumb--disabled-mask {\n      background: $bg-color;\n    }\n\n    .md-slider-thumb--off {\n      border-color: $md-slider-off-color;\n    }\n  }\n\n  @if $include-discrete {\n    @include react-md-theme-discrete-slider($primary-color);\n  }\n","line":{"start":404,"end":437}}},{"description":"This will update the discrete Slider with the new `$primary-color`.\n\n","context":{"type":"mixin","name":"react-md-theme-discrete-slider","code":"\n  $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n\n  $md-slider-on-color: $primary-color;\n\n  @if $md-slider-on-color != $md-primary-color {\n    .md-slider-thumb--discrete-on {\n      &::after {\n        border-top-color: $md-slider-on-color;\n      }\n  }\n  }\n","line":{"start":445,"end":457}}},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":777,"end":799}}},{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-divider--text-field::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-divider--text-field-error,\n    .md-divider--text-field-error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":927,"end":940}}},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1136,"end":1154}}}]},{"description":"A lighter version of the primary color to use throughout the app.\n","commentRange":{"start":9,"end":11},"context":{"type":"variable","name":"md-primary-color-hue-1","value":"$md-indigo-400","scope":"default","line":{"start":12,"end":12}},"type":"Color","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"The secondary color to use throughout the app. This should be a color\nwith a `-a-{NUMBER}` suffix.\n","commentRange":{"start":14,"end":17},"context":{"type":"variable","name":"md-secondary-color","value":"$md-pink-a-200","scope":"default","line":{"start":18,"end":18}},"type":"Color","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Themes the buttons ONLY when the `$primary-color` does not equal the `$md-primary-color`,\nthe `$secondary-color` does not equal the `$md-secondary-color`, or the `$md-light-theme`\ndoes not equal the `$md-light-theme`.\n\n","context":{"type":"mixin","name":"react-md-theme-buttons","code":"\n  @if $light-theme != $md-light-theme {\n    @if $include-flat or $include-raised {\n      .md-btn--raised-disabled {\n        background: get-color('divider', $light-theme);\n      }\n    }\n\n    @if $include-icon or $include-floating {\n      .md-btn--icon {\n        color: get-color('icon', $light-theme);\n      }\n    }\n  }\n\n  @if $primary-color != $md-primary-color {\n    .md-btn--color-primary-active {\n      background: rgba($primary-color, .12);\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-btn--color-secondary-active {\n      background: rgba($secondary-color, .12);\n    }\n  }\n","line":{"start":255,"end":289}}},{"description":"This will conditionally update theme colors. The theme colors will only\nbe updated if their value does not equal the global value.\n\n","context":{"type":"mixin","name":"react-md-theme-colors","code":"\n  @if $primary-color != $md-primary-color {\n    .md-color--primary {\n      color: $primary-color;\n\n    }\n\n    .md-color--primary-ink {\n      .md-ink {\n        background: rgba($primary-color, .26);\n      }\n    }\n\n    .md-background--primary {\n      background: $primary-color;\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-color--secondary {\n      color: $secondary-color;\n    }\n\n    .md-color--secondary-ink {\n      .md-ink {\n        background: rgba($secondary-color, .26);\n      }\n    }\n\n    .md-background--secondary {\n      background: $secondary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-color--text {\n      color: get-color('text', $light-theme);\n    }\n\n    .md-color--secondary-text {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-color--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n\n    .md-background {\n      background: get-color('background', $light-theme);\n    }\n\n    .md-background--card {\n      background: get-color('card', $light-theme);\n    }\n  }\n\n  @if $include-media and ($primary-color != $md-primary-color or $secondary-color != $md-secondary-color) {\n    @media #{$md-desktop-media} {\n      @if $primary-color != $md-primary-color {\n        .md-background--primary-hover:hover {\n          background: rgba($primary-color, .9);\n        }\n      }\n\n      @if $secondary-color != $md-secondary-color {\n        .md-background--secondary-hover:hover {\n          background: rgba($secondary-color, .9);\n        }\n      }\n    }\n  }\n","line":{"start":1309,"end":1380}}},{"description":"Themes the circular progress bars only when the `$secondary-color` does not equal\nthe `$md-secondary-color`.\n\n","context":{"type":"mixin","name":"react-md-theme-progress-circular","code":"\n  @if $secondary-color != $md-secondary-color {\n    .md-circular-progress-path {\n      stroke: $secondary-color;\n    }\n  }\n","line":{"start":262,"end":268}}},{"description":"Themes only the linear progress bars when the `$secondary-color` does not equal\nthe `$md-secondary-color` OR the `$swatch` does not equal the `$md-linear-progress-swatch`.\n\n","context":{"type":"mixin","name":"react-md-theme-progress-linear","code":"\n  @if $secondary-color != $md-secondary-color {\n    .md-progress--linear-active {\n      background: $secondary-color;\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color or $swatch != $md-linear-progress-swatch {\n    .md-progress--linear {\n      background: get-swatch($secondary-color, $swatch, true);\n    }\n  }\n","line":{"start":280,"end":292}}},{"description":"Updates the styles for switches ONLY if\n- the `$secondary-color` does not equal the `$md-secondary-color`\n- the `$light-theme` does not equal the `$md-light-theme`\n\nThe `$secondary-color` will automatically be updated to be a swatch of `-500` for light themes\nand a swatch of `-200` for dark themes.\n\n","context":{"type":"mixin","name":"react-md-theme-selection-controls-switch","code":"\n  @if $secondary-color != $md-secondary-color {\n    $swatch: get-swatch($secondary-color, if($light-theme, 500, 200));\n\n    .md-switch-track--on {\n      background: rgba($swatch, .5);\n    }\n\n    .md-switch-thumb--on {\n      background: $swatch;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-switch-track--off {\n      background: if($light-theme, $md-switch-light-theme-track-off, $md-switch-dark-theme-track-off);\n    }\n\n    .md-switch-track--disabled {\n      background: if($light-theme, $md-switch-light-theme-track-disabled, $md-switch-dark-theme-track-disabled);\n    }\n\n    .md-switch-thumb--off {\n      background: if($light-theme, $md-switch-light-theme-thumb-off, $md-switch-dark-theme-thumb-off);\n    }\n\n    .md-switch-thumb--disabled {\n      background: if($light-theme, $md-switch-light-theme-thumb-disabled, $md-switch-dark-theme-thumb-disabled);\n    }\n  }\n","line":{"start":202,"end":232}}},{"description":"Updates the theme for tabs only if the `$secondary-color` does not equal the `$md-secondary-color`.\nThis really changes the color of the tab indicator.\n\n","context":{"type":"mixin","name":"react-md-theme-tabs","code":"\n  @if $secondary-color != $md-secondary-color {\n    .md-tab-indicator {\n      background: $secondary-color;\n    }\n  }\n","line":{"start":180,"end":186}}}]},{"description":"A lighter version of the primary color to use throughout the app. This should be a color\nwith a `-a-{NUMBER}` suffix.\n","commentRange":{"start":20,"end":23},"context":{"type":"variable","name":"md-secondary-color-hue-1","value":"$md-pink-a-100","scope":"default","line":{"start":24,"end":24}},"type":"Color","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"Boolean if the application is to be themed with the light theme.\n","commentRange":{"start":26,"end":28},"context":{"type":"variable","name":"md-light-theme","value":"true","scope":"default","line":{"start":29,"end":29}},"type":"Boolean","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Updates the styles for the autocompletes ONLY if the `$light-theme` does not\nequal the `$md-light-theme`.\n\n","context":{"type":"mixin","name":"react-md-theme-autocompletes","code":"\n  @if $light-theme != $md-light-theme and $include-inline {\n    .md-autocomplete-suggestion {\n      color: get-color('secondary', $light-theme);\n    }\n  }\n","line":{"start":40,"end":46}}},{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":89}}},{"description":"This will only update the base avatar's border color if the `$light-theme` is different than\n`$md-light-theme`. If you want to add different colors, you should use the `react-md-theme-avatar`\nmixin.\n\n","context":{"type":"mixin","name":"react-md-theme-avatars","code":"\n  @if $light-theme != $md-light-theme {\n    .md-avatar {\n      border-color: get-color('divider', $light-theme);\n    }\n  }\n","line":{"start":97,"end":103}}},{"description":"Themes the buttons ONLY when the `$primary-color` does not equal the `$md-primary-color`,\nthe `$secondary-color` does not equal the `$md-secondary-color`, or the `$md-light-theme`\ndoes not equal the `$md-light-theme`.\n\n","context":{"type":"mixin","name":"react-md-theme-buttons","code":"\n  @if $light-theme != $md-light-theme {\n    @if $include-flat or $include-raised {\n      .md-btn--raised-disabled {\n        background: get-color('divider', $light-theme);\n      }\n    }\n\n    @if $include-icon or $include-floating {\n      .md-btn--icon {\n        color: get-color('icon', $light-theme);\n      }\n    }\n  }\n\n  @if $primary-color != $md-primary-color {\n    .md-btn--color-primary-active {\n      background: rgba($primary-color, .12);\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-btn--color-secondary-active {\n      background: rgba($secondary-color, .12);\n    }\n  }\n","line":{"start":255,"end":289}}},{"description":"Updates the styles for chips based on the theme. If the `light-theme` equals the `md-light-theme`,\nno styles will be included.\n\n","context":{"type":"mixin","name":"react-md-theme-chips","code":"\n  @if $light-theme != $md-light-theme {\n    .md-chip {\n      background: if($light-theme, $md-chip-light-theme-bg-color, $md-chip-dark-theme-bg-color);\n    }\n\n    .md-chip-text {\n      color: if($light-theme, $md-chip-light-theme-color, $md-chip-dark-theme-color);\n    }\n  }\n","line":{"start":160,"end":170}}},{"description":"This will conditionally update theme colors. The theme colors will only\nbe updated if their value does not equal the global value.\n\n","context":{"type":"mixin","name":"react-md-theme-colors","code":"\n  @if $primary-color != $md-primary-color {\n    .md-color--primary {\n      color: $primary-color;\n\n    }\n\n    .md-color--primary-ink {\n      .md-ink {\n        background: rgba($primary-color, .26);\n      }\n    }\n\n    .md-background--primary {\n      background: $primary-color;\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-color--secondary {\n      color: $secondary-color;\n    }\n\n    .md-color--secondary-ink {\n      .md-ink {\n        background: rgba($secondary-color, .26);\n      }\n    }\n\n    .md-background--secondary {\n      background: $secondary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-color--text {\n      color: get-color('text', $light-theme);\n    }\n\n    .md-color--secondary-text {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-color--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n\n    .md-background {\n      background: get-color('background', $light-theme);\n    }\n\n    .md-background--card {\n      background: get-color('card', $light-theme);\n    }\n  }\n\n  @if $include-media and ($primary-color != $md-primary-color or $secondary-color != $md-secondary-color) {\n    @media #{$md-desktop-media} {\n      @if $primary-color != $md-primary-color {\n        .md-background--primary-hover:hover {\n          background: rgba($primary-color, .9);\n        }\n      }\n\n      @if $secondary-color != $md-secondary-color {\n        .md-background--secondary-hover:hover {\n          background: rgba($secondary-color, .9);\n        }\n      }\n    }\n  }\n","line":{"start":1309,"end":1380}}},{"description":"Updates the styles for data tables only if the `$light-theme` does not equal the\n`$md-light-theme`. The only styles realy updated are the border colors and the\nhover/selected row background colors.\n\n","context":{"type":"mixin","name":"react-md-theme-data-tables","code":"\n  @if $light-theme != $md-light-theme {\n    thead .md-table-row,\n    tbody .md-table-row:not(:last-child) {\n      border-bottom-color: get-color('divider', $light-theme);\n    }\n\n    .md-table-row {\n\n      &--active {\n        background: if($light-theme, $md-data-table-selected-color, $md-data-table-dark-theme-selected-color);\n      }\n\n      &--hover {\n        background: if($light-theme, $md-data-table-hover-color, $md-data-table-dark-theme-hover-color);\n      }\n    }\n  }\n","line":{"start":138,"end":156}}},{"description":"Updates the background color of dividers ONLY if the `$light-theme` does\nnot equal the `$md-light-theme`.\n\n","context":{"type":"mixin","name":"react-md-theme-dividers","code":"\n  @if $light-theme != $md-light-theme {\n    .md-divider {\n      background: get-color('divider', $light-theme);\n    }\n  }\n\n  @if $include-borders {\n    @include react-md-theme-divider-borders($light-theme);\n  }\n","line":{"start":95,"end":105}}},{"description":"Themes only the divider borders if the `$light-theme` does not equal the `$md-light-theme`.\n\n","context":{"type":"mixin","name":"react-md-theme-divider-borders","code":"\n  @if $light-theme != $md-light-theme {\n    .md-divider-border {\n      border-color: get-color('divider', $light-theme);\n    }\n  }\n","line":{"start":113,"end":119}}},{"description":"Updates the styles for expansion panels based on the `light-theme` param.\nIf `light-theme` equals `md-light-theme`, no styles will be created.\n\n","context":{"type":"mixin","name":"react-md-theme-expansion-panels","code":"\n  @if $light-theme != $md-light-theme {\n    .md-expansion-panel {\n      background: get-color('card', $light-theme);\n    }\n\n    .md-panel-secondary-label {\n      color: get-color('secondary', $light-theme);\n    }\n  }\n","line":{"start":100,"end":110}}},{"description":"Updates the color of the base `md-icon` if the `$light-theme` paramater\ndoes not equal the global `$md-light-theme`.\n","context":{"type":"mixin","name":"react-md-theme-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  @if $light-theme != $md-light-theme {\n    .md-icon {\n      color: $md-icon-color;\n    }\n\n    .md-icon--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n  }\n","line":{"start":54,"end":66}}},{"description":"Themes the ink color for the given theme ONLY if the `$light-theme` does not equal the\n`$md-light-theme`.\n\n","context":{"type":"mixin","name":"react-md-theme-inks","code":"\n  @if $light-theme != $md-light-theme {\n    .md-ink {\n      background: get-color('divider', $light-theme);\n    }\n  }\n","line":{"start":99,"end":105}}},{"description":"Updates the theme for lists ONLY if the `$light-theme` does not equal the `$md-light-theme`.\n\n","context":{"type":"mixin","name":"react-md-theme-lists","code":"\n  @if $light-theme != $md-light-theme {\n    .md-list {\n      background: get-color('card', $light-theme);\n    }\n\n\n    .md-list-tile--active {\n      background: get-color('hover', $light-theme);\n    }\n  }\n","line":{"start":237,"end":248}}},{"description":"Themes the pickers with the new colors only if the `primary-color` does not equal the `md-primary-color`,\nor the `light-theme` does not equal the `md-light-theme` and at least one of `include-date` or `include-time`\nare true.\n\n","context":{"type":"mixin","name":"react-md-theme-pickers","code":"\n  @if $include-date or $include-time {\n    $themed: $light-theme != $md-light-theme;\n\n    @if $primary-color != $md-primary-color {\n      @if not $light-theme and $themed {\n        .md-picker-header {\n          background: get-color('card', false);\n        }\n      } @else if $light-theme {\n        .md-picker-header {\n          background: $primary-color;\n        }\n      }\n\n      @if $include-date {\n        .md-calendar-date--btn::after {\n          background: $primary-color;\n        }\n      }\n\n      @if $include-time {\n        .md-clock-hand {\n          &::before,\n          &::after {\n            background: $primary-color;\n          }\n        }\n      }\n    }\n\n    @if $themed {\n      .md-picker-content-container {\n        background: if($light-theme, get-color('card', true), get-color('background', false));\n      }\n\n      @if $include-date {\n        .md-calendar-date {\n          color: get-color('secondary', false);\n\n          .md-picker-text--active {\n            color: get-color('background', false);\n          }\n        }\n      }\n\n      @if $include-time {\n        .md-clock-face {\n          background: if($light-theme, $md-grey-100, get-color('card', false));\n        }\n      }\n    }\n  }\n","line":{"start":187,"end":240}}},{"description":"Updates the styles for switches ONLY if\n- the `$secondary-color` does not equal the `$md-secondary-color`\n- the `$light-theme` does not equal the `$md-light-theme`\n\nThe `$secondary-color` will automatically be updated to be a swatch of `-500` for light themes\nand a swatch of `-200` for dark themes.\n\n","context":{"type":"mixin","name":"react-md-theme-selection-controls-switch","code":"\n  @if $secondary-color != $md-secondary-color {\n    $swatch: get-swatch($secondary-color, if($light-theme, 500, 200));\n\n    .md-switch-track--on {\n      background: rgba($swatch, .5);\n    }\n\n    .md-switch-thumb--on {\n      background: $swatch;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-switch-track--off {\n      background: if($light-theme, $md-switch-light-theme-track-off, $md-switch-dark-theme-track-off);\n    }\n\n    .md-switch-track--disabled {\n      background: if($light-theme, $md-switch-light-theme-track-disabled, $md-switch-dark-theme-track-disabled);\n    }\n\n    .md-switch-thumb--off {\n      background: if($light-theme, $md-switch-light-theme-thumb-off, $md-switch-dark-theme-thumb-off);\n    }\n\n    .md-switch-thumb--disabled {\n      background: if($light-theme, $md-switch-light-theme-thumb-disabled, $md-switch-dark-theme-thumb-disabled);\n    }\n  }\n","line":{"start":202,"end":232}}},{"description":"This will theme the Slider component with an updated `primary-color` and\noptionally a switch in themes.\n\n","context":{"type":"mixin","name":"react-md-theme-sliders","code":"\n  $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n\n  @if $md-slider-on-color != $md-primary-color {\n    .md-slider-thumb--on,\n    .md-slider-track-fill {\n      background: $md-slider-on-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-slider-track,\n    .md-slider-thumb--disabled {\n      background: $md-slider-off-color;\n    }\n\n    .md-slider-thumb--continuous-off,\n    .md-slider-thumb--disabled-mask {\n      background: $bg-color;\n    }\n\n    .md-slider-thumb--off {\n      border-color: $md-slider-off-color;\n    }\n  }\n\n  @if $include-discrete {\n    @include react-md-theme-discrete-slider($primary-color);\n  }\n","line":{"start":404,"end":437}}},{"description":"Themes all parts of the text fields if they are included.\n\n","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-placeholders(get-color('secondary', $light-theme));\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-icon or $include-password {\n    @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-theme-text-field-message($light-theme, $error-color);\n  }\n","line":{"start":419,"end":449}}},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":777,"end":799}}},{"description":"Modifies the styles of the text-field-message ONLY if:\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-text-field-error-color`\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-message","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-message-container {\n      color: get-color('hint', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-message-container--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1054,"end":1066}}},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1136,"end":1154}}},{"description":"Modifies the styles of the text-field-password ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-password","code":"\n  @if $light-theme != $md-light-theme {\n    .md-password-btn {\n      color: get-color('hint', $light-theme);\n    }\n\n    .md-password-btn--active {\n      color: get-color('secondary', $light-theme);\n\n      &::before {\n        background: get-color('secondary', $light-theme);\n      }\n    }\n\n    .md-password-btn--invisible::after {\n      background: get-color('background', $light-theme);\n    }\n  }\n","line":{"start":1269,"end":1287}}},{"description":"Updates the toolbar's `themed` color ONLY if the `$light-theme` does not equal the\n`$md-light-theme` and the `$include-themed` param is `true`.\n\n","context":{"type":"mixin","name":"react-md-theme-toolbars","code":"\n  @if $light-theme != $md-light-theme {\n    @if $include-themed {\n      .md-toolbar--themed {\n        background: get-color('toolbar', $light-theme);\n\n        .md-title {\n          color: if($light-theme, get-color('text', $light-theme), $md-white-base);\n        }\n      }\n    }\n  }\n","line":{"start":207,"end":219}}},{"description":"Updates the theme of the typography ONLY if the `$light-theme` does not equal `$md-light-theme`.\nYou will need to apply this `$html-class-name` to the `html` tag to get the effects. This is because\nthe base `html` tag had the background color set which everything inherits.\n\n","context":{"type":"mixin","name":"react-md-theme-typography","code":"\n  @if $light-theme != $md-light-theme {\n    .#{$html-class-name} {\n      background: get-color('background', $light-theme);\n\n      .md-headline,\n      .md-title,\n      .md-subheading-2,\n      .md-subheading-1,\n      .md-body-2,\n      .md-body-1 {\n        color: get-color('text', $light-theme);\n      }\n\n      .md-display-4,\n      .md-display-3,\n      .md-display-2,\n      .md-display-1,\n      .md-caption {\n        color: get-color('secondary', $light-theme);\n      }\n\n      @if $extend-html-tags {\n        h6,\n        h5,\n        h4,\n        h3,\n        h2,\n        h1,\n        p {\n          color: get-color('text', $light-theme);\n        }\n\n        h1,\n        caption {\n          color: get-color('secondary', $light-theme);\n        }\n\n      }\n\n    }\n  }\n","line":{"start":721,"end":763}}}]}],"functions":[],"mixins":[]}