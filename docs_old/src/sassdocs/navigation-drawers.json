{"placeholders":[],"variables":[{"description":"Boolean if the navigation drawer's content should use the `height` attribute instead of\nthe `max-height`. When this is true, only the content will be scrollable instead of the\nentire window.\n","commentRange":{"start":7,"end":10},"context":{"type":"variable","name":"md-navigation-drawer-enforce-height","value":"false","scope":"default","line":{"start":11,"end":11}},"type":"Boolean","group":["navigation-drawers"],"access":"public","file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes the styles for navigation drawers. This really depends on the styles for toolbars and drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers","code":"\n  @if $include-media {\n    @include react-md-navigation-drawers-media($enforce-height);\n  }\n\n  .md-toolbar {\n    &.md-toolbar--over-drawer {\n      z-index: $md-drawer-z-index + 2;\n    }\n  }\n\n  .md-title--drawer-active.md-title--drawer-active {\n    transition-duration: $md-drawer-transition-time;\n    transition-property: margin-left;\n  }\n\n  .md-navigation-drawer-content {\n    @if $md-navigation-drawer-enforce-height {\n      overflow-y: auto;\n    }\n\n    &--inactive {\n      margin-left: 0;\n    }\n\n    &--active {\n      transition-duration: $md-drawer-transition-time;\n      transition-property: margin-left;\n    }\n\n    &--prominent-offset {\n      $height: calc(100vh - #{$md-toolbar-mobile-prominent-height});\n\n      @if $md-navigation-drawer-enforce-height {\n        height: $height;\n      } @else {\n        min-height: $height;\n      }\n    }\n  }\n\n  .md-title.md-title--permanent-offset {\n    margin-left: $md-drawer-tablet-width + $md-default-padding;\n  }\n\n  .md-drawer .md-title--toolbar-offset {\n    margin-left: $md-default-padding;\n  }\n\n  @if $include-cross-fade {\n    .md-cross-fade-enter {\n      opacity: .01;\n      transform: translate3d(0, $md-cross-fade-distance, 0);\n\n      &.md-cross-fade-enter-active {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n        transition-duration: $md-cross-fade-transition-time;\n        transition-property: transform, opacity;\n      }\n    }\n  }\n","line":{"start":36,"end":98}}},{"description":"Includes the styles for the navigation drawer content on mobile portrait devices.\nThis should be used within a media query.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-mobile-portrait","code":"\n  .md-navigation-drawer-content {\n    $height: calc(100vh - #{$md-toolbar-mobile-portrait-height});\n\n    @if $md-navigation-drawer-enforce-height {\n      height: $height;\n    } @else {\n      min-height: $height;\n    }\n  }\n","line":{"start":110,"end":120}}},{"description":"Includes the styles for the navigation drawer content on mobile landscape devices.\nThis should be used within a media query.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-mobile-landscape","code":"\n  .md-navigation-drawer-content {\n    $height: calc(100vh - #{$md-toolbar-mobile-landscape-height});\n\n    @if $md-navigation-drawer-enforce-height {\n      height: $height;\n    } @else {\n      min-height: $height;\n    }\n  }\n","line":{"start":133,"end":143}}},{"description":"Includes the styles for the navigation drawer content on tablets.\nThis should be used within a media query.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-tablet","code":"\n  .md-navigation-drawer-content {\n    $height: calc(100vh - #{$md-toolbar-tablet-height});\n\n    @if $md-navigation-drawer-enforce-height {\n      height: $height;\n    } @else {\n      min-height: $height;\n    }\n  }\n\n  .md-title.md-title--persistent-offset {\n    margin-left: $md-drawer-tablet-width - $md-btn-icon-size - 6px + $md-default-padding;\n  }\n","line":{"start":156,"end":170}}}]},{"description":"Boolean if the cross-fade transiiton should be included. This is used when the content\nchanges.\n","commentRange":{"start":13,"end":15},"context":{"type":"variable","name":"md-navigation-drawer-include-cross-fade","value":"true","scope":"default","line":{"start":16,"end":16}},"type":"Boolean","group":["navigation-drawers"],"access":"public","file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"}},{"description":"The transition time for the cross-fade transition.\n","commentRange":{"start":18,"end":19},"context":{"type":"variable","name":"md-cross-fade-transition-time","value":"$md-transition-time * 2","scope":"default","line":{"start":20,"end":20}},"type":"Number","group":["navigation-drawers"],"access":"public","file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes the styles for navigation drawers. This really depends on the styles for toolbars and drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers","code":"\n  @if $include-media {\n    @include react-md-navigation-drawers-media($enforce-height);\n  }\n\n  .md-toolbar {\n    &.md-toolbar--over-drawer {\n      z-index: $md-drawer-z-index + 2;\n    }\n  }\n\n  .md-title--drawer-active.md-title--drawer-active {\n    transition-duration: $md-drawer-transition-time;\n    transition-property: margin-left;\n  }\n\n  .md-navigation-drawer-content {\n    @if $md-navigation-drawer-enforce-height {\n      overflow-y: auto;\n    }\n\n    &--inactive {\n      margin-left: 0;\n    }\n\n    &--active {\n      transition-duration: $md-drawer-transition-time;\n      transition-property: margin-left;\n    }\n\n    &--prominent-offset {\n      $height: calc(100vh - #{$md-toolbar-mobile-prominent-height});\n\n      @if $md-navigation-drawer-enforce-height {\n        height: $height;\n      } @else {\n        min-height: $height;\n      }\n    }\n  }\n\n  .md-title.md-title--permanent-offset {\n    margin-left: $md-drawer-tablet-width + $md-default-padding;\n  }\n\n  .md-drawer .md-title--toolbar-offset {\n    margin-left: $md-default-padding;\n  }\n\n  @if $include-cross-fade {\n    .md-cross-fade-enter {\n      opacity: .01;\n      transform: translate3d(0, $md-cross-fade-distance, 0);\n\n      &.md-cross-fade-enter-active {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n        transition-duration: $md-cross-fade-transition-time;\n        transition-property: transform, opacity;\n      }\n    }\n  }\n","line":{"start":36,"end":98}}}]},{"description":"The distance that the new content should move during the cross-fade transition.\n","commentRange":{"start":22,"end":23},"context":{"type":"variable","name":"md-cross-fade-distance","value":"16px","scope":"default","line":{"start":24,"end":24}},"type":"Number","group":["navigation-drawers"],"access":"public","file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes the styles for navigation drawers. This really depends on the styles for toolbars and drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers","code":"\n  @if $include-media {\n    @include react-md-navigation-drawers-media($enforce-height);\n  }\n\n  .md-toolbar {\n    &.md-toolbar--over-drawer {\n      z-index: $md-drawer-z-index + 2;\n    }\n  }\n\n  .md-title--drawer-active.md-title--drawer-active {\n    transition-duration: $md-drawer-transition-time;\n    transition-property: margin-left;\n  }\n\n  .md-navigation-drawer-content {\n    @if $md-navigation-drawer-enforce-height {\n      overflow-y: auto;\n    }\n\n    &--inactive {\n      margin-left: 0;\n    }\n\n    &--active {\n      transition-duration: $md-drawer-transition-time;\n      transition-property: margin-left;\n    }\n\n    &--prominent-offset {\n      $height: calc(100vh - #{$md-toolbar-mobile-prominent-height});\n\n      @if $md-navigation-drawer-enforce-height {\n        height: $height;\n      } @else {\n        min-height: $height;\n      }\n    }\n  }\n\n  .md-title.md-title--permanent-offset {\n    margin-left: $md-drawer-tablet-width + $md-default-padding;\n  }\n\n  .md-drawer .md-title--toolbar-offset {\n    margin-left: $md-default-padding;\n  }\n\n  @if $include-cross-fade {\n    .md-cross-fade-enter {\n      opacity: .01;\n      transform: translate3d(0, $md-cross-fade-distance, 0);\n\n      &.md-cross-fade-enter-active {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n        transition-duration: $md-cross-fade-transition-time;\n        transition-property: transform, opacity;\n      }\n    }\n  }\n","line":{"start":36,"end":98}}}]}],"functions":[],"mixins":[{"description":"Includes the styles for navigation drawers. This really depends on the styles for toolbars and drawers.\n\n","commentRange":{"start":26,"end":35},"context":{"type":"mixin","name":"react-md-navigation-drawers","code":"\n  @if $include-media {\n    @include react-md-navigation-drawers-media($enforce-height);\n  }\n\n  .md-toolbar {\n    &.md-toolbar--over-drawer {\n      z-index: $md-drawer-z-index + 2;\n    }\n  }\n\n  .md-title--drawer-active.md-title--drawer-active {\n    transition-duration: $md-drawer-transition-time;\n    transition-property: margin-left;\n  }\n\n  .md-navigation-drawer-content {\n    @if $md-navigation-drawer-enforce-height {\n      overflow-y: auto;\n    }\n\n    &--inactive {\n      margin-left: 0;\n    }\n\n    &--active {\n      transition-duration: $md-drawer-transition-time;\n      transition-property: margin-left;\n    }\n\n    &--prominent-offset {\n      $height: calc(100vh - #{$md-toolbar-mobile-prominent-height});\n\n      @if $md-navigation-drawer-enforce-height {\n        height: $height;\n      } @else {\n        min-height: $height;\n      }\n    }\n  }\n\n  .md-title.md-title--permanent-offset {\n    margin-left: $md-drawer-tablet-width + $md-default-padding;\n  }\n\n  .md-drawer .md-title--toolbar-offset {\n    margin-left: $md-default-padding;\n  }\n\n  @if $include-cross-fade {\n    .md-cross-fade-enter {\n      opacity: .01;\n      transform: translate3d(0, $md-cross-fade-distance, 0);\n\n      &.md-cross-fade-enter-active {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n        transition-duration: $md-cross-fade-transition-time;\n        transition-property: transform, opacity;\n      }\n    }\n  }\n","line":{"start":36,"end":98}},"example":[{"type":"scss","code":"@include react-md-navigation-drawers;","description":"Example Usage SCSS"}],"see":[{"description":"Includes the styles for drawers.\n\n","context":{"type":"mixin","name":"react-md-drawers","code":"\n  @if $include-media {\n    @include react-md-drawers-media;\n  }\n\n  .md-drawer {\n    transition-duration: $md-drawer-transition-time;\n    transition-property: transform;\n\n    &--fixed {\n      height: 100vh;\n      position: fixed;\n      top: 0;\n      z-index: $md-drawer-z-index;\n    }\n\n    &--inline {\n      display: inline-block;\n      height: 100%;\n    }\n\n    &--left {\n      left: 0;\n    }\n\n    &--right {\n      right: 0;\n    }\n\n    &--active {\n      transform: translate3d(0, 0, 0);\n    }\n  }\n\n  .md-list--drawer {\n    height: 100vh;\n    overflow-y: auto;\n  }\n\n  .md-overlay--drawer.md-overlay--drawer {\n    transition-duration: $md-drawer-transition-time;\n  }\n","line":{"start":53,"end":95}}},{"description":"Includes the styles for toolbars.\n\n","context":{"type":"mixin","name":"react-md-toolbars","code":"\n  @if $include-media {\n    @include react-md-toolbars-media($include-prominent, $include-btn-text, $include-autocompletes, $include-select-fields);\n  }\n\n  .md-toolbar {\n    display: flex;\n\n    &--fixed {\n      left: 0;\n      position: fixed;\n      top: 0;\n      width: 100vw;\n      z-index: $md-toolbar-z-index;\n    }\n\n    &--inset {\n      margin: $md-toolbar-inset-margin;\n      max-width: calc(100vw - #{$md-toolbar-inset-margin * 2});\n    }\n  }\n\n  @if $include-themed {\n    .md-toolbar--themed {\n      background: get-color('toolbar', $light-theme);\n\n      .md-title {\n        color: if($light-theme, get-color('text', $light-theme), $md-white-base);\n      }\n    }\n  }\n\n  .md-title--toolbar {\n    color: if($light-theme, get-color('text', $light-theme), $md-white-base);\n    margin-bottom: 0;\n    transition-duration: $md-transition-time;\n    transition-property: transform;\n  }\n\n  @if $include-prominent and $md-toolbar-prominent-title-font-size != $md-title-font-size {\n    .md-title--toolbar-prominent {\n      font-size: $md-toolbar-prominent-title-font-size;\n    }\n  }\n\n  .md-toolbar--text-white {\n    color: $md-white-base;\n\n    $selectors: ('btn' 'icon' 'title--toolbar');\n    @if $include-text-fields or $include-select-fields or $include-autocompletes {\n      $selectors: append($selectors, 'text-field');\n    }\n\n    $color-selector: '';\n\n    @each $selector in $selectors {\n      $color-selector: $color-selector + if($color-selector != '', ', ', '');\n      $color-selector: $color-selector + '.md-#{$selector}';\n    }\n\n    #{$color-selector} {\n      color: inherit;\n    }\n\n    @if $include-text-fields or $include-autocompletes {\n      @include react-md-theme-placeholders($md-white-base);\n    }\n  }\n\n  @if $include-text-fields or $include-select-fields or $include-autocompletes {\n    .md-toolbar {\n      .md-text-field-container {\n        padding-bottom: 0;\n        padding-top: 0;\n      }\n\n      .md-text-field {\n        font-size: $md-title-font-size;\n      }\n    }\n  }\n\n  @if $include-autocompletes {\n    .md-toolbar {\n      .md-autocomplete {\n        height: 100%;\n      }\n    }\n  }\n\n  @if $include-select-fields {\n    .md-toolbar {\n      .md-menu-container {\n        padding-left: 0;\n        padding-right: 0;\n      }\n\n      .md-select-field-container {\n        height: 100%;\n      }\n    }\n  }\n","line":{"start":84,"end":195}}}],"parameter":[{"type":"Boolean","name":"include-media","default":"$md-media-included","description":"Boolean if the media queries should be included."},{"type":"Boolena","name":"include-cross-fade","default":"$md-navigation-drawer-include-cross-fade","description":"Boolean if the cross\n  fade transiiton should be included."}],"group":["navigation-drawers"],"access":"public","require":[{"type":"mixin","name":"react-md-navigation-drawers-media"},{"type":"variable","name":"md-drawer-z-index"},{"type":"variable","name":"md-drawer-transition-time"},{"type":"variable","name":"md-navigation-drawer-enforce-height"},{"type":"variable","name":"md-drawer-tablet-width"},{"type":"variable","name":"md-default-padding"},{"type":"variable","name":"md-cross-fade-distance"},{"type":"variable","name":"md-cross-fade-transition-time"}],"file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes every component, transition, and typography including their\nmedia queries if the `$md-media-included` variable is `true`. You can\nmodify any global variables before including this mixin to change the overall\ntheme.\n\n","context":{"type":"mixin","name":"react-md-everything","code":"\n  @include react-md-typography;\n  @include react-md-accessibility;\n  @include react-md-grid;\n  @include react-md-transitions;\n\n  @include react-md-autocompletes;\n  @include react-md-avatars;\n  @include react-md-bottom-navigations;\n  @include react-md-buttons;\n  @include react-md-cards;\n  @include react-md-chips;\n  @include react-md-collapsers;\n  @include react-md-data-tables;\n  @include react-md-dialogs;\n  @include react-md-dividers;\n  @include react-md-drawers;\n  @include react-md-expansion-panels;\n  @include react-md-file-inputs;\n  @include react-md-inks;\n  @include react-md-icons;\n  @include react-md-lists;\n  @include react-md-media;\n  @include react-md-menus;\n  @include react-md-navigation-drawers;\n  @include react-md-overlays;\n  @include react-md-papers;\n  @include react-md-pickers;\n  @include react-md-progress;\n  @include react-md-select-fields;\n  @include react-md-selection-controls;\n  @include react-md-sliders;\n  @include react-md-subheaders;\n  @include react-md-snackbars;\n  @include react-md-tabs;\n  @include react-md-text-fields;\n  @include react-md-toolbars;\n  @include react-md-tooltips;\n\n  @include react-md-helpers-everything;\n  @include react-md-colors;\n","line":{"start":53,"end":94}}}]},{"description":"Includes the styles for the navigation drawer content on mobile portrait devices.\nThis should be used within a media query.\n\n","commentRange":{"start":100,"end":109},"context":{"type":"mixin","name":"react-md-navigation-drawers-mobile-portrait","code":"\n  .md-navigation-drawer-content {\n    $height: calc(100vh - #{$md-toolbar-mobile-portrait-height});\n\n    @if $md-navigation-drawer-enforce-height {\n      height: $height;\n    } @else {\n      min-height: $height;\n    }\n  }\n","line":{"start":110,"end":120}},"example":[{"type":"scss","code":"@media #{$md-mobile-portrait-media} {\n  @include react-md-navigation-drawers-mobile-portrait;\n}","description":"Example Usage SCSS"}],"parameter":[{"name":"Boolean","description":"enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n    height should be strictly enforced. This will use the `height` attribute instead of the `max-height`."}],"group":["navigation-drawers"],"access":"public","require":[{"type":"variable","name":"md-navigation-drawer-enforce-height"}],"file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes the media queries and styles for navigation drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}}}]},{"description":"Includes the styles for the navigation drawer content on mobile landscape devices.\nThis should be used within a media query.\n\n","commentRange":{"start":123,"end":132},"context":{"type":"mixin","name":"react-md-navigation-drawers-mobile-landscape","code":"\n  .md-navigation-drawer-content {\n    $height: calc(100vh - #{$md-toolbar-mobile-landscape-height});\n\n    @if $md-navigation-drawer-enforce-height {\n      height: $height;\n    } @else {\n      min-height: $height;\n    }\n  }\n","line":{"start":133,"end":143}},"example":[{"type":"scss","code":"@media #{$md-mobile-landscape-media} {\n  @include react-md-navigation-drawers-mobile-landscape;\n}","description":"Example Usage SCSS"}],"parameter":[{"name":"Boolean","description":"enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n    height should be strictly enforced. This will use the `height` attribute instead of the `max-height`."}],"group":["navigation-drawers"],"access":"public","require":[{"type":"variable","name":"md-navigation-drawer-enforce-height"}],"file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes the media queries and styles for navigation drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}}}]},{"description":"Includes the styles for the navigation drawer content on tablets.\nThis should be used within a media query.\n\n","commentRange":{"start":146,"end":155},"context":{"type":"mixin","name":"react-md-navigation-drawers-tablet","code":"\n  .md-navigation-drawer-content {\n    $height: calc(100vh - #{$md-toolbar-tablet-height});\n\n    @if $md-navigation-drawer-enforce-height {\n      height: $height;\n    } @else {\n      min-height: $height;\n    }\n  }\n\n  .md-title.md-title--persistent-offset {\n    margin-left: $md-drawer-tablet-width - $md-btn-icon-size - 6px + $md-default-padding;\n  }\n","line":{"start":156,"end":170}},"example":[{"type":"scss","code":"@media #{$md-tablet-media} {\n  @include react-md-navigation-drawers-tablet;\n}","description":"Example Usage SCSS"}],"parameter":[{"name":"Boolean","description":"enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n    height should be strictly enforced. This will use the `height` attribute instead of the `max-height`."}],"group":["navigation-drawers"],"access":"public","require":[{"type":"variable","name":"md-navigation-drawer-enforce-height"},{"type":"variable","name":"md-drawer-tablet-width"},{"type":"variable","name":"md-btn-icon-size"},{"type":"variable","name":"md-default-padding"}],"file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes the media queries and styles for navigation drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}}}]},{"description":"Includes the styles for the navigation drawer content on desktop screens.\nThis should be used within a media query.\n\n","commentRange":{"start":173,"end":182},"context":{"type":"mixin","name":"react-md-navigation-drawers-desktop","code":"\n  .md-title.md-title--persistent-offset {\n    margin-left: $md-drawer-desktop-width - $md-btn-icon-size - 6px + $md-default-padding;\n  }\n","line":{"start":183,"end":187}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-navigation-drawers-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"name":"Boolean","description":"enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n    height should be strictly enforced. This will use the `height` attribute instead of the `max-height`."}],"group":["navigation-drawers"],"access":"public","require":[{"type":"variable","name":"md-drawer-desktop-width"},{"type":"variable","name":"md-btn-icon-size"},{"type":"variable","name":"md-default-padding"}],"file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes the media queries and styles for navigation drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}}}]},{"description":"Includes the media queries and styles for navigation drawers.\n\n","commentRange":{"start":189,"end":195},"context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}},"example":[{"type":"scss","code":"@include react-md-navigation-drawers-media;","description":"Example Usage SCSS"}],"parameter":[{"name":"Boolean","description":"enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n    height should be strictly enforced. This will use the `height` attribute instead of the `max-height`."}],"group":["navigation-drawers"],"access":"public","require":[{"type":"mixin","name":"react-md-navigation-drawers-mobile-portrait"},{"type":"mixin","name":"react-md-navigation-drawers-mobile-landscape"},{"type":"mixin","name":"react-md-navigation-drawers-tablet"},{"type":"mixin","name":"react-md-navigation-drawers-desktop"},{"type":"variable","name":"md-mobile-portrait-media"},{"type":"variable","name":"md-mobile-landscape-media"},{"type":"variable","name":"md-tablet-media"},{"type":"variable","name":"md-drawer-tablet-width"},{"type":"variable","name":"md-drawer-desktop-width"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_navigation-drawers.scss","name":"_navigation-drawers.scss"},"usedBy":[{"description":"Includes the styles for navigation drawers. This really depends on the styles for toolbars and drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers","code":"\n  @if $include-media {\n    @include react-md-navigation-drawers-media($enforce-height);\n  }\n\n  .md-toolbar {\n    &.md-toolbar--over-drawer {\n      z-index: $md-drawer-z-index + 2;\n    }\n  }\n\n  .md-title--drawer-active.md-title--drawer-active {\n    transition-duration: $md-drawer-transition-time;\n    transition-property: margin-left;\n  }\n\n  .md-navigation-drawer-content {\n    @if $md-navigation-drawer-enforce-height {\n      overflow-y: auto;\n    }\n\n    &--inactive {\n      margin-left: 0;\n    }\n\n    &--active {\n      transition-duration: $md-drawer-transition-time;\n      transition-property: margin-left;\n    }\n\n    &--prominent-offset {\n      $height: calc(100vh - #{$md-toolbar-mobile-prominent-height});\n\n      @if $md-navigation-drawer-enforce-height {\n        height: $height;\n      } @else {\n        min-height: $height;\n      }\n    }\n  }\n\n  .md-title.md-title--permanent-offset {\n    margin-left: $md-drawer-tablet-width + $md-default-padding;\n  }\n\n  .md-drawer .md-title--toolbar-offset {\n    margin-left: $md-default-padding;\n  }\n\n  @if $include-cross-fade {\n    .md-cross-fade-enter {\n      opacity: .01;\n      transform: translate3d(0, $md-cross-fade-distance, 0);\n\n      &.md-cross-fade-enter-active {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n        transition-duration: $md-cross-fade-transition-time;\n        transition-property: transform, opacity;\n      }\n    }\n  }\n","line":{"start":36,"end":98}}}]}]}