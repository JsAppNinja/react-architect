{"placeholders":[],"variables":[{"description":"The default min width for a mobile device.\n","commentRange":{"start":62,"end":64},"context":{"type":"variable","name":"md-mobile-min-width","value":"320px","scope":"default","line":{"start":65,"end":65}},"type":"Number","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"The default min width for a tablet device.\n","commentRange":{"start":67,"end":69},"context":{"type":"variable","name":"md-tablet-min-width","value":"768px","scope":"default","line":{"start":70,"end":70}},"type":"Number","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"The default min width for a desktop screen.\n","commentRange":{"start":72,"end":74},"context":{"type":"variable","name":"md-desktop-min-width","value":"1025px","scope":"default","line":{"start":75,"end":75}},"type":"Number","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the media queries and styles for drawers.\n\n","context":{"type":"mixin","name":"react-md-drawers-media","code":"\n  @media #{$md-mobile-media} and (max-width: #{$md-desktop-min-width - 1}) {\n    @include react-md-drawers-mobile;\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-drawers-mobile-portrait;\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-drawers-mobile-landscape;\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-drawers-tablet;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-drawers-desktop;\n  }\n","line":{"start":228,"end":248}}}]},{"description":"The default mobile media query.\n","commentRange":{"start":77,"end":79},"context":{"type":"variable","name":"md-mobile-media","value":"'screen and (min-width: #{$md-mobile-min-width})'","scope":"default","line":{"start":80,"end":80}},"type":"String","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the media queries for autocompletes.\n\n","context":{"type":"mixin","name":"react-md-autocompletes-media","code":"\n  @if $include-inline {\n    @media #{$md-mobile-media} {\n      @include react-md-autocompletes-mobile($include-inline);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-autocompletes-desktop($include-inline);\n    }\n  }\n","line":{"start":101,"end":111}}},{"description":"Creates the media queries and styles for buttons for mobile and desktop.\n\n","context":{"type":"mixin","name":"react-md-buttons-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-buttons-mobile($include-flat, $include-raised, $include-floating);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-buttons-desktop($include-flat, $include-raised, $include-floating);\n  }\n","line":{"start":431,"end":439}}},{"description":"Includes the media queries and styles for drawers.\n\n","context":{"type":"mixin","name":"react-md-drawers-media","code":"\n  @media #{$md-mobile-media} and (max-width: #{$md-desktop-min-width - 1}) {\n    @include react-md-drawers-mobile;\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-drawers-mobile-portrait;\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-drawers-mobile-landscape;\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-drawers-tablet;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-drawers-desktop;\n  }\n","line":{"start":228,"end":248}}},{"description":"Includes the media queries and styles for lists on mobile devices and desktop screens.\n\n","context":{"type":"mixin","name":"react-md-lists-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-lists-mobile($include-icon, $include-avatar, $include-two-lines, $include-three-lines);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-lists-desktop($include-icon, $include-avatar, $include-two-lines, $include-three-lines);\n  }\n","line":{"start":407,"end":420}}},{"description":"Includes the media queries for menus on mobile devices and desktop screens.\n\n","context":{"type":"mixin","name":"react-md-menus-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-menus-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-menus-desktop;\n  }\n","line":{"start":219,"end":227}}},{"description":"Includes the mobile and desktop media queries for the slider indicators.\n\n","context":{"type":"mixin","name":"react-md-slider-indicators-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-slider-indicators-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-slider-indicators-desktop;\n  }\n","line":{"start":382,"end":390}}},{"description":"Creates all the styles for tabs at different media sizes.\n\n","context":{"type":"mixin","name":"react-md-tabs-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-tabs-mobile;\n  }\n\n  @if $include-toolbars and $include-swipeable {\n    @media #{$md-mobile-portrait-media} {\n      @include react-md-tabs-mobile-portrait($include-icons, $include-toolbars, $include-prominent-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-mobile-landscape-media} {\n      @include react-md-tabs-mobile-landscape($include-icons, $include-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-tablet-media} {\n      @include react-md-tabs-tablet($include-icons, $include-toolbars, $include-swipeable);\n    }\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tabs-desktop;\n  }\n","line":{"start":494,"end":516}}},{"description":"Includes the media queries for text fields on mobile devices and desktop screens. The floating\nlabels, blocks, icons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-fields-mobile($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-fields-desktop($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n","line":{"start":288,"end":303}}},{"description":"Includes the media queries for the text-field container.\n\n","context":{"type":"mixin","name":"react-md-text-field-container-media","code":"\n  @if $include-block {\n    @media #{$md-mobile-media} {\n      @include react-md-text-field-container-mobile($include-block);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-text-field-container-desktop($include-block);\n    }\n  }\n","line":{"start":519,"end":529}}},{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-floating-label);\n  }\n","line":{"start":705,"end":713}}},{"description":"Includes the media queries and styles for the text field floating labels..\n\n","context":{"type":"mixin","name":"react-md-text-field-floating-label-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n","line":{"start":853,"end":861}}},{"description":"Includes the mobile and desktop media queries for the text field dividers.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n","line":{"start":972,"end":980}}},{"description":"Includes the media queries and styles for the text field icons.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop;\n  }\n","line":{"start":1190,"end":1198}}},{"description":"Includes the media queries for showing inline indicators in text fields.\n\n","context":{"type":"mixin","name":"react-md-text-field-inline-indicator-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-inline-indicator-mobile($include-block);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-inline-indicator-desktop($include-block);\n  }\n","line":{"start":1356,"end":1364}}},{"description":"Includes the media queries for toolbars.\n\n","context":{"type":"mixin","name":"react-md-toolbars-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-toolbars-mobile($include-prominent);\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-toolbars-mobile-portait($include-prominent, $include-btn-text, $include-autocompletes);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-toolbars-mobile-landscape($include-prominent, $include-btn-text, $include-autocompletes);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-toolbars-tablet($include-prominent, $include-btn-text, $include-autocompletes, $include-select-fields);\n  }\n","line":{"start":490,"end":511}}},{"description":"Includes the media queries for tooltips on mobile devices and desktop\nscreens.\n\n","context":{"type":"mixin","name":"react-md-tooltips-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-tooltips-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tooltips-desktop;\n  }\n","line":{"start":169,"end":177}}},{"description":"Includes the mobile and desktop media queries for typography. If the `$extend-html-tags` param is true,\nthe `h6`, `h5`, `h4`, and `p` tags will also be modified.\n\n","context":{"type":"mixin","name":"react-md-typography-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-typography-mobile($extend-html-tags);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-typography-desktop($extend-html-tags);\n  }\n","line":{"start":674,"end":682}}}]},{"description":"The default media query for a portrait mobile device.\n","commentRange":{"start":82,"end":84},"context":{"type":"variable","name":"md-mobile-portrait-media","value":"'screen and (min-width: #{$md-mobile-min-width}) and (orientation: portrait)'","scope":"default","line":{"start":85,"end":85}},"type":"String","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the media queries and styles for drawers.\n\n","context":{"type":"mixin","name":"react-md-drawers-media","code":"\n  @media #{$md-mobile-media} and (max-width: #{$md-desktop-min-width - 1}) {\n    @include react-md-drawers-mobile;\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-drawers-mobile-portrait;\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-drawers-mobile-landscape;\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-drawers-tablet;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-drawers-desktop;\n  }\n","line":{"start":228,"end":248}}},{"description":"Includes the media queries and styles for navigation drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}}},{"description":"Creates all the styles for tabs at different media sizes.\n\n","context":{"type":"mixin","name":"react-md-tabs-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-tabs-mobile;\n  }\n\n  @if $include-toolbars and $include-swipeable {\n    @media #{$md-mobile-portrait-media} {\n      @include react-md-tabs-mobile-portrait($include-icons, $include-toolbars, $include-prominent-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-mobile-landscape-media} {\n      @include react-md-tabs-mobile-landscape($include-icons, $include-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-tablet-media} {\n      @include react-md-tabs-tablet($include-icons, $include-toolbars, $include-swipeable);\n    }\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tabs-desktop;\n  }\n","line":{"start":494,"end":516}}},{"description":"Includes the media queries for toolbars.\n\n","context":{"type":"mixin","name":"react-md-toolbars-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-toolbars-mobile($include-prominent);\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-toolbars-mobile-portait($include-prominent, $include-btn-text, $include-autocompletes);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-toolbars-mobile-landscape($include-prominent, $include-btn-text, $include-autocompletes);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-toolbars-tablet($include-prominent, $include-btn-text, $include-autocompletes, $include-select-fields);\n  }\n","line":{"start":490,"end":511}}}]},{"description":"The default media query for a landscape mobile device.\n","commentRange":{"start":87,"end":89},"context":{"type":"variable","name":"md-mobile-landscape-media","value":"'screen and (min-width: #{$md-mobile-min-width}) and (orientation: landscape)'","scope":"default","line":{"start":90,"end":90}},"type":"String","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the media queries and styles for drawers.\n\n","context":{"type":"mixin","name":"react-md-drawers-media","code":"\n  @media #{$md-mobile-media} and (max-width: #{$md-desktop-min-width - 1}) {\n    @include react-md-drawers-mobile;\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-drawers-mobile-portrait;\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-drawers-mobile-landscape;\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-drawers-tablet;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-drawers-desktop;\n  }\n","line":{"start":228,"end":248}}},{"description":"Includes the media queries and styles for navigation drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}}},{"description":"Creates all the styles for tabs at different media sizes.\n\n","context":{"type":"mixin","name":"react-md-tabs-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-tabs-mobile;\n  }\n\n  @if $include-toolbars and $include-swipeable {\n    @media #{$md-mobile-portrait-media} {\n      @include react-md-tabs-mobile-portrait($include-icons, $include-toolbars, $include-prominent-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-mobile-landscape-media} {\n      @include react-md-tabs-mobile-landscape($include-icons, $include-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-tablet-media} {\n      @include react-md-tabs-tablet($include-icons, $include-toolbars, $include-swipeable);\n    }\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tabs-desktop;\n  }\n","line":{"start":494,"end":516}}},{"description":"Includes the media queries for toolbars.\n\n","context":{"type":"mixin","name":"react-md-toolbars-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-toolbars-mobile($include-prominent);\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-toolbars-mobile-portait($include-prominent, $include-btn-text, $include-autocompletes);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-toolbars-mobile-landscape($include-prominent, $include-btn-text, $include-autocompletes);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-toolbars-tablet($include-prominent, $include-btn-text, $include-autocompletes, $include-select-fields);\n  }\n","line":{"start":490,"end":511}}}]},{"description":"The default media query for a tablet device.\n","commentRange":{"start":92,"end":94},"context":{"type":"variable","name":"md-tablet-media","value":"'screen and (min-width: #{$md-tablet-min-width})'","scope":"default","line":{"start":95,"end":95}},"type":"String","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the media queries and styles for drawers.\n\n","context":{"type":"mixin","name":"react-md-drawers-media","code":"\n  @media #{$md-mobile-media} and (max-width: #{$md-desktop-min-width - 1}) {\n    @include react-md-drawers-mobile;\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-drawers-mobile-portrait;\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-drawers-mobile-landscape;\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-drawers-tablet;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-drawers-desktop;\n  }\n","line":{"start":228,"end":248}}},{"description":"Includes the media queries and styles for navigation drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}}},{"description":"Creates all the styles for tabs at different media sizes.\n\n","context":{"type":"mixin","name":"react-md-tabs-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-tabs-mobile;\n  }\n\n  @if $include-toolbars and $include-swipeable {\n    @media #{$md-mobile-portrait-media} {\n      @include react-md-tabs-mobile-portrait($include-icons, $include-toolbars, $include-prominent-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-mobile-landscape-media} {\n      @include react-md-tabs-mobile-landscape($include-icons, $include-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-tablet-media} {\n      @include react-md-tabs-tablet($include-icons, $include-toolbars, $include-swipeable);\n    }\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tabs-desktop;\n  }\n","line":{"start":494,"end":516}}},{"description":"Includes the media queries for toolbars.\n\n","context":{"type":"mixin","name":"react-md-toolbars-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-toolbars-mobile($include-prominent);\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-toolbars-mobile-portait($include-prominent, $include-btn-text, $include-autocompletes);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-toolbars-mobile-landscape($include-prominent, $include-btn-text, $include-autocompletes);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-toolbars-tablet($include-prominent, $include-btn-text, $include-autocompletes, $include-select-fields);\n  }\n","line":{"start":490,"end":511}}}]},{"description":"The default media query for a portrait tablet device.\n","commentRange":{"start":97,"end":99},"context":{"type":"variable","name":"md-tablet-portrait-media","value":"'screen and (min-width: #{$md-tablet-min-width}) and (orientation: protrait)'","scope":"default","line":{"start":100,"end":100}},"type":"String","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"The default media query for a landscape tablet device.\n","commentRange":{"start":102,"end":104},"context":{"type":"variable","name":"md-tablet-landscape-media","value":"'screen and (min-width: #{$md-tablet-min-width}) and (orientation: landscape)'","scope":"default","line":{"start":105,"end":105}},"type":"String","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"The default media query for a desktop device.\n","commentRange":{"start":107,"end":109},"context":{"type":"variable","name":"md-desktop-media","value":"'screen and (min-width: #{$md-desktop-min-width})'","scope":"default","line":{"start":110,"end":110}},"type":"String","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the media queries for autocompletes.\n\n","context":{"type":"mixin","name":"react-md-autocompletes-media","code":"\n  @if $include-inline {\n    @media #{$md-mobile-media} {\n      @include react-md-autocompletes-mobile($include-inline);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-autocompletes-desktop($include-inline);\n    }\n  }\n","line":{"start":101,"end":111}}},{"description":"Creates the media queries and styles for buttons for mobile and desktop.\n\n","context":{"type":"mixin","name":"react-md-buttons-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-buttons-mobile($include-flat, $include-raised, $include-floating);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-buttons-desktop($include-flat, $include-raised, $include-floating);\n  }\n","line":{"start":431,"end":439}}},{"description":"A mixin for generating the base color class names to be used\non multiple components. This will generate the following class names:\n- md-color--text - Styles the `color` to be the text color.\n- md-color--secondary-text - Styles the `color` to be the secondary text color.\n- md-color--disabled - Styles the `color` to be the disabled text color.\n- md-color--primary - Styles the `color` to be the `primary` color.\n- md-color--secondary - Styles the `color` to be the `secondary` color.\n- md-background - Styles the `background` to be the base background color.\n- md-background--primary - Styles the `background` to be the `primary` color.\n- md-background--primary-hover - Styles the `background` to be the `primary` color with some opacity.\n- md-background--secondary - Styles the `background` to be the `secondary` color.\n- md-background--secondary-hover - Styles the `background` to be the `secondary` color with some opacity.\n- md-color--primary-ink - Styles any ink inside this class to use the `primary` color.\n- md-color--secondary-ink - Styles any ink inside this class to use the `secondary` color.\n\n","context":{"type":"mixin","name":"react-md-colors","code":"\n  .md-color--text {\n    color: get-color('text', $light-theme);\n  }\n\n  .md-color--secondary-text {\n    color: get-color('secondary', $light-theme);\n  }\n\n  .md-color--disabled {\n    color: get-color('disabled', $light-theme);\n  }\n\n  .md-color--primary {\n    color: $primary-color;\n  }\n\n  .md-color--primary-ink {\n    .md-ink {\n      background: rgba($primary-color, .26);\n    }\n  }\n\n  .md-color--secondary {\n    color: $secondary-color;\n  }\n\n  .md-color--secondary-ink {\n    .md-ink {\n      background: rgba($secondary-color, .26);\n    }\n  }\n\n  .md-background {\n    background: get-color('background', $light-theme);\n  }\n\n  .md-background--card {\n    background: get-color('card', $light-theme);\n  }\n\n  .md-background--primary {\n    background: $primary-color;\n    color: if(lightness($primary-color) > 40, $md-white-base, $md-black-base);\n  }\n\n  .md-background--secondary {\n    background: $secondary-color;\n    color: if(lightness($secondary-color) > 40, $md-white-base, $md-black-base);\n  }\n\n  @if $include-media {\n    @media #{$md-desktop-media} {\n      .md-background--primary-hover:hover {\n        background: rgba($primary-color, .9);\n      }\n\n      .md-background--secondary-hover:hover {\n        background: rgba($secondary-color, .9);\n      }\n    }\n  }\n\n  @if $include-color-class-names {\n    @include react-md-color-class-names;\n  }\n","line":{"start":1232,"end":1298}}},{"description":"This will conditionally update theme colors. The theme colors will only\nbe updated if their value does not equal the global value.\n\n","context":{"type":"mixin","name":"react-md-theme-colors","code":"\n  @if $primary-color != $md-primary-color {\n    .md-color--primary {\n      color: $primary-color;\n\n    }\n\n    .md-color--primary-ink {\n      .md-ink {\n        background: rgba($primary-color, .26);\n      }\n    }\n\n    .md-background--primary {\n      background: $primary-color;\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-color--secondary {\n      color: $secondary-color;\n    }\n\n    .md-color--secondary-ink {\n      .md-ink {\n        background: rgba($secondary-color, .26);\n      }\n    }\n\n    .md-background--secondary {\n      background: $secondary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-color--text {\n      color: get-color('text', $light-theme);\n    }\n\n    .md-color--secondary-text {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-color--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n\n    .md-background {\n      background: get-color('background', $light-theme);\n    }\n\n    .md-background--card {\n      background: get-color('card', $light-theme);\n    }\n  }\n\n  @if $include-media and ($primary-color != $md-primary-color or $secondary-color != $md-secondary-color) {\n    @media #{$md-desktop-media} {\n      @if $primary-color != $md-primary-color {\n        .md-background--primary-hover:hover {\n          background: rgba($primary-color, .9);\n        }\n      }\n\n      @if $secondary-color != $md-secondary-color {\n        .md-background--secondary-hover:hover {\n          background: rgba($secondary-color, .9);\n        }\n      }\n    }\n  }\n","line":{"start":1309,"end":1380}}},{"description":"Includes the media queries and styles for drawers.\n\n","context":{"type":"mixin","name":"react-md-drawers-media","code":"\n  @media #{$md-mobile-media} and (max-width: #{$md-desktop-min-width - 1}) {\n    @include react-md-drawers-mobile;\n  }\n\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-drawers-mobile-portrait;\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-drawers-mobile-landscape;\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-drawers-tablet;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-drawers-desktop;\n  }\n","line":{"start":228,"end":248}}},{"description":"Includes the media queries and styles for lists on mobile devices and desktop screens.\n\n","context":{"type":"mixin","name":"react-md-lists-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-lists-mobile($include-icon, $include-avatar, $include-two-lines, $include-three-lines);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-lists-desktop($include-icon, $include-avatar, $include-two-lines, $include-three-lines);\n  }\n","line":{"start":407,"end":420}}},{"description":"Includes the media queries for menus on mobile devices and desktop screens.\n\n","context":{"type":"mixin","name":"react-md-menus-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-menus-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-menus-desktop;\n  }\n","line":{"start":219,"end":227}}},{"description":"Includes the media queries and styles for navigation drawers.\n\n","context":{"type":"mixin","name":"react-md-navigation-drawers-media","code":"\n  @media #{$md-mobile-portrait-media} {\n    @include react-md-navigation-drawers-mobile-portrait($enforce-height);\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-navigation-drawers-tablet($enforce-height);\n  }\n\n  @if $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop;\n    }\n  }\n","line":{"start":196,"end":214}}},{"description":"Creates the styles for paper.\n","context":{"type":"mixin","name":"react-md-papers","code":"\n  @for $i from 0 through 5 {\n    .md-paper--#{$i} {\n      @include md-box-shadow($i);\n    }\n\n    @if $i == 0 and $include-media {\n      @media #{$md-desktop-media} {\n        .md-paper--#{$i}-hover {\n          transition-duration: $md-paper-transition-time;\n          transition-property: box-shadow;\n\n          &:hover {\n            @include md-box-shadow(3);\n          }\n        }\n      }\n    }\n  }\n","line":{"start":11,"end":30}}},{"description":"Includes the mobile and desktop media queries for the slider indicators.\n\n","context":{"type":"mixin","name":"react-md-slider-indicators-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-slider-indicators-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-slider-indicators-desktop;\n  }\n","line":{"start":382,"end":390}}},{"description":"Creates all the styles for tabs at different media sizes.\n\n","context":{"type":"mixin","name":"react-md-tabs-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-tabs-mobile;\n  }\n\n  @if $include-toolbars and $include-swipeable {\n    @media #{$md-mobile-portrait-media} {\n      @include react-md-tabs-mobile-portrait($include-icons, $include-toolbars, $include-prominent-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-mobile-landscape-media} {\n      @include react-md-tabs-mobile-landscape($include-icons, $include-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-tablet-media} {\n      @include react-md-tabs-tablet($include-icons, $include-toolbars, $include-swipeable);\n    }\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tabs-desktop;\n  }\n","line":{"start":494,"end":516}}},{"description":"Includes the media queries for text fields on mobile devices and desktop screens. The floating\nlabels, blocks, icons, or password styles can be ommitted by disabling the defaults or passing\nfalse here. This should normally be used within a media query for mobile devices.\n\n> Note: If the password is included, icons will automatically be included since they\n> share styles.\n\n","context":{"type":"mixin","name":"react-md-text-fields-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-fields-mobile($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-fields-desktop($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n","line":{"start":288,"end":303}}},{"description":"Includes the media queries for the text-field container.\n\n","context":{"type":"mixin","name":"react-md-text-field-container-media","code":"\n  @if $include-block {\n    @media #{$md-mobile-media} {\n      @include react-md-text-field-container-mobile($include-block);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-text-field-container-desktop($include-block);\n    }\n  }\n","line":{"start":519,"end":529}}},{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-floating-label);\n  }\n","line":{"start":705,"end":713}}},{"description":"Includes the media queries and styles for the text field floating labels..\n\n","context":{"type":"mixin","name":"react-md-text-field-floating-label-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n","line":{"start":853,"end":861}}},{"description":"Includes the mobile and desktop media queries for the text field dividers.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n","line":{"start":972,"end":980}}},{"description":"Includes the media queries and styles for the text field icons.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop;\n  }\n","line":{"start":1190,"end":1198}}},{"description":"Includes the media queries for showing inline indicators in text fields.\n\n","context":{"type":"mixin","name":"react-md-text-field-inline-indicator-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-inline-indicator-mobile($include-block);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-inline-indicator-desktop($include-block);\n  }\n","line":{"start":1356,"end":1364}}},{"description":"Includes the media queries for tooltips on mobile devices and desktop\nscreens.\n\n","context":{"type":"mixin","name":"react-md-tooltips-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-tooltips-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tooltips-desktop;\n  }\n","line":{"start":169,"end":177}}},{"description":"Includes the mobile and desktop media queries for typography. If the `$extend-html-tags` param is true,\nthe `h6`, `h5`, `h4`, and `p` tags will also be modified.\n\n","context":{"type":"mixin","name":"react-md-typography-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-typography-mobile($extend-html-tags);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-typography-desktop($extend-html-tags);\n  }\n","line":{"start":674,"end":682}}}]},{"description":"Boolean if the media queries should be included by default for all component mixins.\nSet this to false if you want to manually include them. It is really only beneficial\nif you want to join all media queries into one, but you can always use a postcss plugin\nto combine them if you are worried about bundle size.\n","commentRange":{"start":112,"end":117},"context":{"type":"variable","name":"md-media-included","value":"true","scope":"default","line":{"start":118,"end":118}},"type":"Boolean","group":["media-queries"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}}],"functions":[],"mixins":[]}