{"placeholders":[],"variables":[{"description":"The default size for an avatar\n","commentRange":{"start":6,"end":7},"context":{"type":"variable","name":"md-avatar-size","value":"40px","scope":"private","line":{"start":8,"end":8}},"type":"Number","group":["avatars"],"access":"public","file":{"path":"components/_avatars.scss","name":"_avatars.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":89}}},{"description":"Includes the styles for lists.\n\n","context":{"type":"mixin","name":"react-md-lists","code":"\n  @if $include-media {\n    @include react-md-lists-media($include-icon, $include-avatar, $include-two-lines, $include-three-lines);\n  }\n\n  .md-list {\n    @extend %md-list-unstyled;\n    background: get-color('card', $light-theme);\n    user-select: none;\n\n    .md-avatar,\n    .md-icon {\n      flex-shrink: 0;\n    }\n\n    .md-divider {\n      margin-bottom: 8px;\n      margin-top: 8px;\n    }\n  }\n\n  .md-list-tile {\n    align-items: center;\n    display: flex;\n    padding-left: $md-default-padding;\n    padding-right: $md-default-padding;\n    text-decoration: none;\n    transition-duration: $md-transition-time;\n    transition-property: background;\n  }\n\n  .md-list-tile--active {\n    background: get-color('hover', $light-theme);\n  }\n\n  .md-list-item--inset {\n    padding-left: $md-list-left-padding;\n  }\n\n  .md-tile-content {\n    flex-grow: 1;\n  }\n\n  @if $include-icon {\n    .md-tile-content--left-icon {\n      padding-left: $md-list-left-padding - $md-font-icon-size - $md-default-padding;\n    }\n  }\n\n  @if $include-avatar {\n    .md-tile-content--left-avatar {\n      padding-left: $md-list-left-padding - $md-avatar-size - $md-default-padding;\n    }\n  }\n\n  @if $include-icon or $include-avatar {\n    .md-tile-addon--icon {\n      height: $md-font-icon-size;\n    }\n\n    .md-color--primary .md-icon {\n      color: inherit;\n    }\n\n    .md-tile-addon--avatar {\n      height: $md-avatar-size;\n    }\n\n    .md-tile-content--right-padding {\n      padding-right: $md-default-padding;\n    }\n  }\n\n  %tile-text {\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .md-tile-text--primary {\n    @extend %tile-text;\n  }\n\n  @if $include-two-lines or $include-three-lines {\n    .md-tile-text--secondary {\n      @extend %tile-text;\n    }\n  }\n\n  @if $include-three-lines {\n    .md-tile-text--three-lines {\n      // scss-lint:disable PropertySortOrder\n      white-space: pre-line;\n\n      // Magic with webkit-line clamp\n      display: -webkit-box;\n      -webkit-box-orient: vertical;\n      -webkit-line-clamp: 2;\n    }\n\n    @if $include-icon or $include-avatar {\n      .md-list-tile--three-lines .md-tile-addon {\n        align-self: flex-start;\n      }\n    }\n  }\n\n  @if $nested-items-depth != null and $nested-items-depth > 0 {\n    @include react-md-lists-nested($nested-items-depth, $nested-items-increment);\n  }\n\n  @if $include-controls {\n    .md-list-control {\n      flex-grow: 1;\n\n      .md-selection-control-label {\n        width: 100%;\n      }\n    }\n\n    .md-tile-content--left-button {\n      padding-left: $md-list-left-padding - $md-font-icon-size * 2;\n    }\n\n    .md-list-control--right {\n      justify-content: flex-end;\n    }\n\n    .md-list-tile--control-left {\n      padding-left: 0;\n    }\n\n    .md-list-tile--control-right {\n      padding-right: 0;\n    }\n  }\n","line":{"start":81,"end":228}}}]},{"description":"The default background color for an avatar.\n","commentRange":{"start":10,"end":11},"context":{"type":"variable","name":"md-avatar-default-background","value":"$md-grey-400","scope":"default","line":{"start":12,"end":12}},"type":"Color","group":["avatars"],"access":"public","file":{"path":"components/_avatars.scss","name":"_avatars.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":89}}}]},{"description":"The default text color for an avatar.\n","commentRange":{"start":14,"end":15},"context":{"type":"variable","name":"md-avatar-default-color","value":"$md-white-base","scope":"default","line":{"start":16,"end":16}},"type":"Color","group":["avatars"],"access":"public","file":{"path":"components/_avatars.scss","name":"_avatars.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":89}}}]},{"description":"A map of avatar color suffixes to use. Each key will be used\nas an avatar suffix name, and the value will be a list of two\ncolors where the first item is the background color and the\nsecond item is the text color.\n\n","commentRange":{"start":18,"end":23},"context":{"type":"variable","name":"md-avatar-colors","value":"(\n  'red': $md-red-400 $md-red-100,\n  'pink': $md-pink-400 $md-pink-100,\n  'purple': $md-purple-300 $md-purple-100,\n  'deep-purple': $md-deep-purple-400 $md-deep-purple-100,\n  'indigo': $md-indigo-400 $md-indigo-100,\n  'blue': $md-blue-400 $md-blue-100,\n  'light-blue': $md-light-blue-400 $md-light-blue-100,\n  'cyan': $md-cyan-400 $md-cyan-100,\n  'teal': $md-teal-400 $md-teal-100,\n  'green': $md-green-400 $md-green-100,\n  'light-green': $md-light-green-400 $md-light-green-100,\n  'lime': $md-lime-400 $md-lime-100,\n  'yellow': $md-yellow-400 $md-yellow-100,\n  'amber': $md-amber-400 $md-amber-100,\n  'orange': $md-orange-300 $md-orange-100,\n  'deep-orange': $md-deep-orange-400 $md-deep-orange-100,\n  'brown': $md-brown-400 $md-brown-100,\n  'blue-grey': $md-blue-grey-400 $md-blue-grey-100,\n)","scope":"default","line":{"start":24,"end":43}},"type":"Map","group":["avatars"],"access":"public","file":{"path":"components/_avatars.scss","name":"_avatars.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":89}}}]}],"functions":[],"mixins":[{"description":"Includes the css for the Avatars.\n","commentRange":{"start":45,"end":48},"context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":89}},"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."},{"type":"Boolean","name":"include-suffixes","default":"true","description":"Boolean if the avatar color suffixes\n    should be included."}],"group":["avatars"],"access":"public","require":[{"type":"mixin","name":"react-md-theme-avatar"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-light-theme-divider-color"},{"type":"variable","name":"md-dark-theme-divider-color"},{"type":"variable","name":"md-avatar-size"},{"type":"variable","name":"md-font-icon-size"},{"type":"variable","name":"md-avatar-default-background"},{"type":"variable","name":"md-avatar-default-color"},{"type":"variable","name":"md-avatar-colors"}],"file":{"path":"components/_avatars.scss","name":"_avatars.scss"},"usedBy":[{"description":"Includes every component, transition, and typography including their\nmedia queries if the `$md-media-included` variable is `true`. You can\nmodify any global variables before including this mixin to change the overall\ntheme.\n\n","context":{"type":"mixin","name":"react-md-everything","code":"\n  @include react-md-typography;\n  @include react-md-accessibility;\n  @include react-md-grid;\n  @include react-md-transitions;\n\n  @include react-md-autocompletes;\n  @include react-md-avatars;\n  @include react-md-bottom-navigations;\n  @include react-md-buttons;\n  @include react-md-cards;\n  @include react-md-chips;\n  @include react-md-collapsers;\n  @include react-md-data-tables;\n  @include react-md-dialogs;\n  @include react-md-dividers;\n  @include react-md-drawers;\n  @include react-md-expansion-panels;\n  @include react-md-file-inputs;\n  @include react-md-inks;\n  @include react-md-icons;\n  @include react-md-lists;\n  @include react-md-media;\n  @include react-md-menus;\n  @include react-md-navigation-drawers;\n  @include react-md-overlays;\n  @include react-md-papers;\n  @include react-md-pickers;\n  @include react-md-progress;\n  @include react-md-select-fields;\n  @include react-md-selection-controls;\n  @include react-md-sliders;\n  @include react-md-subheaders;\n  @include react-md-snackbars;\n  @include react-md-tabs;\n  @include react-md-text-fields;\n  @include react-md-toolbars;\n  @include react-md-tooltips;\n\n  @include react-md-helpers-everything;\n  @include react-md-colors;\n","line":{"start":53,"end":94}}}]},{"description":"This will only update the base avatar's border color if the `$light-theme` is different than\n`$md-light-theme`. If you want to add different colors, you should use the `react-md-theme-avatar`\nmixin.\n\n","commentRange":{"start":91,"end":96},"context":{"type":"mixin","name":"react-md-theme-avatars","code":"\n  @if $light-theme != $md-light-theme {\n    .md-avatar {\n      border-color: get-color('divider', $light-theme);\n    }\n  }\n","line":{"start":97,"end":103}},"see":[{"description":"Creates a single _theme_ for the Avatar. It simply creates a\nclass name with the new background and text color with the given\nsuffix.\n\n","context":{"type":"mixin","name":"react-md-theme-avatar","code":"\n  .md-avatar--#{$suffix} {\n    background: $bg-color;\n    color: $text-color;\n  }\n","line":{"start":121,"end":126}}}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."}],"group":["avatars"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-light-theme"}],"file":{"path":"components/_avatars.scss","name":"_avatars.scss"},"usedBy":[{"description":"Updates the styles of every component with the new theme colors. If there\nare components that do not change if the `$light-theme` variable is the same,\ntheir updated styles will not be included. This is useful if you want to switch\nbetween the light or dark theme, or even the entire theme colors while keeping\nthe base css the same between all themes.\n\nIn addition, if the theme colors do not switch, those styles will not be created.\nSo this allows the same colors between light and dark themes.\n\nIf you switch between the light and dark theme, you will need to give a `$html-class-name`\nThat will nest every component inside.\n\n","context":{"type":"mixin","name":"react-md-theme-everything","code":"\n  @if $html-class-name != null {\n    @include react-md-theme-typography($html-class-name, $light-theme);\n\n    .#{$html-class-name} {\n      @include react-md-theme-avatars($light-theme);\n      @include react-md-theme-buttons($primary-color, $secondary-color, $light-theme);\n      @include react-md-theme-cards($light-theme);\n      @include react-md-theme-chips($light-theme);\n      @include react-md-theme-data-tables($light-theme);\n      @include react-md-theme-dividers($light-theme);\n      @include react-md-theme-expansion-panels($light-theme);\n      @include react-md-theme-icons($light-theme);\n      @include react-md-theme-inks($light-theme);\n      @include react-md-theme-lists($light-theme);\n      @include react-md-theme-pickers($primary-color, $light-theme);\n      @include react-md-theme-progress($secondary-color, $progress-swatch);\n      @include react-md-theme-selection-controls($secondary-color, $light-theme);\n      @include react-md-theme-sliders($primary-color, $secondary-color, $light-theme);\n      @include react-md-theme-tabs($secondary-color);\n      @include react-md-theme-text-fields($primary-color, $light-theme, $error-color);\n      @include react-md-theme-toolbars($light-theme);\n\n      @include react-md-theme-colors($primary-color, $secondary-color, $light-theme);\n    }\n  } @else {\n    @include react-md-theme-avatars($light-theme);\n    @include react-md-theme-buttons($primary-color, $secondary-color, $light-theme);\n    @include react-md-theme-cards($light-theme);\n    @include react-md-theme-chips($light-theme);\n    @include react-md-theme-data-tables($light-theme);\n    @include react-md-theme-dividers($light-theme);\n    @include react-md-theme-expansion-panels($light-theme);\n    @include react-md-theme-icons($light-theme);\n    @include react-md-theme-inks($light-theme);\n    @include react-md-theme-lists($light-theme);\n    @include react-md-theme-pickers($primary-color, $light-theme);\n    @include react-md-theme-progress($secondary-color, $progress-swatch);\n    @include react-md-theme-selection-controls($secondary-color, $light-theme);\n    @include react-md-theme-sliders($primary-color, $secondary-color, $light-theme);\n    @include react-md-theme-tabs($secondary-color);\n    @include react-md-theme-text-fields($primary-color, $light-theme, $error-color);\n    @include react-md-theme-toolbars($light-theme);\n\n    @include react-md-theme-colors($primary-color, $secondary-color, $light-theme);\n  }\n\n","line":{"start":145,"end":199}}}]},{"description":"Creates a single _theme_ for the Avatar. It simply creates a\nclass name with the new background and text color with the given\nsuffix.\n\n","commentRange":{"start":105,"end":120},"context":{"type":"mixin","name":"react-md-theme-avatar","code":"\n  .md-avatar--#{$suffix} {\n    background: $bg-color;\n    color: $text-color;\n  }\n","line":{"start":121,"end":126}},"example":[{"type":"scss","code":"@include react-md-theme-avatars(#000, #fff, black);","description":"Simple Example SCSS"},{"type":"scss","code":".md-avatar--black {\n  background: #000;\n  color: #fff;\n}","description":"Simple Example CSS Output"}],"parameter":[{"type":"Color","name":"bg-color","description":"The background color to use."},{"type":"Color","name":"text-color","description":"The text color to use."},{"type":"String","name":"suffix","description":"The class name suffix to use."}],"group":["avatars"],"access":"public","require":[],"file":{"path":"components/_avatars.scss","name":"_avatars.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":89}}}]}]}