{"placeholders":[],"variables":[{"description":"The font icon size.\n","commentRange":{"start":147,"end":149},"context":{"type":"variable","name":"md-font-icon-size","value":"24px","scope":"private","line":{"start":150,"end":150}},"type":"Number","group":["icons"],"access":"public","file":{"path":"_typography.scss","name":"_typography.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":89}}},{"description":"Creates the styles for a tab in the bottom navigation.\n","context":{"type":"mixin","name":"react-md-bottom-navigations-nav","code":"\n  .md-bottom-nav {\n    display: block;\n    flex-grow: 1;\n    font-size: $md-bottom-navigation-inactive-font-size;\n    height: $md-bottom-navigation-height;\n    max-width: $md-bottom-navigation-max-width;\n    padding: $md-bottom-navigation-top-padding-inactive $md-bottom-navigation-lr-padding $md-bottom-navigation-bottom-padding;\n    text-align: center;\n    text-decoration: none;\n    user-select: none;\n\n    &--active {\n      flex-shrink: 0;\n      font-size: $md-bottom-navigation-active-font-size;\n      padding-top: $md-bottom-navigation-top-padding-active;\n    }\n\n    &--fixed {\n      min-width: $md-bottom-navigation-fixed-min-width;\n    }\n\n    &--shifting {\n      min-width: $md-bottom-navigation-shifting-active-min-width;\n      position: initial;\n      transition-duration: $md-transition-time;\n      transition-property: max-width;\n\n      &-inactive {\n        max-width: $md-bottom-navigation-shifting-inactive-max-width;\n        min-width: $md-bottom-navigation-shifting-inactive-min-width;\n        padding-top: 16px;\n      }\n\n      .md-ink-container {\n        overflow: visible;\n      }\n\n      .md-ink {\n        background: $md-bottom-navigation-shifting-ink-color;\n      }\n    }\n\n    &-label {\n      transition-duration: $md-transition-time;\n      transition-property: color, font-size;\n\n      &--shifting-inactive {\n        max-width: $md-bottom-navigation-shifting-inactive-min-width - $md-bottom-navigation-lr-padding * 2;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n\n    .md-icon {\n      @extend %md-block-centered;\n    }\n\n    // scss-lint:disable QualifyingElement\n    // don't know why links render incorrectly\n    a.md-bottom-nav {\n      .md-icon {\n        margin-top: ($md-bottom-navigation-height - $md-font-icon-size - 16px) / 2;\n      }\n    }\n  }\n","line":{"start":66,"end":132}}},{"description":"Includes the styles for material design buttons. Each button type can optionally\nbe excluded. However, if the `floating` styles are included, the `icon` styles\nwill also be included.\n\n","context":{"type":"mixin","name":"react-md-buttons","code":"\n  @if $include-media {\n    @include react-md-buttons-media($include-flat, $include-raised);\n  }\n\n  // scss-lint:disable QualifyingElement\n  a.md-btn {\n    text-decoration: none;\n  }\n\n  .md-btn {\n    background: transparent;\n    border: 0;\n    border-radius: 2px;\n    position: relative;\n    transition-duration: $md-transition-time;\n    transition-property: background, color;\n\n    &:focus {\n      outline: none;\n    }\n\n    .md-icon {\n      color: inherit;\n    }\n\n    .md-icon-separator {\n      height: 100%;\n    }\n  }\n\n  .md-btn--hover {\n    background: if($light-theme, $md-btn-light-theme-hover-color, $md-btn-dark-theme-hover-color);\n  }\n\n  .md-btn--color-primary-active {\n    background: rgba($primary-color, .12);\n  }\n\n  .md-btn--color-secondary-active {\n    background: rgba($secondary-color, .12);\n  }\n\n  @if $include-flat or $include-raised {\n    .md-btn--text {\n      font-weight: $md-font-medium;\n      min-width: $md-btn-min-width;\n      padding: 8px $md-btn-lr-padding;\n      text-transform: uppercase;\n      transition-duration: $md-transition-time;\n    }\n  }\n\n  @if $include-raised or $include-floating {\n    .md-btn--raised {\n      @include md-box-shadow(1);\n\n      transition: background $md-transition-time, box-shadow $md-transition-time * 2, color $md-transition-time;\n    }\n\n    .md-btn--raised-disabled {\n      background: get-color('divider', $light-theme);\n    }\n\n    .md-btn--raised-pressed {\n      @include md-box-shadow(2);\n    }\n  }\n\n  @if $include-icon or $include-floating {\n    .md-btn--icon {\n      border-radius: 50%;\n      color: get-color('icon', $light-theme);\n      height: $md-btn-icon-size;\n      padding: $md-btn-icon-padding;\n      width: $md-btn-icon-size;\n    }\n  }\n\n  @if $include-floating {\n    .md-btn--floating {\n      @include md-box-shadow(2);\n\n      height: $md-btn-floating-size;\n      padding: ($md-btn-floating-size - $md-font-icon-size) / 2;\n      transition-property: background, box-shadow, color;\n      width: $md-btn-floating-size;\n    }\n\n    .md-btn--floating-pressed {\n      @include md-box-shadow(4);\n    }\n\n    .md-btn--floating-mini {\n      height: $md-btn-floating-mini-size;\n      padding: ($md-btn-floating-mini-size - $md-font-icon-size) / 2;\n      width: $md-btn-floating-mini-size;\n    }\n\n    .md-btn--fixed {\n      position: fixed;\n      z-index: $md-btn-fixed-z-index;\n    }\n  }\n","line":{"start":119,"end":232}}},{"description":"Includes the styles for the remove icons in chips.\n\n","context":{"type":"mixin","name":"react-md-chips-remove","code":"\n  .md-chip-icon {\n    color: $md-chip-icon-color;\n    margin-left: $md-chip-icon-padding;\n    margin-right: $md-chip-icon-padding;\n    position: absolute;\n    right: 0;\n    top: ($md-chip-height - $md-font-icon-size) / 2;\n    z-index: 1;\n  }\n\n  .md-chip-icon--rotate {\n    transform: rotate3d(0, 0, 1, 45deg);\n  }\n\n  .md-chip--remove {\n    padding-right: $md-font-icon-size + ($md-chip-icon-padding * 2);\n  }\n","line":{"start":125,"end":143}}},{"description":"Includes the css for using `md-icon`.\n","context":{"type":"mixin","name":"react-md-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  .md-icon {\n    color: $md-icon-color;\n    font-size: $md-font-icon-size;\n    text-align: center;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n    user-select: none;\n\n    &--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n\n    &--inherit {\n      color: inherit;\n    }\n  }\n\n  @if $include-separators {\n    @include react-md-icon-separators;\n  }\n","line":{"start":24,"end":47}}},{"description":"Includes the styles for lists.\n\n","context":{"type":"mixin","name":"react-md-lists","code":"\n  @if $include-media {\n    @include react-md-lists-media($include-icon, $include-avatar, $include-two-lines, $include-three-lines);\n  }\n\n  .md-list {\n    @extend %md-list-unstyled;\n    background: get-color('card', $light-theme);\n    user-select: none;\n\n    .md-avatar,\n    .md-icon {\n      flex-shrink: 0;\n    }\n\n    .md-divider {\n      margin-bottom: 8px;\n      margin-top: 8px;\n    }\n  }\n\n  .md-list-tile {\n    align-items: center;\n    display: flex;\n    padding-left: $md-default-padding;\n    padding-right: $md-default-padding;\n    text-decoration: none;\n    transition-duration: $md-transition-time;\n    transition-property: background;\n  }\n\n  .md-list-tile--active {\n    background: get-color('hover', $light-theme);\n  }\n\n  .md-list-item--inset {\n    padding-left: $md-list-left-padding;\n  }\n\n  .md-tile-content {\n    flex-grow: 1;\n  }\n\n  @if $include-icon {\n    .md-tile-content--left-icon {\n      padding-left: $md-list-left-padding - $md-font-icon-size - $md-default-padding;\n    }\n  }\n\n  @if $include-avatar {\n    .md-tile-content--left-avatar {\n      padding-left: $md-list-left-padding - $md-avatar-size - $md-default-padding;\n    }\n  }\n\n  @if $include-icon or $include-avatar {\n    .md-tile-addon--icon {\n      height: $md-font-icon-size;\n    }\n\n    .md-color--primary .md-icon {\n      color: inherit;\n    }\n\n    .md-tile-addon--avatar {\n      height: $md-avatar-size;\n    }\n\n    .md-tile-content--right-padding {\n      padding-right: $md-default-padding;\n    }\n  }\n\n  %tile-text {\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .md-tile-text--primary {\n    @extend %tile-text;\n  }\n\n  @if $include-two-lines or $include-three-lines {\n    .md-tile-text--secondary {\n      @extend %tile-text;\n    }\n  }\n\n  @if $include-three-lines {\n    .md-tile-text--three-lines {\n      // scss-lint:disable PropertySortOrder\n      white-space: pre-line;\n\n      // Magic with webkit-line clamp\n      display: -webkit-box;\n      -webkit-box-orient: vertical;\n      -webkit-line-clamp: 2;\n    }\n\n    @if $include-icon or $include-avatar {\n      .md-list-tile--three-lines .md-tile-addon {\n        align-self: flex-start;\n      }\n    }\n  }\n\n  @if $nested-items-depth != null and $nested-items-depth > 0 {\n    @include react-md-lists-nested($nested-items-depth, $nested-items-increment);\n  }\n\n  @if $include-controls {\n    .md-list-control {\n      flex-grow: 1;\n\n      .md-selection-control-label {\n        width: 100%;\n      }\n    }\n\n    .md-tile-content--left-button {\n      padding-left: $md-list-left-padding - $md-font-icon-size * 2;\n    }\n\n    .md-list-control--right {\n      justify-content: flex-end;\n    }\n\n    .md-list-tile--control-left {\n      padding-left: 0;\n    }\n\n    .md-list-tile--control-right {\n      padding-right: 0;\n    }\n  }\n","line":{"start":81,"end":228}}},{"description":"Includes the base styles for pickers. This is styles that is used for both date and time pickers.\nThis is normally used within the `react-md-pickers` mixin.\n\n","context":{"type":"mixin","name":"react-md-pickers-base","code":"\n  .md-picker-container {\n    position: relative;\n  }\n\n  .md-picker-content-container {\n    background: if($light-theme, get-color('card', true), get-color('background', false));\n  }\n\n  .md-picker--inline {\n    @include md-box-shadow(3);\n\n    position: absolute;\n    z-index: $md-picker-inline-z-index;\n  }\n\n  .md-picker--inline-icon {\n    left: $md-font-icon-size + $md-default-padding;\n  }\n\n  .md-picker-control {\n    @extend %md-text-left;\n\n    padding: 0;\n  }\n\n  .md-picker-text {\n    color: get-color('secondary', false);\n\n    &.md-picker-text > * {\n      color: inherit;\n    }\n\n    > * {\n      font-weight: inherit;\n      margin: 0;\n      transition-duration: $md-transition-time;\n      transition-property: color, font;\n    }\n  }\n\n  .md-picker-text--active {\n    color: get-color('text', false);\n    font-weight: $md-font-medium;\n  }\n\n  .md-dialog--picker {\n    max-height: calc(100vh - #{$md-picker-mobile-margin});\n    max-width: calc(100vw - #{$md-picker-mobile-margin});\n    width: auto;\n  }\n\n  .md-dialog-content--picker {\n    max-height: inherit;\n    max-width: inherit;\n    padding: 0;\n  }\n\n  .md-picker-header {\n    background: if($light-theme, $primary-color, get-color('card', false));\n    padding: $md-dialog-padding;\n  }\n\n  @if $include-forceful-classes {\n    @include react-md-pickers-force-orientation;\n  }\n","line":{"start":252,"end":318}}},{"description":"Creates the styles for select fields.\n\n","context":{"type":"mixin","name":"react-md-select-fields","code":"\n  .md-select-field {\n    cursor: inherit;\n    user-select: none;\n  }\n\n  .md-select-field-container--below {\n    padding-left: $md-select-field-left-padding;\n    padding-right: $md-font-icon-size + $md-select-field-right-padding;\n    transition-duration: $md-transition-time;\n    transition-property: box-shadow;\n\n    .md-text-field-inline-indicator {\n      right: $md-select-field-right-padding;\n    }\n  }\n\n  .md-drop-enter {\n    transform: translate3d(0, $md-select-field-drop-distance, 0);\n\n    &.md-drop-enter-active {\n      transform: translate3d(0, 0, 0);\n      transition-duration: $md-select-field-drop-transition-time;\n      transition-property: transform;\n    }\n  }\n\n","line":{"start":19,"end":46}}},{"description":"This includes the small scss for displaying `.md-icon` or indicators with a Slider.\n","context":{"type":"mixin","name":"react-md-slider-indicators","code":"\n  @if $include-media {\n    @include react-md-slider-indicators-media;\n  }\n\n  .md-slider-container {\n    .md-icon {\n      $margin: ($md-slider-height - $md-font-icon-size) / 2;\n\n      margin-bottom: $margin;\n      margin-top: $margin;\n    }\n  }\n\n  .md-slider-ind {\n    display: block;\n    text-align: center;\n  }\n\n  .md-slider-track--ind-left {\n    margin-left: $md-default-padding;\n  }\n\n  .md-slider-track--ind-right {\n    margin-right: $md-default-padding;\n  }\n","line":{"start":322,"end":348}}},{"description":"Creates the styles for text field icons on mobile devices. This should be included within\na media query.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-mobile","code":"\n  $text-field-height: 19px;\n\n  .md-text-field-icon {\n    margin-bottom: 16px - (($md-font-icon-size - $text-field-height) / 2);\n  }\n","line":{"start":1163,"end":1169}}},{"description":"Creates the styles for text field icons on desktop screens. This should be included within\na media query.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-desktop","code":"\n  $text-field-height: 15px;\n\n  .md-text-field-icon {\n    margin-bottom: 12px - (($md-font-icon-size - $text-field-height) / 2);\n  }\n","line":{"start":1178,"end":1184}}},{"description":"Includes the styles for having a password text field.\n\n","context":{"type":"mixin","name":"react-md-text-field-password","code":"\n  .md-password-btn {\n    background: transparent;\n    border: 0;\n    color: get-color('hint', $light-theme);\n    height: $md-font-icon-size;\n    padding: 0;\n    width: $md-font-icon-size;\n\n    &:focus {\n      outline: none;\n    }\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-password-btn--active {\n    color: get-color('secondary', $light-theme);\n\n    &::before {\n      background: get-color('secondary', $light-theme);\n    }\n  }\n\n  .md-password-btn--invisible {\n    &::before,\n    &::after {\n      content: '';\n      display: block;\n      height: 2px;\n      position: absolute;\n      top: 50%;\n      width: 100%;\n    }\n\n    &::before {\n      transform: translate3d(-1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n\n    &::after {\n      background: get-color('background', $light-theme);\n      transform: translate3d(1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n  }\n","line":{"start":1208,"end":1254}}},{"description":"Creates teh styles for the text field's inline indicator. This is is for showing a password button\nor some other icon within the text field.\n\n","context":{"type":"mixin","name":"react-md-text-field-inline-indicator","code":"\n  .md-text-field-inline-indicator {\n    position: absolute;\n    right: 0;\n  }\n\n  .md-text-field--inline-indicator {\n    padding-right: $md-font-icon-size;\n  }\n","line":{"start":1294,"end":1303}}},{"description":"Hosts the material icon font library locally by declaring the font face\nand the .material-icons css class.\n\n","context":{"type":"mixin","name":"host-material-icons","code":"\n  $icon-link: $font-url + '/MaterialIcons-Regular';\n  @font-face {\n    font-family: 'Material Icons';\n    font-style: normal;\n    font-weight: 400;\n    src: url($icon-link + '.eot');\n    // scss-lint:disable SpaceAfterComma\n    src: local('Material Icons'),\n         local('MaterialIcons-Regular'),\n         url($icon-link + '.woff2') format('woff2'),\n         url($icon-link + '.woff') format('woff'),\n         url($icon-link + '.ttf') format('truetype');\n    // scss-lint:enable SpaceAfterComma\n  }\n\n  .material-icons {\n    direction: ltr;\n    display: inline-block;\n    font-family: 'Material Icons';\n    // Support for IE.\n    font-feature-settings: 'liga';\n    font-size: $md-font-icon-size;\n    // Support for Firefox.\n    -moz-osx-font-smoothing: grayscale;\n    // Support for all WebKit browsers.\n    -webkit-font-smoothing: antialiased;\n    font-style: normal;\n    font-weight: normal;\n    letter-spacing: normal;\n    line-height: 1;\n    // Support for Safari and Chrome.\n    text-rendering: optimizeLegibility;\n    text-transform: none;\n    white-space: nowrap;\n    word-wrap: normal;\n\t}\n","line":{"start":873,"end":910}}}]},{"description":"Boolean if the icon separator styles should be included by default.\n","commentRange":{"start":5,"end":6},"context":{"type":"variable","name":"md-font-icon-include-separators","value":"true","scope":"default","line":{"start":7,"end":7}},"type":"Boolean","group":["icons"],"access":"public","file":{"path":"components/_icons.scss","name":"_icons.scss"}},{"description":"The amount of padding to put between an icon and any text.\n","commentRange":{"start":9,"end":10},"context":{"type":"variable","name":"md-font-icon-separator-padding","value":"$md-default-padding","scope":"default","line":{"start":11,"end":11}},"type":"Number","group":["icons"],"access":"public","file":{"path":"components/_icons.scss","name":"_icons.scss"},"usedBy":[{"description":"Includes the styles for the `IconSeparator` component.\n\n","context":{"type":"mixin","name":"react-md-icon-separators","code":"\n  .md-icon-separator {\n    align-items: center;\n    display: flex;\n    text-align: left;\n\n    .md-icon-text {\n      flex-grow: 1;\n      flex-shrink: 0;\n      line-height: inherit;\n\n      &:first-child {\n        padding-right: $md-font-icon-separator-padding;\n      }\n\n      &:last-child {\n        padding-left: $md-font-icon-separator-padding;\n      }\n    }\n\n    .md-icon {\n      flex-grow: 0;\n      flex-shrink: 0;\n    }\n  }\n","line":{"start":72,"end":97}}}]},{"description":"The light theme's disabled color for icons.\n","commentRange":{"start":13,"end":14},"context":{"type":"variable","name":"md-font-icon-light-theme-disabled-color","value":"rgba($md-black-base, .26)","scope":"private","line":{"start":15,"end":15}},"type":"Color","group":["icons"],"access":"public","file":{"path":"components/_icons.scss","name":"_icons.scss"},"usedBy":[{"description":"Includes the css for using `md-icon`.\n","context":{"type":"mixin","name":"react-md-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  .md-icon {\n    color: $md-icon-color;\n    font-size: $md-font-icon-size;\n    text-align: center;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n    user-select: none;\n\n    &--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n\n    &--inherit {\n      color: inherit;\n    }\n  }\n\n  @if $include-separators {\n    @include react-md-icon-separators;\n  }\n","line":{"start":24,"end":47}}},{"description":"Updates the color of the base `md-icon` if the `$light-theme` paramater\ndoes not equal the global `$md-light-theme`.\n","context":{"type":"mixin","name":"react-md-theme-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  @if $light-theme != $md-light-theme {\n    .md-icon {\n      color: $md-icon-color;\n    }\n\n    .md-icon--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n  }\n","line":{"start":54,"end":66}}}]},{"description":"The dark theme's disabled color for icons.\n","commentRange":{"start":17,"end":18},"context":{"type":"variable","name":"md-font-icon-dark-theme-disabled-color","value":"rgba($md-white-base, .3)","scope":"private","line":{"start":19,"end":19}},"type":"Color","group":["icons"],"access":"public","file":{"path":"components/_icons.scss","name":"_icons.scss"},"usedBy":[{"description":"Includes the css for using `md-icon`.\n","context":{"type":"mixin","name":"react-md-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  .md-icon {\n    color: $md-icon-color;\n    font-size: $md-font-icon-size;\n    text-align: center;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n    user-select: none;\n\n    &--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n\n    &--inherit {\n      color: inherit;\n    }\n  }\n\n  @if $include-separators {\n    @include react-md-icon-separators;\n  }\n","line":{"start":24,"end":47}}},{"description":"Updates the color of the base `md-icon` if the `$light-theme` paramater\ndoes not equal the global `$md-light-theme`.\n","context":{"type":"mixin","name":"react-md-theme-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  @if $light-theme != $md-light-theme {\n    .md-icon {\n      color: $md-icon-color;\n    }\n\n    .md-icon--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n  }\n","line":{"start":54,"end":66}}}]}],"functions":[],"mixins":[{"description":"Includes the css for using `md-icon`.\n","commentRange":{"start":21,"end":23},"context":{"type":"mixin","name":"react-md-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  .md-icon {\n    color: $md-icon-color;\n    font-size: $md-font-icon-size;\n    text-align: center;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n    user-select: none;\n\n    &--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n\n    &--inherit {\n      color: inherit;\n    }\n  }\n\n  @if $include-separators {\n    @include react-md-icon-separators;\n  }\n","line":{"start":24,"end":47}},"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the\n    application is using the light-theme or not."}],"group":["icons"],"access":"public","require":[{"type":"mixin","name":"react-md-icon-separators"},{"type":"variable","name":"md-light-theme-secondary-text-color"},{"type":"variable","name":"md-dark-theme-secondary-text-color"},{"type":"variable","name":"md-font-icon-size"},{"type":"variable","name":"md-transition-time"},{"type":"variable","name":"md-font-icon-light-theme-disabled-color"},{"type":"variable","name":"md-font-icon-dark-theme-disabled-color"}],"file":{"path":"components/_icons.scss","name":"_icons.scss"},"usedBy":[{"description":"Includes every component, transition, and typography including their\nmedia queries if the `$md-media-included` variable is `true`. You can\nmodify any global variables before including this mixin to change the overall\ntheme.\n\n","context":{"type":"mixin","name":"react-md-everything","code":"\n  @include react-md-typography;\n  @include react-md-accessibility;\n  @include react-md-grid;\n  @include react-md-transitions;\n\n  @include react-md-autocompletes;\n  @include react-md-avatars;\n  @include react-md-bottom-navigations;\n  @include react-md-buttons;\n  @include react-md-cards;\n  @include react-md-chips;\n  @include react-md-collapsers;\n  @include react-md-data-tables;\n  @include react-md-dialogs;\n  @include react-md-dividers;\n  @include react-md-drawers;\n  @include react-md-expansion-panels;\n  @include react-md-file-inputs;\n  @include react-md-inks;\n  @include react-md-icons;\n  @include react-md-lists;\n  @include react-md-media;\n  @include react-md-menus;\n  @include react-md-navigation-drawers;\n  @include react-md-overlays;\n  @include react-md-papers;\n  @include react-md-pickers;\n  @include react-md-progress;\n  @include react-md-select-fields;\n  @include react-md-selection-controls;\n  @include react-md-sliders;\n  @include react-md-subheaders;\n  @include react-md-snackbars;\n  @include react-md-tabs;\n  @include react-md-text-fields;\n  @include react-md-toolbars;\n  @include react-md-tooltips;\n\n  @include react-md-helpers-everything;\n  @include react-md-colors;\n","line":{"start":53,"end":94}}}]},{"description":"Updates the color of the base `md-icon` if the `$light-theme` paramater\ndoes not equal the global `$md-light-theme`.\n","commentRange":{"start":50,"end":53},"context":{"type":"mixin","name":"react-md-theme-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  @if $light-theme != $md-light-theme {\n    .md-icon {\n      color: $md-icon-color;\n    }\n\n    .md-icon--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n  }\n","line":{"start":54,"end":66}},"parameter":[{"name":"{Boolean{","description":"$light-theme [$md-light-theme] - Boolean if using the\n    light theme."}],"group":["icons"],"access":"public","require":[{"type":"variable","name":"md-light-theme-secondary-text-color"},{"type":"variable","name":"md-dark-theme-secondary-text-color"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-font-icon-light-theme-disabled-color"},{"type":"variable","name":"md-font-icon-dark-theme-disabled-color"}],"file":{"path":"components/_icons.scss","name":"_icons.scss"},"usedBy":[{"description":"Updates the styles of every component with the new theme colors. If there\nare components that do not change if the `$light-theme` variable is the same,\ntheir updated styles will not be included. This is useful if you want to switch\nbetween the light or dark theme, or even the entire theme colors while keeping\nthe base css the same between all themes.\n\nIn addition, if the theme colors do not switch, those styles will not be created.\nSo this allows the same colors between light and dark themes.\n\nIf you switch between the light and dark theme, you will need to give a `$html-class-name`\nThat will nest every component inside.\n\n","context":{"type":"mixin","name":"react-md-theme-everything","code":"\n  @if $html-class-name != null {\n    @include react-md-theme-typography($html-class-name, $light-theme);\n\n    .#{$html-class-name} {\n      @include react-md-theme-avatars($light-theme);\n      @include react-md-theme-buttons($primary-color, $secondary-color, $light-theme);\n      @include react-md-theme-cards($light-theme);\n      @include react-md-theme-chips($light-theme);\n      @include react-md-theme-data-tables($light-theme);\n      @include react-md-theme-dividers($light-theme);\n      @include react-md-theme-expansion-panels($light-theme);\n      @include react-md-theme-icons($light-theme);\n      @include react-md-theme-inks($light-theme);\n      @include react-md-theme-lists($light-theme);\n      @include react-md-theme-pickers($primary-color, $light-theme);\n      @include react-md-theme-progress($secondary-color, $progress-swatch);\n      @include react-md-theme-selection-controls($secondary-color, $light-theme);\n      @include react-md-theme-sliders($primary-color, $secondary-color, $light-theme);\n      @include react-md-theme-tabs($secondary-color);\n      @include react-md-theme-text-fields($primary-color, $light-theme, $error-color);\n      @include react-md-theme-toolbars($light-theme);\n\n      @include react-md-theme-colors($primary-color, $secondary-color, $light-theme);\n    }\n  } @else {\n    @include react-md-theme-avatars($light-theme);\n    @include react-md-theme-buttons($primary-color, $secondary-color, $light-theme);\n    @include react-md-theme-cards($light-theme);\n    @include react-md-theme-chips($light-theme);\n    @include react-md-theme-data-tables($light-theme);\n    @include react-md-theme-dividers($light-theme);\n    @include react-md-theme-expansion-panels($light-theme);\n    @include react-md-theme-icons($light-theme);\n    @include react-md-theme-inks($light-theme);\n    @include react-md-theme-lists($light-theme);\n    @include react-md-theme-pickers($primary-color, $light-theme);\n    @include react-md-theme-progress($secondary-color, $progress-swatch);\n    @include react-md-theme-selection-controls($secondary-color, $light-theme);\n    @include react-md-theme-sliders($primary-color, $secondary-color, $light-theme);\n    @include react-md-theme-tabs($secondary-color);\n    @include react-md-theme-text-fields($primary-color, $light-theme, $error-color);\n    @include react-md-theme-toolbars($light-theme);\n\n    @include react-md-theme-colors($primary-color, $secondary-color, $light-theme);\n  }\n\n","line":{"start":145,"end":199}}}]},{"description":"Includes the styles for the `IconSeparator` component.\n\n","commentRange":{"start":68,"end":71},"context":{"type":"mixin","name":"react-md-icon-separators","code":"\n  .md-icon-separator {\n    align-items: center;\n    display: flex;\n    text-align: left;\n\n    .md-icon-text {\n      flex-grow: 1;\n      flex-shrink: 0;\n      line-height: inherit;\n\n      &:first-child {\n        padding-right: $md-font-icon-separator-padding;\n      }\n\n      &:last-child {\n        padding-left: $md-font-icon-separator-padding;\n      }\n    }\n\n    .md-icon {\n      flex-grow: 0;\n      flex-shrink: 0;\n    }\n  }\n","line":{"start":72,"end":97}},"example":[{"type":"scss","code":"@include react-md-icon-separators;","description":"Example Usage SCSS"}],"group":["icons"],"access":"public","require":[{"type":"variable","name":"md-font-icon-separator-padding"}],"file":{"path":"components/_icons.scss","name":"_icons.scss"},"usedBy":[{"description":"Includes the css for using `md-icon`.\n","context":{"type":"mixin","name":"react-md-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  .md-icon {\n    color: $md-icon-color;\n    font-size: $md-font-icon-size;\n    text-align: center;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n    user-select: none;\n\n    &--disabled {\n      color: if($light-theme, $md-font-icon-light-theme-disabled-color, $md-font-icon-dark-theme-disabled-color);\n    }\n\n    &--inherit {\n      color: inherit;\n    }\n  }\n\n  @if $include-separators {\n    @include react-md-icon-separators;\n  }\n","line":{"start":24,"end":47}}}]}]}