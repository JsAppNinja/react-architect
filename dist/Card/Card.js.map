{"version":3,"sources":["../../src/js/Card/Card.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQqB,IAAI;YAAJ,IAAI;;AACvB,WADmB,IAAI,CACX,KAAK,EAAE;0BADA,IAAI;;uEAAJ,IAAI,aAEf,KAAK;;UAyBb,eAAe,GAAG,YAAM;AACtB,UAAM,aAAa,GAAG,gBAAgB,IAAI,MAAK,KAAK,CAAC,aAAa,CAAC;AACnE,aAAO;AACL,qBAAa,EAAE,MAAK,iBAAiB;AACrC,kBAAU,EAAE,MAAK,KAAK,CAAC,QAAQ;AAC/B,qBAAa,EAAb,aAAa;AACb,oBAAY,EAAE,qBAAqB,IAAI,MAAK,KAAK,CAAC,YAAY;OAC/D,CAAC;KACH;;UAED,iBAAiB,GAAG,YAAM;AACxB,YAAK,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,MAAK,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;KACnD;;AAnCC,UAAK,qBAAqB,GAAG,qCAAgB,qBAAqB,CAAC,IAAI,OAAM,CAAC;AAC9E,UAAK,KAAK,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,iBAAiB,EAAE,CAAC;;GACpD;;eANkB,IAAI;;6BAyCd;;;mBACmC,IAAI,CAAC,KAAK;UAA5C,SAAS,UAAT,SAAS;UAAE,QAAQ,UAAR,QAAQ;;UAAK,KAAK;;AAErC,UAAI,aAAa,GAAG,CAAC,CAAC,CAAC;AACvB,aACE;;mBAAiB,SAAS,EAAC,KAAK,IAAK,KAAK,IAAE,SAAS,EAAE,0BAAW,SAAS,EAAE,SAAS,CAAC,AAAC;QACrF,gBAAM,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,CAAC,EAAK;AAC1C,cAAG,CAAC,KAAK,EAAE;AAAE,mBAAO,KAAK,CAAC;WAAE;AAC5B,cAAG,aAAa,GAAG,CAAC,IAAI,eApDzB,aAAa,EAoD0B,KAAK,CAAC,KAAK,EAAE,YAAY,CAAC,EAAE;AAChE,yBAAa,GAAG,CAAC,CAAC;WACnB;;AAED,iBAAO,AAAC,aAAa,KAAK,CAAC,IAAI,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,OAAK,KAAK,CAAC,QAAQ,GAAI,IAAI,GAAG;;;YAAS,KAAK;WAAU,CAAC;SAC9G,CAAC;OACc,CAClB;KACH;;;SAzDkB,IAAI;UART,SAAS;;AAQJ,IAAI,CAQhB,SAAS,GAAG;AACjB,WAAS,EAAE,OAjBY,SAAS,CAiBX,MAAM;AAC3B,UAAQ,EAAE,OAlBa,SAAS,CAkBZ,IAAI;AACxB,eAAa,EAAE,OAnBQ,SAAS,CAmBP,MAAM;AAC/B,cAAY,EAAE,OApBS,SAAS,CAoBR,MAAM;AAC9B,mBAAiB,EAAE,OArBI,SAAS,CAqBH,IAAI;CAClC;AAdkB,IAAI,CAgBhB,YAAY,GAAG;AACpB,mBAAiB,EAAE,KAAK;CACzB;AAlBkB,IAAI,CAoBhB,iBAAiB,GAAG;AACzB,eAAa,EAAE,OA7BQ,SAAS,CA6BP,IAAI;AAC7B,YAAU,EAAE,OA9BW,SAAS,CA8BV,IAAI;AAC1B,eAAa,EAAE,OA/BQ,SAAS,CA+BP,MAAM;AAC/B,cAAY,EAAE,OAhCS,SAAS,CAgCR,MAAM;CAC/B;kBAzBkB,IAAI","file":"Card.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport TransitionGroup from 'react-addons-transition-group';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nimport { isPropEnabled } from '../utils/PropUtils';\nimport Height from '../Transitions';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n    this.state = { expanded: props.isInitialExpanded };\n  }\n\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    iconClassName: PropTypes.string,\n    iconChildren: PropTypes.string,\n    isInitialExpanded: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    isInitialExpanded: false,\n  }\n\n  static childContextTypes = {\n    onExpandClick: PropTypes.func,\n    isExpanded: PropTypes.bool,\n    iconClassName: PropTypes.string,\n    iconChildren: PropTypes.string,\n  }\n\n  getChildContext = () => {\n    const iconClassName = 'material-icons' || this.props.iconClassName;\n    return {\n      onExpandClick: this.handleExpandClick,\n      isExpanded: this.state.expanded,\n      iconClassName,\n      iconChildren: 'keyboard_arrow_down' || this.props.iconChildren,\n    };\n  }\n\n  handleExpandClick = () => {\n    this.setState({ expanded: !this.state.expanded });\n  }\n\n  render() {\n    const { className, children, ...props } = this.props;\n\n    let expanderIndex = -1;\n    return (\n      <TransitionGroup component=\"div\" {...props} className={classnames('md-card', className)}>\n        {React.Children.map(children, (child, i) => {\n          if(!child) { return child; }\n          if(expanderIndex < 0 && isPropEnabled(child.props, 'isExpander')) {\n            expanderIndex = i;\n          }\n\n          return (expanderIndex !== i && expanderIndex > -1 && !this.state.expanded) ? null : <Height>{child}</Height>;\n        })}\n      </TransitionGroup>\n    );\n  }\n}\n"]}