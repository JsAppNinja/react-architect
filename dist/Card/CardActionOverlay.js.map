{"version":3,"sources":["../../src/js/Card/CardActionOverlay.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKqB,iBAAiB;YAAjB,iBAAiB;;AACpC,WADmB,iBAAiB,CACxB,KAAK,EAAE;0BADA,iBAAiB;;uEAAjB,iBAAiB,aAE5B,KAAK;;AAEX,UAAK,qBAAqB,GAAG,qCAAgB,qBAAqB,CAAC,IAAI,OAAM,CAAC;;GAC/E;;eALkB,iBAAiB;;6BAkB3B;mBAC8B,IAAI,CAAC,KAAK;UAAvC,KAAK,UAAL,KAAK;UAAE,QAAQ,UAAR,QAAQ;UAAE,OAAO,UAAP,OAAO;;AAChC,aACE;;;QACE,qCAxBC,SAAS,IAwBC,KAAK,EAAE,KAAK,AAAC,EAAC,QAAQ,EAAE,QAAQ,AAAC,GAAG;QAC/C;iBAzBY,WAAW;;UA0BpB,OAAO,CAAC,GAAG,CAAC,UAAC,WAAW,EAAE,CAAC,EAAK;AAC/B,gBAAM,SAAS,GAAG,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;AACjE,mBAAO,qCA5Bc,UAAU,aA4BZ,WAAS,SAAS,AAAC,EAAC,GAAG,EAAE,CAAC,AAAC,IAAK,WAAW,EAAI,CAAC;WACpE,CAAC;SACU;OACT,CACP;KACH;;;SA/BkB,iBAAiB;UALtB,SAAS;;AAKJ,iBAAiB,CAO7B,SAAS,GAAG;AACjB,OAAK,EAAE,OAbgB,SAAS,CAaf,MAAM;AACvB,UAAQ,EAAE,OAda,SAAS,CAcZ,MAAM;AAC1B,SAAO,EAAE,OAfc,SAAS,CAeb,OAAO,CAAC,OAfJ,SAAS,CAeK,KAAK,CAAC;AACzC,WAAO,EAAE,OAhBY,SAAS,CAgBX,IAAI;AACvB,WAAO,EAAE,OAjBY,SAAS,CAiBX,IAAI;AACvB,aAAS,EAAE,OAlBU,SAAS,CAkBT,IAAI;AACzB,YAAQ,EAAE,OAnBW,SAAS,CAmBV,IAAI,CAAC,UAAU;GACpC,CAAC,CAAC;CACJ;kBAhBkB,iBAAiB","file":"CardActionOverlay.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\n\nimport { CardTitle, CardActions, FlatButton } from '../index';\n\nexport default class CardActionOverlay extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n  }\n\n  static propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    actions: PropTypes.arrayOf(PropTypes.shape({\n      default: PropTypes.bool,\n      primary: PropTypes.bool,\n      secondary: PropTypes.bool,\n      children: PropTypes.node.isRequired,\n    })),\n  }\n\n  render() {\n    const { title, subtitle, actions } = this.props;\n    return (\n      <span>\n        <CardTitle title={title} subtitle={subtitle} />\n        <CardActions>\n          {actions.map((actionProps, i) => {\n            const isDefault = !actionProps.primary && !actionProps.secondary;\n            return <FlatButton default={isDefault} key={i} {...actionProps} />;\n          })}\n        </CardActions>\n      </span>\n    );\n  }\n}\n"]}