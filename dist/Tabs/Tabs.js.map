{"version":3,"sources":["../../src/js/Tabs/Tabs.js"],"names":[],"mappings":"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","file":"Tabs.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport CSSTransitionGroup from 'react-addons-css-transition-group';\nimport classnames from 'classnames';\n\nimport { isPropEnabled } from '../utils/PropUtils';\n\nexport default class Tabs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n    this.state = {\n      activeTabIndex: 0,\n    };\n    this.slide = null;\n  }\n\n  static propTypes = {\n    children: PropTypes.node,\n    activeTabIndex: PropTypes.number,\n    className: PropTypes.string,\n    onTabChange: PropTypes.func,\n    component: PropTypes.string,\n    transitionEnterTimeout: PropTypes.number,\n    transitionLeaveTimeout: PropTypes.number,\n    transitionEnter: PropTypes.bool,\n    transitionLeave: PropTypes.bool,\n    transitionName: PropTypes.string,\n    primary: PropTypes.bool,\n    secondary: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    transitionEnterTimeout: 150,\n    transitionLeaveTimeout: 0,\n    transitionEnter: true,\n    transitionLeave: false,\n    transitionName: 'tab',\n    component: 'div',\n  }\n\n  componentDidMount() {\n    this.slide = ReactDOM.findDOMNode(this.refs.slide);\n    const tabs = ReactDOM.findDOMNode(this).querySelectorAll('.md-tab');\n    for(let i = 0; i < tabs.length; i++) {\n      const tab = tabs[i];\n      if(tab.classList.contains('active')) {\n        this.slide.style.width = `${tab.offsetWidth}px`;\n        return;\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevTabIndex = this.getActiveTabIndex({ props: prevProps, state: prevState });\n    const activeTabIndex = this.getActiveTabIndex();\n    if(prevTabIndex === activeTabIndex) {\n      return;\n    }\n    const tab = this.getActiveTab();\n    this.slide.style.width = `${tab.offsetWidth}px`;\n    this.slide.style.left = `${tab.offsetLeft}px`;\n  }\n\n  getActiveTab = () => {\n    return ReactDOM.findDOMNode(this).querySelector('.md-tab.active');\n  }\n\n  getActiveTabIndex = ({ props, state } = this) => {\n    return typeof props.activeTabIndex === 'number' ? props.activeTabIndex : state.activeTabIndex;\n  }\n\n  handleTabChange = (i, tab) => {\n    this.props.onTabChange && this.props.onTabChange(i, tab);\n    if(!this.props.activeTabIndex) {\n      this.setState({ activeTabIndex: i });\n    }\n  }\n\n  render() {\n    const { children, className, ...props } = this.props;\n    const activeTabIndex = this.getActiveTabIndex();\n\n    let tabContent = null;\n    const tabs = React.Children.map(children, (tab, i) => {\n      const isActive = i === activeTabIndex;\n      if(isActive) {\n        tabContent = <div className=\"md-tab-content\" key={i}>{tab.props.children}</div>;\n      }\n\n      return React.cloneElement(tab, {\n        key: i,\n        valueLink: {\n          checked: isActive,\n          requestChange: this.handleTabChange.bind(this, i, tab),\n        },\n      });\n    });\n\n    const tabsClassName = classnames('md-tabs', {\n      'md-tabs-primary': isPropEnabled(this.props, 'primary'),\n      'md-tabs-secondary': isPropEnabled(this.props, 'secondary'),\n    });\n    return (\n      <CSSTransitionGroup {...props} className={classnames('md-tabs-container', className)}>\n        <ul className={tabsClassName}>\n          {tabs}\n          <span className=\"slide\" ref=\"slide\" />\n        </ul>\n        {tabContent}\n      </CSSTransitionGroup>\n    );\n  }\n}\n"]}