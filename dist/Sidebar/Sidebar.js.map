{"version":3,"sources":["../../src/js/Sidebar/Sidebar.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOqB,OAAO;YAAP,OAAO;;AAC1B,WADmB,OAAO,CACd,KAAK,EAAE;0BADA,OAAO;;uEAAP,OAAO,aAElB,KAAK;;AAEX,UAAK,qBAAqB,GAAG,qCAAgB,qBAAqB,CAAC,IAAI,OAAM,CAAC;;GAC/E;;eALkB,OAAO;;6BA2BjB;mBAC+E,IAAI,CAAC,KAAK;UAAxF,MAAM,UAAN,MAAM;UAAE,MAAM,UAAN,MAAM;UAAE,OAAO,UAAP,OAAO;UAAE,KAAK,UAAL,KAAK;UAAE,UAAU,UAAV,UAAU;UAAE,SAAS,UAAT,SAAS;UAAE,QAAQ,UAAR,QAAQ;;UAAK,KAAK;;AACjF,aACE;;mBAAK,SAAS,EAAE,0BAAW,sBAAsB,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,eAhCtE,aAAa,EAgCuE,KAAK,EAAE,OAAO,CAAC,EAAE,uBAAuB,EAAE,UAAU,EAAE,CAAC,AAAC,IAAK,KAAK;QACvJ;;YAAK,SAAS,EAAE,0BAAW,YAAY,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,AAAC;UAC5D,MAAM;UACP;mBApCD,IAAI;;YAqCA,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,EAAI;AACjB,kBAAG,IAAI,CAAC,OAAO,EAAE;AACf,uBAAO,qCAvCE,WAAW,EAuCI,IAAI,CAAI,CAAC;eAClC,MAAM,IAAG,IAAI,CAAC,SAAS,EAAE;AACxB,uBAAO,qCAzCe,aAAa,EAyCT,IAAI,CAAI,CAAC;eACpC,MAAM;AACL,uBAAO,qCA3CR,QAAQ,EA2Cc,IAAI,CAAI,CAAC;eAC/B;aACF,CAAC;WACG;SACH;OACF,CACN;KACH;;;SA/CkB,OAAO;UAPZ,SAAS;;AAOJ,OAAO,CAOnB,SAAS,GAAG;AACjB,SAAO,EAAE,OAfc,SAAS,CAeb,IAAI;AACvB,QAAM,EAAE,OAhBe,SAAS,CAgBd,IAAI;AACtB,OAAK,EAAE,OAjBgB,SAAS,CAiBf,IAAI;AACrB,YAAU,EAAE,OAlBW,SAAS,CAkBV,IAAI;AAC1B,OAAK,EAAE,OAnBgB,SAAS,CAmBf,OAAO,CAAC,OAnBF,SAAS,CAmBG,KAAK,CAAC;AACvC,WAAO,EAAE,OApBY,SAAS,CAoBX,IAAI;AACvB,aAAS,EAAE,OArBU,SAAS,CAqBT,IAAI;AACzB,aAAS,EAAE,OAtBU,SAAS,CAsBT,IAAI;AACzB,eAAW,EAAE,OAvBQ,SAAS,CAuBP,MAAM;GAC9B,CAAC,CAAC;AACH,QAAM,EAAE,OAzBe,SAAS,CAyBd,IAAI;AACtB,UAAQ,EAAE,OA1Ba,SAAS,CA0BZ,IAAI;AACxB,WAAS,EAAE,OA3BY,SAAS,CA2BX,MAAM;CAC5B;AArBkB,OAAO,CAuBnB,YAAY,GAAG;AACpB,YAAU,EAAE,IAAI;CACjB;kBAzBkB,OAAO","file":"Sidebar.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nimport { List, ListItem, ListDivider, ListSubheader } from '../Lists';\nimport { isPropEnabled } from '../utils/PropUtils';\n\nexport default class Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n  }\n\n  static propTypes = {\n    overlay: PropTypes.bool,\n    isOpen: PropTypes.bool,\n    fixed: PropTypes.bool,\n    responsive: PropTypes.bool,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      divider: PropTypes.bool,\n      subheader: PropTypes.bool,\n      component: PropTypes.func,\n      primaryText: PropTypes.string,\n    })),\n    header: PropTypes.node,\n    children: PropTypes.node,\n    className: PropTypes.string,\n  }\n\n  static defaultProps = {\n    responsive: true,\n  }\n\n  render() {\n    const { isOpen, header, overlay, items, responsive, className, children, ...props } = this.props;\n    return (\n      <div className={classnames('md-sidebar-container', className, { 'fixed': isPropEnabled(props, 'fixed'), 'md-sidebar-responsive': responsive })} {...props}>\n        <nav className={classnames('md-sidebar', { 'active': isOpen })}>\n          {header}\n          <List>\n            {items.map(item => {\n              if(item.divider) {\n                return <ListDivider {...item} />;\n              } else if(item.subheader) {\n                return <ListSubheader {...item} />;\n              } else {\n                return <ListItem {...item} />;\n              }\n            })}\n          </List>\n        </nav>\n      </div>\n    );\n  }\n}\n"]}