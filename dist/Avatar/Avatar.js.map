{"version":3,"sources":["../../src/js/Avatar/Avatar.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMqB,MAAM;YAAN,MAAM;;AACzB,WADmB,MAAM,CACb,KAAK,EAAE;0BADA,MAAM;;uEAAN,MAAM,aAEjB,KAAK;;UAoBb,QAAQ,GAAG,YAAM;wBACa,MAAK,KAAK;UAA9B,KAAK,eAAL,KAAK;UAAE,QAAQ,eAAR,QAAQ;;AACvB,UAAG,CAAC,eA1BC,aAAa,EA0BA,MAAK,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;AACjD,eAAO,IAAI,CAAC;OACb;;AAED,UAAM,CAAC,GAAG,KAAK,IAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,AAAC,CAAC;AAC9D,kCAA0B,CAAC,CAAG;KAC/B;;AA1BC,UAAK,qBAAqB,GAAG,qCAAgB,qBAAqB,CAAC,IAAI,OAAM,CAAC;;GAC/E;;eALkB,MAAM;;6BAgChB;mBACyC,IAAI,CAAC,KAAK;UAAlD,SAAS,UAAT,SAAS;UAAE,GAAG,UAAH,GAAG;UAAE,GAAG,UAAH,GAAG;UAAE,IAAI,UAAJ,IAAI;UAAE,QAAQ,UAAR,QAAQ;;AAC3C,aACE;;UAAK,SAAS,EAAE,0BAAW,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,AAAC;QACjE,GAAG,IAAI,uCAAK,GAAG,EAAE,GAAG,AAAC,EAAC,GAAG,EAAE,GAAG,AAAC,EAAC,SAAS,EAAC,eAAe,GAAG;QAC5D,CAAC,GAAG,IACH;;YAAK,SAAS,EAAC,mBAAmB;UAC/B,IAAI,IAAI,QAAQ;SACb;OAEJ,CACN;KACH;;;SA5CkB,MAAM;UANX,SAAS;;AAMJ,MAAM,CAOlB,SAAS,GAAG;AACjB,WAAS,EAAE,OAdY,SAAS,CAcX,MAAM;AAC3B,KAAG,EAAE,OAfkB,SAAS,CAejB,MAAM;AACrB,KAAG,EAAE,OAhBkB,SAAS,CAgBjB,MAAM;AACrB,MAAI,EAAE,OAjBiB,SAAS,CAiBhB,IAAI;AACpB,UAAQ,EAAE,OAlBa,SAAS,CAkBZ,MAAM;AAC1B,QAAM,EAAE,OAnBe,SAAS,CAmBd,IAAI;AACtB,OAAK,EAAE,OApBgB,SAAS,CAoBf,MAAM;AACvB,UAAQ,EAAE,OArBa,SAAS,CAqBZ,MAAM;CAC3B;AAhBkB,MAAM,CAkBlB,YAAY,GAAG;AACpB,UAAQ,EAAE,CAAC;CACZ;kBApBkB,MAAM","file":"Avatar.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nimport { isPropEnabled } from '../utils/PropUtils';\n\nexport default class Avatar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n  }\n\n  static propTypes = {\n    className: PropTypes.string,\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    icon: PropTypes.node,\n    children: PropTypes.string,\n    random: PropTypes.bool,\n    color: PropTypes.number,\n    maxColor: PropTypes.number,\n  }\n\n  static defaultProps = {\n    maxColor: 3,\n  }\n\n  getColor = () => {\n    const { color, maxColor } = this.props;\n    if(!isPropEnabled(this.props, 'random') && !color) {\n      return null;\n    }\n\n    const i = color || (Math.floor(Math.random() * maxColor) + 1);\n    return `md-avatar-color-${i}`;\n  }\n\n  render() {\n    const { className, src, alt, icon, children } = this.props;\n    return (\n      <div className={classnames('md-avatar', className, this.getColor())}>\n        {src && <img src={src} alt={alt} className=\"md-img-avatar\" />}\n        {!src &&\n          <div className=\"md-avatar-content\">\n            {icon || children}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n"]}