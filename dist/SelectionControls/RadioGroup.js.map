{"version":3,"sources":["../../src/js/SelectionControls/RadioGroup.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIqB,UAAU;YAAV,UAAU;;AAC7B,WADmB,UAAU,CACjB,KAAK,EAAE;0BADA,UAAU;;uEAAV,UAAU,aAErB,KAAK;;UAsBb,YAAY,GAAG,UAAC,CAAC,EAAK;AACpB,YAAK,KAAK,CAAC,QAAQ,IAAI,MAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9D,YAAK,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;KAC1C;;AAvBC,UAAK,qBAAqB,GAAG,qCAAgB,qBAAqB,CAAC,IAAI,OAAM,CAAC;AAC9E,UAAK,KAAK,GAAG;AACX,WAAK,EAAE,KAAK,CAAC,YAAY,IAAI,gBAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;KACnF,CAAC;;GACH;;eARkB,UAAU;;6BA6BpB;;;mBACuD,IAAI,CAAC,KAAK;UAAhE,SAAS,UAAT,SAAS;UAAE,SAAS,UAAT,SAAS;UAAE,QAAQ,UAAR,QAAQ;UAAE,OAAO,UAAP,OAAO;;UAAK,KAAK;;AACzD,UAAM,SAAS,gBACV,KAAK;AACR,iBAAS,EAAE,0BAAW,gBAAgB,EAAE,SAAS,EAAE;AACjD,mBAAS,EAAE,OAAO;SACnB,CAAC;QACH,CAAC;AACF,aAAO,gBAAM,aAAa,CAAC,SAAS,EAAE,SAAS,EAAE,gBAAM,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,CAAC,EAAK;AAC1F,eAAO,gBAAM,YAAY,CAAC,KAAK,EAAE;AAC/B,aAAG,EAAE,CAAC;AACN,iBAAO,EAAE,OAAK,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,KAAK;AAC/C,kBAAQ,EAAE,OAAK,YAAY;SAC5B,CAAC,CAAC;OACJ,CAAC,CAAC,CAAC;KACL;;;SA5CkB,UAAU;UAJf,SAAS;;AAIJ,UAAU,CAUtB,SAAS,GAAG;AACjB,cAAY,EAAE,OAfS,SAAS,CAeR,MAAM;AAC9B,WAAS,EAAE,OAhBY,SAAS,CAgBX,MAAM;AAC3B,UAAQ,EAAE,OAjBa,SAAS,CAiBZ,OAAO,CAAC,OAjBL,SAAS,CAiBM,IAAI,CAAC;AAC3C,WAAS,EAAE,OAlBY,SAAS,CAkBX,MAAM;AAC3B,SAAO,EAAE,OAnBc,SAAS,CAmBb,IAAI;AACvB,UAAQ,EAAE,OApBa,SAAS,CAoBZ,IAAI;CACzB;AAjBkB,UAAU,CAmBtB,YAAY,GAAG;AACpB,WAAS,EAAE,MAAM;AACjB,SAAO,EAAE,KAAK;CACf;kBAtBkB,UAAU","file":"RadioGroup.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nexport default class RadioGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n    this.state = {\n      value: props.initialValue || React.Children.toArray(props.children)[0].props.value,\n    };\n  }\n\n  static propTypes = {\n    initialValue: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.arrayOf(PropTypes.node),\n    component: PropTypes.string,\n    stacked: PropTypes.bool,\n    onChange: PropTypes.func,\n  }\n\n  static defaultProps = {\n    component: 'span',\n    stacked: false,\n  }\n\n  handleChange = (e) => {\n    this.props.onChange && this.props.onChange(e, e.target.value);\n    this.setState({ value: e.target.value });\n  }\n\n  render() {\n    const { component, className, children, stacked, ...props } = this.props;\n    const fullProps = {\n      ...props,\n      className: classnames('md-radio-group', className, {\n        'stacked': stacked,\n      }),\n    };\n    return React.createElement(component, fullProps, React.Children.map(children, (child, i) => {\n      return React.cloneElement(child, {\n        key: i,\n        checked: this.state.value === child.props.value,\n        onChange: this.handleChange,\n      });\n    }));\n  }\n}\n"]}