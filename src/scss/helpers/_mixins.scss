/// Generates the box shadow for material design
///
/// @example scss - Basic Usage Sass
///   .paper-1 {
///     @include md-box-shadow(1);
///   }
///
///   .paper-5 {
///     @include md-box-shadow(5);
///   }
///
/// @example scss - Basic Usage CSS Output
///   .paper-1 {
///     box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14). 0 1px 5px 0 rgba(0, 0, 0, .12), 0 3px 1px -2px rgba(0, 0, 0, .2);
///   }
///
///   .paper-5 {
///     box-shadow: 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12), 0 8px 10px -5px rgba(0, 0, 0, .4);
///   }
///
/// @link https://elements.polymer-project.org/elements/paper-card?view=demo:demo/index.html&active=paper-card
/// @param {Number} elevation - The material design elevation. This should be a number from 0 - 5.
@mixin md-box-shadow($elevation) {
  @if $elevation < 0 or $elevation > 5 {
    @warn 'The elevation must be a number from 0 - 5. elevation given was `#{$elevation}`';
  } @else {
    $top-shadow-color: get-md-color(black, .14);
    $middle-shadow-color: get-md-color(black, .12);
    $bottom-shadow-color: get-md-color(black, if($elevation == 1, .2, .4));
    @if $elevation == 0 {
      box-shadow: none;
    } @else if $elevation == 1 {
      box-shadow: 0 2px 2px 0 $top-shadow-color, 0 1px 5px 0 $middle-shadow-color, 0 3px 1px -2px $bottom-shadow-color;
    } @else if $elevation == 2 {
      box-shadow: 0 4px 5px 0 $top-shadow-color, 0 1px 10px 0 $middle-shadow-color, 0 2px 4px -1px $bottom-shadow-color;
    } @else if $elevation == 3 {
      box-shadow: 0 6px 10px 0 $top-shadow-color, 0 1px 18px 0 $middle-shadow-color, 0 3px 5px -1px $bottom-shadow-color;
    } @else if $elevation == 4 {
      box-shadow: 0 8px 10px 1px $top-shadow-color, 0 3px 14px 2px $middle-shadow-color, 0 5px 5px -3px $bottom-shadow-color;
    } @else if $elevation == 5 {
      box-shadow: 0 16px 24px 2px $top-shadow-color, 0 6px 30px 5px $middle-shadow-color, 0 8px 10px -5px $bottom-shadow-color;
    }
  }
}

/// Get a material design color for the color palette.
/// This will be able to find a primary or an accent color for all the colors on the material design color palette page.
///
/// The only exceptions are brown, grey, and blue-grey. These will only return their primary colors. Black and white will
/// work as an rgba instead on their base colors where $hue is the opacity level.
///
/// @example scss - Basic Usage Sass
///    .some-primary-bg {
///      background: get-md-color(indigo);
///    }
///
/// @example scss - Basic Usage CSS Output
///    .some-primary-bg {
///      background: #3F51B5;
///    }
///
/// @example scss - Primary Color with Specific Hue Sass
///   .some-bg {
///     background: get-md-color(deep-purple, 3);
///   }
///
/// @example scss - Primary Color with Specific Hue CSS Output
///   .some-bg {
///     background: #9fa8da;
///   }
///
/// @example scss - Accent Color Sass
///   .some-bg {
///     background: get-md-color(teal, 2, true);
///   }
///
/// @example scss - Accent Color CSS Output
///   .some-bg {
///     background: #64ffda;
///   }
///
/// @example scss - Black color Sass
///   .some-bg {
///     background: get-md-color(black, .26);
///   }
///
/// @example scss - Black Color CSS Output
///   .some-bg {
///     background: rgba(0, 0, 0, .26);
///   }
///
/// @link https://www.google.com/design/spec/style/color.html#color-color-palette
///
/// @param {String} $color - One of the material design colors to look up. Should be one of (red pink purple deep-purple indigo blue light-blue cyan teal
///     green light-green lime yellow amber orange deep-orange brown grey blue-grey).
/// @param {Number} $hue [6] - This is the color mapping from the material design color palette page. This value should be in the range
///     from 1 - 10 when this is a primary color. 1 would return the color with a strength of 50, while 2 - 10 would return a color with a strength of a multiple of 100.
///     The value should be in the range from 1 - 4 when it is an accent color.
///     Finally, the value should be a number from 0 - 1 when the color is black.
/// @param {Bool} $accent [false] - Is this color an accent color?
/// @return {String} the material design color code
@function get-md-color($color, $hue: 6, $accent: false) {
  @if $color == black or $color == white {
    @return rgba(if($color == black, $black-base, $white-base), if($hue > 1, 1, $hue));
  }
  $colors: (red pink purple deep-purple indigo blue light-blue cyan teal green light-green lime yellow amber orange deep-orange brown grey blue-grey);
  $color-index: index($colors, $color);

  @if $accent and $color-index > index($colors, deep-orange) {
    @warn 'There is no accent color for `#{$color}`. Disabiling accent.';
    $accent: false;
  } @else if $accent and $hue > 4 {
    @warn 'The given hue `#{$hue}` is not available for the accent colors. Defaulting to accent 400';
    $hue: 3;
  } @else if $hue > 10 {
    @warn 'The given hue `#{$hue}` is not allowed for the primary colors. Defaulting to base color 500';
    $hue: 6;
  }

  $red-50: #ffebee;
  $red-100: #ffcdd2;
  $red-200: #ef9a9a;
  $red-300: #e57373;
  $red-400: #ef5350;
  $red-500: #f44336;
  $red-600: #e53935;
  $red-700: #d32f2f;
  $red-800: #c62828;
  $red-900: #b71c1c;

  $a-red-100: #ffcdd2;
  $a-red-200: #ff5252;
  $a-red-400: #d50000;
  $a-red-700: #d50000;

  $reds: ($red-50 $red-100 $red-200 $red-300 $red-400 $red-500 $red-600 $red-700 $red-800 $red-900);
  $red-accents: ($a-red-100 $a-red-200 $a-red-400 $a-red-700);


  $pink-50: #fce4ec;
  $pink-100: #f8bbd0;
  $pink-200: #f48fb1;
  $pink-300: #f06292;
  $pink-400: #ec407a;
  $pink-500: #e91e63;
  $pink-600: #d81b60;
  $pink-700: #c2185b;
  $pink-800: #ad1457;
  $pink-900: #880e4f;

  $a-pink-100: #ff80ab;
  $a-pink-200: #ff4081;
  $a-pink-400: #f50057;
  $a-pink-700: #c51162;

  $pinks: ($pink-50 $pink-100 $pink-200 $pink-300 $pink-400 $pink-500 $pink-600 $pink-700 $pink-800 $pink-900);
  $pink-accents: ($a-pink-100 $a-pink-200 $a-pink-400 $a-pink-700);


  $purple-50: #f3e5f5;
  $purple-100: #e1bee7;
  $purple-200: #ce93d8;
  $purple-300: #ba68c8;
  $purple-400: #ab47bc;
  $purple-500: #9c27b0;
  $purple-600: #8e24aa;
  $purple-700: #7b1fa2;
  $purple-800: #6a1b9a;
  $purple-900: #4a148c;

  $a-purple-100: #ea80fc;
  $a-purple-200: #e040fb;
  $a-purple-400: #d500f9;
  $a-purple-700: #a0f;

  $purples: ($purple-50 $purple-100 $purple-200 $purple-300 $purple-400 $purple-500 $purple-600 $purple-700 $purple-800 $purple-900);
  $purple-accents: ($a-purple-100 $a-purple-200 $a-purple-400 $a-purple-700);


  $deep-purple-50: #ede7f6;
  $deep-purple-100: #d1c4e9;
  $deep-purple-200: #b39ddb;
  $deep-purple-300: #9575cd;
  $deep-purple-400: #7e57c2;
  $deep-purple-500: #673ab7;
  $deep-purple-600: #5e35b1;
  $deep-purple-700: #512da8;
  $deep-purple-800: #4527a0;
  $deep-purple-900: #311b92;

  $a-deep-purple-100: #b388ff;
  $a-deep-purple-200: #7c4dff;
  $a-deep-purple-400: #651fff;
  $a-deep-purple-700: #6200ea;

  $deep-purples: ($deep-purple-50 $deep-purple-100 $deep-purple-200 $deep-purple-300 $deep-purple-400 $deep-purple-500 $deep-purple-600 $deep-purple-700 $deep-purple-800 $deep-purple-900);
  $deep-purple-accents: ($a-deep-purple-100 $a-deep-purple-200 $a-deep-purple-400 $a-deep-purple-700);


  $indigo-50: #e8eaf6;
  $indigo-100: #c5cae9;
  $indigo-200: #9fa8da;
  $indigo-300: #7986cb;
  $indigo-400: #5c6bc0;
  $indigo-500: #3f51b5;
  $indigo-600: #3949ab;
  $indigo-700: #303f9f;
  $indigo-800: #283593;
  $indigo-900: #1a237e;

  $a-indigo-100: #8c9eff;
  $a-indigo-200: #536dfe;
  $a-indigo-400: #3d5afe;
  $a-indigo-700: #304ffe;

  $indigos: ($indigo-50 $indigo-100 $indigo-200 $indigo-300 $indigo-400 $indigo-500 $indigo-600 $indigo-700 $indigo-800 $indigo-900);
  $indigo-accents: ($a-indigo-100 $a-indigo-200 $a-indigo-400 $a-indigo-700);


  $blue-50: #e3f2fd;
  $blue-100: #bbdefb;
  $blue-200: #90caf9;
  $blue-300: #64b5f6;
  $blue-400: #42a5f5;
  $blue-500: #2196f3;
  $blue-600: #1e88e5;
  $blue-700: #1976d2;
  $blue-800: #1565c0;
  $blue-900: #0d47a1;

  $a-blue-100: #82b1ff;
  $a-blue-200: #448aff;
  $a-blue-400: #2979ff;
  $a-blue-700: #2962ff;

  $blues: ($blue-50 $blue-100 $blue-200 $blue-300 $blue-400 $blue-500 $blue-600 $blue-700 $blue-800 $blue-900);
  $blue-accents: ($a-blue-100 $a-blue-200 $a-blue-400 $a-blue-700);


  $light-blue-50: #e1f4fe;
  $light-blue-100: #b3e5fc;
  $light-blue-200: #81d4fa;
  $light-blue-300: #4fc3f7;
  $light-blue-400: #29b6f6;
  $light-blue-500: #03a9f4;
  $light-blue-600: #039be5;
  $light-blue-700: #0288d1;
  $light-blue-800: #0277bd;
  $light-blue-900: #01579b;

  $a-light-blue-100: #80d8ff;
  $a-light-blue-200: #40c4ff;
  $a-light-blue-400: #00b0ff;
  $a-light-blue-700: #0091ea;

  $light-blues: ($light-blue-50 $light-blue-100 $light-blue-200 $light-blue-300 $light-blue-400 $light-blue-500 $light-blue-600 $light-blue-700 $light-blue-800 $light-blue-900);
  $light-blue-accents: ($a-light-blue-100 $a-light-blue-200 $a-light-blue-400 $a-light-blue-700);


  $cyan-50: #e0f7fa;
  $cyan-100: #b2ebf2;
  $cyan-200: #80deea;
  $cyan-300: #4dd0e1;
  $cyan-400: #23c6da;
  $cyan-500: #00bcd4;
  $cyan-600: #00acc1;
  $cyan-700: #0097a7;
  $cyan-800: #00838f;
  $cyan-900: #006064;

  $a-cyan-100: #84ffff;
  $a-cyan-200: #18ffff;
  $a-cyan-400: #00e5ff;
  $a-cyan-700: #00b8d4;

  $cyans: ($cyan-50 $cyan-100 $cyan-200 $cyan-300 $cyan-400 $cyan-500 $cyan-600 $cyan-700 $cyan-800 $cyan-900);
  $cyan-accents: ($a-cyan-100 $a-cyan-200 $a-cyan-400 $a-cyan-700);


  $teal-50: #e0f2f1;
  $teal-100: #b2dfdb;
  $teal-200: #80cbc4;
  $teal-300: #4db6ac;
  $teal-400: #26a69a;
  $teal-500: #009688;
  $teal-600: #00897b;
  $teal-700: #00796b;
  $teal-800: #00695c;
  $teal-900: #004d40;

  $a-teal-100: #a7ffeb;
  $a-teal-200: #64ffda;
  $a-teal-400: #1de9b6;
  $a-teal-700: #00bfa5;

  $teals: ($teal-50 $teal-100 $teal-200 $teal-300 $teal-400 $teal-500 $teal-600 $teal-700 $teal-800 $teal-900);
  $teal-accents: ($a-teal-100 $a-teal-200 $a-teal-400 $a-teal-700);


  $green-50: #e8f5e9;
  $green-100: #c8e6c9;
  $green-200: #a5d6a7;
  $green-300: #81c784;
  $green-400: #66bb6a;
  $green-500: #4caf50;
  $green-600: #43a047;
  $green-700: #388e3c;
  $green-800: #2e7d32;
  $green-900: #1b5e20;

  $a-green-100: #b9f6ca;
  $a-green-200: #69f0ae;
  $a-green-400: #00e676;
  $a-green-700: #00c853;

  $greens: ($green-50 $green-100 $green-200 $green-300 $green-400 $green-500 $green-600 $green-700 $green-800 $green-900);
  $green-accents: ($a-green-100 $a-green-200 $a-green-400 $a-green-700);


  $light-green-50: #f1f8e9;
  $light-green-100: #dcedc8;
  $light-green-200: #c5e1a5;
  $light-green-300: #aed581;
  $light-green-400: #9ccc65;
  $light-green-500: #8bc34a;
  $light-green-600: #7cb342;
  $light-green-700: #689f38;
  $light-green-800: #55bb2f;
  $light-green-900: #33691e;

  $a-light-green-100: #ccff90;
  $a-light-green-200: #b2ff59;
  $a-light-green-400: #76ff03;
  $a-light-green-700: #64dd17;

  $light-greens: ($light-green-50 $light-green-100 $light-green-200 $light-green-300 $light-green-400 $light-green-500 $light-green-600 $light-green-700 $light-green-800 $light-green-900);
  $light-green-accents: ($a-light-green-100 $a-light-green-200 $a-light-green-400 $a-light-green-700);


  $lime-50: #f9fbe7;
  $lime-100: #f0f4c3;
  $lime-200: #e6ee9c;
  $lime-300: #dce775;
  $lime-400: #d4e157;
  $lime-500: #cddc39;
  $lime-600: #c0ca33;
  $lime-700: #afb42b;
  $lime-800: #9e9d24;
  $lime-900: #827717;

  $a-lime-100: #f4ff81;
  $a-lime-200: #eeff41;
  $a-lime-400: #c6ff00;
  $a-lime-700: #aeea00;

  $limes: ($lime-50 $lime-100 $lime-200 $lime-300 $lime-400 $lime-500 $lime-600 $lime-700 $lime-800 $lime-900);
  $lime-accents: ($a-lime-100 $a-lime-200 $a-lime-400 $a-lime-700);


  $yellow-50: #fffde7;
  $yellow-100: #fff9c4;
  $yellow-200: #fff59d;
  $yellow-300: #fff176;
  $yellow-400: #ffee58;
  $yellow-500: #ffeb3b;
  $yellow-600: #fdd835;
  $yellow-700: #fbc02d;
  $yellow-800: #f9a825;
  $yellow-900: #f57f17;

  $a-yellow-100: #ffff8d;
  $a-yellow-200: #ff0;
  $a-yellow-400: #ffea00;
  $a-yellow-700: #ffd600;

  $yellows: ($yellow-50 $yellow-100 $yellow-200 $yellow-300 $yellow-400 $yellow-500 $yellow-600 $yellow-700 $yellow-800 $yellow-900);
  $yellow-accents: ($a-yellow-100 $a-yellow-200 $a-yellow-400 $a-yellow-700);


  $amber-50: #fff8e1;
  $amber-100: #ffecb3;
  $amber-200: #ffe082;
  $amber-300: #ffd54f;
  $amber-400: #ffca28;
  $amber-500: #ffc107;
  $amber-600: #ffb300;
  $amber-700: #ffa000;
  $amber-800: #ff8f00;
  $amber-900: #ff6f00;

  $a-amber-100: #ffe57f;
  $a-amber-200: #ffd740;
  $a-amber-400: #ffc400;
  $a-amber-700: #ffab00;

  $ambers: ($amber-50 $amber-100 $amber-200 $amber-300 $amber-400 $amber-500 $amber-600 $amber-700 $amber-800 $amber-900);
  $amber-accents: ($a-amber-100 $a-amber-200 $a-amber-400 $a-amber-700);


  $orange-50: #fff3e0;
  $orange-100: #fff0b2;
  $orange-200: #ffcc80;
  $orange-300: #ffb74d;
  $orange-400: #ffa726;
  $orange-500: #ff9800;
  $orange-600: #fb8c00;
  $orange-700: #f57c00;
  $orange-800: #ef6c00;
  $orange-900: #e65100;

  $a-orange-100: #ffd180;
  $a-orange-200: #ffab40;
  $a-orange-400: #ff9100;
  $a-orange-700: #ff6d00;

  $oranges: ($orange-50 $orange-100 $orange-200 $orange-300 $orange-400 $orange-500 $orange-600 $orange-700 $orange-800 $orange-900);
  $orange-accents: ($a-orange-100 $a-orange-200 $a-orange-400 $a-orange-700);


  $deep-orange-50: #fbe9e7;
  $deep-orange-100: #ffccbc;
  $deep-orange-200: #ffab91;
  $deep-orange-300: #ff8a65;
  $deep-orange-400: #ff7043;
  $deep-orange-500: #ff5722;
  $deep-orange-600: #f4511e;
  $deep-orange-700: #e64a19;
  $deep-orange-800: #d84315;
  $deep-orange-900: #bf360c;

  $a-deep-orange-100: #ff9e80;
  $a-deep-orange-200: #ff6e40;
  $a-deep-orange-400: #ff3d00;
  $a-deep-orange-700: #dd2c00;

  $deep-oranges: ($deep-orange-50 $deep-orange-100 $deep-orange-200 $deep-orange-300 $deep-orange-400 $deep-orange-500 $deep-orange-600 $deep-orange-700 $deep-orange-800 $deep-orange-900);
  $deep-orange-accents: ($a-deep-orange-100 $a-deep-orange-200 $a-deep-orange-400 $a-deep-orange-700);


  $brown-50: #efebe9;
  $brown-100: #d7ccc8;
  $brown-200: #bcaaa4;
  $brown-300: #a1887f;
  $brown-400: #8d6e63;
  $brown-500: #795548;
  $brown-600: #6d4c41;
  $brown-700: #5d4039;
  $brown-800: #4e342e;
  $brown-900: #3e2723;

  $browns: ($brown-50 $brown-100 $brown-200 $brown-300 $brown-400 $brown-500 $brown-600 $brown-700 $brown-800 $brown-900);


  $grey-50: #fafafa;
  $grey-100: #f5f5f5;
  $grey-200: #eee;
  $grey-300: #e0e0e0;
  $grey-400: #bdbdbd;
  $grey-500: #9e9e9e;
  $grey-600: #757575;
  $grey-700: #616161;
  $grey-800: #424242;
  $grey-900: #212121;

  $greys: ($grey-50 $grey-100 $grey-200 $grey-300 $grey-400 $grey-500 $grey-600 $grey-700 $grey-800 $grey-900);


  $blue-grey-50: #eceff1;
  $blue-grey-100: #cfd8dc;
  $blue-grey-200: #b0bec5;
  $blue-grey-300: #90a4ae;
  $blue-grey-400: #78909c;
  $blue-grey-500: #607d8b;
  $blue-grey-600: #546e7a;
  $blue-grey-700: #455a64;
  $blue-grey-800: #37474f;
  $blue-grey-900: #263238;

  $blue-greys: ($blue-grey-50 $blue-grey-100 $blue-grey-200 $blue-grey-300 $blue-grey-400 $blue-grey-500 $blue-grey-600 $blue-grey-700 $blue-grey-800 $blue-grey-900);


  $md-colors: (
    $reds
    $pinks
    $purples
    $deep-purples
    $indigos
    $blues
    $light-blues
    $cyans
    $teals
    $greens
    $light-greens
    $limes
    $yellows
    $ambers
    $oranges
    $deep-oranges
    $browns
    $greys
    $blue-greys
  );
  $md-accent-colors: (
    $red-accents
    $pink-accents
    $purple-accents
    $deep-purple-accents
    $indigo-accents
    $blue-accents
    $light-blue-accents
    $cyan-accents
    $teal-accents
    $green-accents
    $light-green-accents
    $lime-accents
    $yellow-accents
    $amber-accents
    $orange-accents
    $deep-orange-accents
  );


  @if $accent {
    $md-accent-color-group: nth($md-accent-colors, $color-index);
    @return nth($md-accent-color-group, $hue);
  } @else {
    $md-color-group: nth($md-colors, $color-index);
    @return nth($md-color-group, $hue)
  }
}

@mixin absolute-center($top: true, $left: false, $additional-transform: null) {
  @if $top {
    top: 50%;
  }

  @if $left {
    left: 50%;
  }

  transform: translate3d(if($left, -50%, 0), if($top, -50%, 0), 0) $additional-transform;
}

/// Generates the css for keeping an aspect ratio for the target element.
///
/// @example scss - Basic Usage Sass
///   .aspect-16-9 {
///     @include aspect-ratio();
///   }
///
/// @example scss - Basic Usage CSS Output
///   .aspect-16-9 {
///     position: relative;
///   }
///
///   .aspect-16-9:before {
///     content: '';
///     display: block;
///     padding-top: 56.25%;
///     width: 100%;
///   }
///
///   .aspect-16-9 > img {
///     bottom: 0;
///     left: 0;
///     position: absolute;
///     right: 0;
///     top: 0;
///     width: 100%;
///   }
///
/// @param {String} $target [img] - The target to force the aspect ratio on
/// @param {Number} $width [16] - The target width ratio
/// @param {Number} $height [9] - The target height ratio
@mixin aspect-ratio($target: img, $width: 16, $height: 9) {
  position: relative;

  &:before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
    width: 100%;
  }

  > #{$target} {
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 100%;
  }
}


@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  } @else {
    @return $number;
  }
}

@function get-google-font-url($family: $md-font-family, $weights...) {
  $url: 'https://fonts.googleapis.com/css?family=#{$family}:';
  @if length($weights) == 0 {
    $weights: $md-font-weights;
  }

  @for $i from 1 through length($weights) {
    $weight: nth($weights, $i);
    $url: $url + $weight;

    @if $i < length($weights) {
      $url: $url + ',';
    }
  }

  @return $url;
}

@function get-google-font-icons() {
  @return 'https://fonts.googleapis.com/icon?family=Material+Icons';
}
