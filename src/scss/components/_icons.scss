////
/// @group icons
////

/// Boolean if the icon separator styles should be included by default.
/// @type Boolean
$md-font-icon-include-separators: true !default;

/// Boolean if the dense spec for icons should be included. This will
/// update the size for icons to be smaller on desktop displays.
/// @type Boolean
$md-font-icon-include-dense: true !default;

/// The amount of padding to put between an icon and any text.
/// @type Number
$md-font-icon-separator-padding: $md-default-padding !default;

/// The light theme's disabled color for icons.
/// @type Color
$md-font-icon-light-theme-disabled-color: rgba($md-black-base, .26) !default;

/// The dark theme's disabled color for icons.
/// @type Color
$md-font-icon-dark-theme-disabled-color: rgba($md-white-base, .3) !default;

/// Includes the css for using `md-icon`.
///
/// @param {Boolean} $light-theme [$md-light-theme] - Boolean if the application is using the
///     light-theme or not.
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries for icons
///     should also be included. This also relies on the `include-dense` param.
/// @param {Boolean} include-separators [$md-font-icon-include-separators] - Boolean if the styles
///     for separating content and an icon should be included.
/// @param {Boolean} include-dense [$md-font-icon-include-dense] - Boolean if the dense spec for icons
///     should be included.
@mixin react-md-icons(
  $light-theme: $md-light-theme,
  $include-media: $md-media-included,
  $include-separators: $md-font-icon-include-separators,
  $include-dense: $md-font-icon-include-dense
) {
  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);

  .md-icon {
    color: $md-icon-color;
    font-size: $md-font-icon-size;
    text-align: center;
    transition-duration: $md-transition-time;
    transition-property: color;
    user-select: none;
  }

  // scss-lint:disable QualifyingElement
  svg.md-icon {
    fill: currentColor;
    height: $md-font-icon-size;
    width: $md-font-icon-size;

    @if $include-dense {
      @media #{$md-desktop-media} {
        height: $md-font-icon-dense-size;
        width: $md-font-icon-dense-size;
      }
    }
  }
  // scss-lint:enable QualifyingElement

  @if $include-separators {
    @include react-md-icon-separators;
  }

  @if $include-media {
    @include react-md-icons-media($include-dense);
  }
}

/// Updates the styles for an icon to use the dense font size. This should really only
/// be used within a media query.
@mixin react-md-icons-dense {
  .md-icon {
    font-size: $md-font-icon-dense-size;
  }
}

/// Creates the media queries for icons. This really only is used for the dense
/// spec of icons.
///
/// @param {Boolean} include-dense [$md-font-icon-include-dense] - Boolean if the dense
///   specs for icons shoul be included.
/// @group media-queries, icons
@mixin react-md-icons-media($include-dense: $md-font-icon-include-dense) {
  @if $include-dense {
    @media #{$md-desktop-media} {
      @include react-md-icons-dense;
    }
  }
}


/// Updates the color of the base `md-icon` if the `$light-theme` paramater
/// does not equal the global `$md-light-theme`.
/// @param {Boolean} $light-theme [$md-light-theme] - Boolean if using the
///     light theme.
/// @group icons, themes
@mixin react-md-theme-icons($light-theme: $md-light-theme) {
  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);

  @if $light-theme != $md-light-theme {
    .md-icon {
      color: $md-icon-color;
    }
  }
}

/// Includes the styles for the `IconSeparator` component.
///
/// @example scss - Example Usage SCSS
///   @include react-md-icon-separators;
@mixin react-md-icon-separators {
  .md-icon-separator {
    align-items: center;
    display: flex;
    font-weight: inherit;
    text-align: left;

    .md-icon {
      flex-grow: 0;
      flex-shrink: 0;
    }
  }

  .md-icon-text {
    flex-grow: 1;
    flex-shrink: 0;
    font-weight: inherit;
    line-height: inherit;

    &:first-child {
      padding-right: $md-font-icon-separator-padding;
    }

    &:last-child {
      padding-left: $md-font-icon-separator-padding;
    }
  }
}
