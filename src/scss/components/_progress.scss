@keyframes md-linear-indeterminate {
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
}

@keyframes md-linear-indeterminate-short {
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
}

@keyframes md-circular-progress {
  0% { transform: rotate(0deg); }

  50% { transform: rotate(135deg); }

  75% { transform: rotate(450deg); }

  100% { transform: rotate(720deg); }
}

@keyframes md-circular-progress-dash {
  0% {
    stroke-dashoffset: $md-circular-progress-stroke-dashoffset;
  }

  50% {
    stroke-dashoffset: $md-circular-progress-stroke-dashoffset / 4;
  }

  100% {
    stroke-dashoffset: $md-circular-progress-stroke-dashoffset;
  }
}

.md-linear-progress.determinate,
.md-linear-progress-container {
  display: block;
  height: $md-linear-progress-height;
}

.md-linear-progress-container {
  @extend %full-width;

  margin: 1em 0;
  overflow: hidden;
  position: relative;
}

.md-linear-progress {

  &.determinate {
    position: absolute;
    transition: width $md-transition-time;
    z-index: 1;
  }

  &.indeterminate {
    &:before,
    &:after {
      background: inherit;
      bottom: 0;
      content: '';
      position: absolute;
      top: 0;
      will-change: left, right;
      z-index: 1;
    }

    &:before {
      animation-duration: $md-linear-progress-anim-time;
      animation-name: md-linear-indeterminate;
      animation-timing-function: $md-linear-progress-long-transition-func;
    }

    &:after {
      animation-delay: $md-linear-progress-short-delay;
      animation-duration: $md-linear-progress-anim-time;
      animation-name: md-linear-indeterminate-short;
      animation-timing-function: $md-linear-progress-short-transition-func;
    }

    &.query:before,
    &.query:after {
      animation-direction: reverse;
    }
  }
}

.md-circular-progress {
  display: block;
  margin: 1em;

  &.centered {
    margin: 1em auto;
  }

  &.determinate {
    transition: transform $md-transition-time;

    .md-circular-progress-path {
      stroke-dasharray: $md-circular-progress-determinate-dasharray;
    }
  }

  &.indeterminate {
    animation: md-circular-progress $md-circular-progress-duration linear infinite;

    .md-circular-progress-path {
      animation: md-circular-progress-dash $md-circular-progress-duration $md-circular-progress-transition-func infinite;
      stroke-dasharray: $md-circular-progress-stroke-dashoffset;
      stroke-dashoffset: 0;
    }
  }
}

.md-circular-progress-path {
  fill: none;
}
