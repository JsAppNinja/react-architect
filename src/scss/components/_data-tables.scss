////
/// @group data-tables
////

@import '../grids';
@import 'dialogs';
@import 'select-fields';

/// Boolean if the plain table styles should be included.
/// @type Boolean
$md-data-table-include-plain: true !default;

/// Boolean if the checkbox styles should be included.
/// @type Boolean
$md-data-table-include-checkboxes: true !default;

/// Boolean if the edit dialog styles should be included.
/// @type Boolean
$md-data-table-include-edit-dialog: true !default;

/// Boolean if the styes for select fields in data tables should be included.
/// @type Boolean
$md-data-table-include-select-fields: true !default;

/// Boolean if the styles for fixed table headers/footers should be included.
/// @type Boolean
$md-data-table-include-fixed-headers-footers: true !default;

/// Boolean if the `react-md-make-fixed-table` mixin should include headers by default in the
/// created styles.
///
/// @see react-md-make-fixed-table
$md-data-table-fixed-include-headers: true !default;

/// Boolean if the `react-md-make-fixed-table` mixin should include footers by default in the
/// created styles.
///
/// @see react-md-make-fixed-table
$md-data-table-fixed-include-footers: true !default;

/// Boolean if the `react-md-make-fixed-table` mixin should make the table fixed relative to the
/// view height instead of just using height.
/// @type Boolean
$md-data-table-fixed-use-view-height: false !default;

/// Boolean if the table pagination styles should be included.
/// @type Boolean
$md-data-table-include-pagination: true !default;

/// Boolean if the the table card header styles should be included.
/// @type Boolean
$md-data-table-include-table-card-headers: true !default;

/// The min width for an edit dialog's column.
/// @type Number
$md-edit-dialog-min-width: 300px !default;

/// The amount of padding to apply to the `AccessibleFakeButton` that gets used in the
/// edit dialog column to trigger the dialog to appear.
/// @type Number
$md-edit-dialog-label-padding: 16px 0 !default;

/// For some reason, the edit dialogs on mobile devices don't position themselves like tablets
/// and desktop screens so this value is required for positioning the dialog from the right edge
/// of the screen.
/// @type Number
$md-data-table-edit-dialog-mobile-right: $md-grid-phone-margin !default;

/// The default left/right padding for a `TableColumn`.
/// @type Number
$md-data-table-padding: 24px !default;

/// The minimum distance between a cell's content and the next cell.
/// @type Number
$md-data-table-min-padding: 56px !default;

/// The font size for content inside of the `TableBody` component.
/// @type Number
$md-data-table-content-font-size: 13px !default;

/// The font size for the content inside of the `TableHeader` component.
/// @type Number
$md-data-table-header-font-size: 12px !default;

/// The height for the `TableHeader`'s row.
/// @type Number
$md-data-table-header-height: 56px !default;

/// The font size for a font-icon in the `md-table-column--header`.
/// @type Number
$md-data-table-header-icon-font-size: 16px !default;

/// The height for a column in a data table.
/// @type Number
$md-data-table-column-height: 48px !default;

/// The border size to use for each row.
/// @type Number
$md-data-table-border-size: 1px !default;

/// The hover color for a row when using the light theme.
/// @type Color
$md-data-table-hover-color: $md-grey-200 !default;

/// The selected color for a row when using the light theme.
/// @type Color
$md-data-table-selected-color: $md-grey-100 !default;

/// The hover color for a row when using the dark theme. This is configurable since
/// the dark theme data table specs are not defined in the material design documentation
/// at this point.
/// @type Color
$md-data-table-dark-theme-hover-color: $md-grey-800 !default;

/// The selected color for a row when using the dark theme. This is configurable since
/// the dark theme data table specs are not defined in the material design documentation
/// at this point.
/// @type Color
$md-data-table-dark-theme-selected-color: $md-grey-700 !default;

/// The z-index to use for the contextual table card header.
/// @type Number
$md-data-table-card-header-z-index: 1 !default;

/// The font size to use for the contextual table card header.
/// @type Number
$md-data-table-card-header-font-size: 16px !default;

/// The height for the table card header.
/// @type Number
$md-data-table-card-header-height: 80px !default;

/// The min-width to apply to the fixed tables wrapper.
/// @type Number
$md-data-table-fixed-wrapper-min-width: 100% !default;

/// A fallback color to use for the contextual table card header. This is only required
/// when the `$md-primary-color` is not a valid material design color.
/// @type Color
/// @see get-swatch
/// @group data-tables, themes
$md-data-table-contextual-fallback-color: null !default;

/// A selector for creating a plain styled column. This is used to update all
/// the `md-table-column--data` in a `.md-data-table--plain` and to create a
/// `md-table-column--plain` class. The `white-space` will still need to manually
/// be changed from `nowrap` to `initial` if you want line wrapping.
%md-table-column--plain {
  height: auto;
  min-height: $md-data-table-column-height;
  padding-bottom: $md-default-padding;
  padding-top: $md-default-padding;
  vertical-align: top;
}

/// Includes the styles for the data tables.
///
/// @example scss - Example Usage SCSS
///   @include react-md-data-tables;
///
/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to use to theme
///     the table card headers with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the tables should be styled
///     for the light theme.
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should also be included.
/// @param {Boolean} include-plain [$md-data-table-include-plain] - Boolean if the plain data
///     table styles should be included.
/// @param {Boolean} include-checkboes [$md-data-table-include-checkboxes] - Boolean if the checkbox
///     styles should be included.
/// @param {Boolean} include-edit-dialog [$md-data-table-include-edit-dialog] - Boolean if the edit
///     dialog styles should be included.
/// @param {Boolean} include-pagination [$md-data-table-include-pagination] - Boolean if the pagination
///     styles should be included.
/// @param {Boolean} include-table-card-headers [$md-data-table-include-table-card-headers] - Boolean if
///     the table card header styles should be included.
@mixin react-md-data-tables(
  $secondary-color: $md-secondary-color,
  $light-theme: $md-light-theme,
  $include-media: $md-media-included,
  $include-plain: $md-data-table-include-plain,
  $include-checkboxes: $md-data-table-include-checkboxes,
  $include-edit-dialog: $md-data-table-include-edit-dialog,
  $include-select-fields: $md-data-table-include-select-fields,
  $include-pagination: $md-data-table-include-pagination,
  $include-table-card-headers: $md-data-table-include-table-card-headers,
  $include-fixed-headers-footers: $md-data-table-include-fixed-headers-footers
) {
  @include react-md-data-table($include-plain);
  @include react-md-data-table-rows($light-theme);
  @include react-md-data-table-column;

  @if $include-checkboxes {
    @include react-md-data-table-checkboxes;
  }

  @if $include-edit-dialog {
    @include react-md-data-table-edit-dialogs;
  }

  @if $include-select-fields {
    @include react-md-data-table-select-fields;
  }

  @if $include-pagination {
    @include react-md-data-table-paginations;
  }

  @if $include-table-card-headers {
    @include react-md-data-table-card-headers;
  }

  @if $include-fixed-headers-footers {
    @include react-md-data-table-fixed-headers-footers;
  }
}

/// Updates the styles for data tables only if the `$light-theme` does not equal the
/// `$md-light-theme`. The only styles realy updated are the border colors and the
/// hover/selected row background colors.
///
/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme with.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if updating the styles for
///     the light theme.
/// @param {Boolean} include-table-card-headers [$md-data-table-include-table-card-headers] - Boolean if
///     the contextual table card header styles should be included.
/// @param {Color} context-ual-fallback-color [$md-data-table-contextual-fallback-color] - A fallback color
///     to use for the contextual headers.
/// @group data-tables, themes
@mixin react-md-theme-data-tables(
  $secondary-color: $md-secondary-color,
  $light-theme: $md-light-theme,
  $include-table-card-headers: $md-data-table-include-table-card-headers,
  $contextual-fallback-color: $md-data-table-contextual-fallback-color
) {
  @if $light-theme != $md-light-theme {
    thead .md-table-row,
    tbody .md-table-row:not(:last-child) {
      border-bottom-color: get-color('divider', $light-theme);
    }

    .md-table-row {

      &--active {
        background: if($light-theme, $md-data-table-selected-color, $md-data-table-dark-theme-selected-color);
      }

      &--hover {
        background: if($light-theme, $md-data-table-hover-color, $md-data-table-dark-theme-hover-color);
      }
    }
  }

  @if $include-table-card-headers {
    $bg-color: get-swatch($secondary-color, 50, false, $contextual-fallback-color, md-data-table-contextual-fallback-color);
    @if get-swatch($md-secondary-color, 50, false, $contextual-fallback-color, md-data-table-contextual-fallback-color) != $bg-color {
      .md-card-title--contextual {
        background: $bg-color;
      }
    }

    @if $secondary-color != $md-secondary-color {
      .md-card-title--title-contextual {
        color: $secondary-color;
      }
    }
  }
}

/// Creates the styles for the data table. It will also create the styles for
/// plain data tables if the param is true.
///
/// @param {Boolean} include-plain [$md-data-table-include-plain] - Boolean if the plain data
///     table styles should be included.
@mixin react-md-data-table($include-plain: $md-data-table-include-plain) {
  .md-data-table {
    border-collapse: collapse;
    max-width: 100%;

    &--responsive {
      @include md-ios-scroll-momentum;

      overflow-x: auto;

      .md-data-table {
        width: 100%;
      }
    }

    @if $include-plain {
      .md-table-column--plain {
        @extend %md-table-column--plain;
      }
    }

    td {
      padding-bottom: 0;
      padding-top: 0;
    }
  }
}

/// Creates the styles for a row in the data table.
///
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling for the light
///     theme.
@mixin react-md-data-table-rows($light-theme: $md-light-theme) {
  thead .md-table-row,
  tbody .md-table-row:not(:last-child) {
    border-bottom: $md-data-table-border-size solid get-color('divider', $light-theme);
  }

  tbody .md-table-row {
    transition-duration: $md-transition-time;
    transition-property: background;

    &--active {
      background: if($light-theme, $md-data-table-selected-color, $md-data-table-dark-theme-selected-color);
    }

    &--hover {
      background: if($light-theme, $md-data-table-hover-color, $md-data-table-dark-theme-hover-color);
    }
  }
}

/// Creates the styles for a column in a data table.
@mixin react-md-data-table-column {
  .md-table-column {
    line-height: normal;
    padding-right: $md-data-table-padding;
    white-space: nowrap;

    &:first-child {
      padding-left: $md-data-table-padding;
    }

    &--relative {
      position: relative;
    }

    &--adjusted {
      padding-right: $md-data-table-min-padding;
    }

    &--header {
      font-size: $md-data-table-header-font-size;
      font-weight: $md-font-medium;
      height: $md-data-table-header-height;

      .md-icon {
        font-size: $md-data-table-header-icon-font-size;
      }
    }

    &--data {
      font-size: $md-data-table-content-font-size;
      height: $md-data-table-column-height;
    }

    &--grow {
      width: 100%;
    }

    &--select-header {
      padding-left: $md-default-padding;
    }

    .md-icon-separator {
      line-height: inherit;
    }
  }
}

/// Creates the styles for a table checkbox column in a data table.
@mixin react-md-data-table-checkboxes {
  $margin: $md-data-table-padding - $md-btn-icon-padding;

  .md-table-checkbox .md-selection-control-container {
    margin-left: $margin;
    margin-right: $margin;
  }
}

/// Creates the styles for edit dialogs in a data table.
@mixin react-md-data-table-edit-dialogs {
  .md-edit-dialog-column {
    min-width: $md-edit-dialog-min-width;
  }

  .md-edit-dialog {
    &__label {
      padding: $md-edit-dialog-label-padding;
    }

    &__content {
      // For the multiline text fields
      display: flex;
      padding: $md-dialog-padding;
      padding-bottom: 0;

      &:not(:first-child) {
        padding-top: 0;
      }
    }

    &__header {
      font-weight: $md-font-medium;

      &.md-text-field {
        font-size: $md-data-table-header-font-size;
      }
    }

    &__blocked-field {
      height: $md-data-table-column-height - $md-data-table-border-size;

      &.md-edit-dialog__blocked-field {
        padding-bottom: 0;
        padding-top: 0;
      }

      .md-text-field-icon-container {
        align-items: center;
      }
    }
  }
}

/// Creates the styles for select fields in data tables.
@mixin react-md-data-table-select-fields {
  .md-table-column--select-field {
    padding-left: $md-select-field-left-padding;
  }

  .md-select-field-column {
    .md-select-field--btn {
      height: $md-data-table-column-height - $md-data-table-border-size;
    }
  }
}

/// Creates the styles for table pagination.
@mixin react-md-data-table-paginations {
  .md-table-footer--pagination {
    .md-table-column {
      padding-left: 0;
    }
  }

  .md-table-pagination {
    height: $md-data-table-header-height;

    &--controls {
      align-items: center;
      display: inline-flex;
      justify-content: flex-start;
      position: absolute;
      white-space: nowrap;
    }
  }
}

/// Creates the styles for fixed headers and footers in a data table.
@mixin react-md-data-table-fixed-headers-footers {
  .md-data-table {
    &--fixed {
      overflow-y: hidden;
    }

    &__fixed-wrapper {
      display: table;
      min-width: $md-data-table-fixed-wrapper-min-width;
      position: relative;

      &--header {
        padding-top: $md-data-table-header-height;
      }

      &--footer {
        padding-bottom: $md-data-table-column-height;
      }
    }

    &__scroll-wrapper {
      overflow-x: hidden;
      overflow-y: auto;
    }
  }

  .md-table-column--fixed {
    height: 0;
    padding-bottom: 0;
    padding-top: 0;
    visibility: hidden;
    white-space: nowrap;

    > * {
      display: none;
    }

    .md-table-column__fixed {
      display: block;
    }
  }

  .md-table-column__fixed {
    position: absolute;
    visibility: visible;

    &--header {
      top: 0;
    }

    &--footer {
      bottom: 0;
    }

    &--flex {
      align-items: center;
      display: flex;

      &-right {
        justify-content: flex-end;
      }
    }

    .md-table-checkbox {
      &--header {
        height: $md-data-table-header-height;
      }

      &--footer {
        height: $md-data-table-column-height;
      }
    }
  }
}

/// This is a utility function for making a fixed table via css instead of inline styles. This one is a bit more
/// reliable since you can provide the cell heights correctly.
///
/// @example scss - Example Usage
/// .fixed-table--200-300 {
///   @include react-md-make-fixed-table(300px);
///
///   width: 200px;
/// }
///
/// .fixed-table__footless--200-300 {
///   @include react-md-make-fixed-table(300px, $md-data-table-header-height, null);
/// }
///
/// .fixed-table--viewport {
///   @include react-md-make-fixed-table(true);
/// }
///
/// @example scss - Example Usage CSS Output
/// .fixed-table--200-300 {
///   width: 200px;
/// }
///
/// .fixed-table--200-300 .md-data-table__scroll-wrapper {
///   max-height: 196px;
/// }
///
/// .fixed-table__footless--200-300 .md-data-table__scroll-wrapper {
///   max-height: 244px;
/// }
///
/// .fixed-table--viewport .md-data-table__scroll-wrapper {
///   max-height: calc(100vh - 104px);
/// }
///
///
/// @param {Number | Boolean} height - The height to use for the fixed table. If this value is a boolean, the height
///     will be calculated from the view height.
/// @param {Number} header-height [$md-data-table-header-height] - The height for the table's header. If this is `null`,
///     this table should *not* have a fixed header.
/// @param {Number} footer-height [$md-data-table-column-height] - The height for the table's footer. If this is `null`,
///     the table should *not* have a fixed footer.
/// @param {Number} toolbar-height [null] - An optinal height of the toolbar to exclude when making the max-height of the
///     table.
@mixin react-md-make-fixed-table($height, $header-height: $md-data-table-header-height, $footer-height: $md-data-table-column-height, $toolbar-height: null) {
  @if $height == true {
    .md-data-table__scroll-wrapper {
      $wrapper-height: 0;
      @if $md-data-table-fixed-include-headers and $header-height != null {
        $wrapper-height: $wrapper-height + $header-height;
      }

      @if $md-data-table-fixed-include-footers and $footer-height != null {
        $wrapper-height: $wrapper-height + $footer-height;
      }

      @if $toolbar-height != null {
        $wrapper-height: $wrapper-height + $toolbar-height;
      }

      max-height: calc(100vh - #{$wrapper-height});
    }
  } @else {
    $wrapper-height: $height;
    @if $md-data-table-fixed-include-headers and $header-height != null {
      $wrapper-height: $wrapper-height - $header-height;
    }

    @if $md-data-table-fixed-include-footers and $footer-height != null {
      $wrapper-height: $wrapper-height - $footer-height;
    }

    @if ($wrapper-height != $height) {
      .md-data-table__scroll-wrapper {
        max-height: $wrapper-height;
      }
    }
  }

}

/// Creates the styles for the `TableCardHeader` component only. The contextual
/// header will have a background color of the secondary color's 50 swatch.
///
/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme
///     the contextual header's background color with.
@mixin react-md-data-table-card-headers($secondary-color: $md-secondary-color, $fallback-color: $md-data-table-contextual-fallback-color) {
  .md-table-card-header {
    position: relative;

    &--no-title {
      align-items: center;
      display: flex;
      height: $md-data-table-card-header-height;
      padding-right: 2px;
    }

    .md-card-title {
      padding-right: 2px;

      &:last-child {
        padding-bottom: $md-default-padding;
      }
    }

    .md-btn--dialog + .md-btn--dialog {
      margin-left: $md-dialog-btn-padding;
    }
  }

  .md-card-title--contextual {
    background: get-swatch($secondary-color, 50, false, $fallback-color, md-data-table-contextual-fallback-color);
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: $md-data-table-card-header-z-index;
  }

  .md-card-title--title-contextual {
    color: $secondary-color;
    font-size: $md-data-table-card-header-font-size;
    font-weight: $md-font-medium;
    line-height: $md-data-table-card-header-height;
  }

  .md-drop-down-enter {
    transform: translate3d(0, -100%, 0);

    &.md-drop-down-enter-active {
      @extend %md-transition--decceleration;

      transform: translate3d(0, 0, 0);
      transition-duration: $md-transition-time;
      transition-property: transform;
    }
  }

  .md-drop-down-leave {
    transform: translate3d(0, 0, 0);

    &.md-drop-down-leave-active {
      @extend %md-transition--acceleration;

      transform: translate3d(0, -100%, 0);
      transition-duration: $md-transition-time;
      transition-property: transform;
    }
  }
}
