server {
  # Redirect http requests to https
  listen       80;
  server_name  react-md.mlaursen.com;

  return 301 https://$server_name$request_uri;
}

server {
  listen       443 ssl;
  server_name  react-md.mlaursen.com;

  ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate             /etc/letsencrypt/live/react-md.mlaursen.com/fullchain.pem;
  ssl_certificate_key         /etc/letsencrypt/live/react-md.mlaursen.com/privkey.pem;
  ssl_prefer_server_ciphers   on;
  ssl_ciphers                 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_dhparam                 /etc/ssl/certs/dhparam.pem;


  # Enable nginx static asset caching and serving since it is faster than express
  # This will server all the files in the public/ folder EXCEPT for the custom themes
  location ~ /(sassdoc$|sassdoc\/|favicon.ico|react-md.png|robots.txt|manifest.json|(?!themes\/.*)\.css$|.+\.(js|map|svg|png)$) {
    root   /var/www/react-md/v1.1.x/docs/public;

    proxy_set_header       Host $host;
    proxy_cache            STATIC;
    proxy_cache_valid      200  1d;
    proxy_cache_use_stale  error timeout invalid_header updating
                           http_500 http_502 http_503 http_504;
  }

  
  # This doesn't seem to be working right now. Need to debug a bit more
  # location /api {
  #   # Change to static IP
  #   allow http://localhost;
  #   deny all;
  # }

  location / {
    proxy_pass          http://localhost:8080;
    proxy_http_version  1.1;
    proxy_set_header    Upgrade $http_upgrade;
    proxy_set_header    Connection 'upgrade';
    proxy_set_header    Host $host;
    proxy_cache_bypass  $http_upgrade;
  }
}
