[{"description":"The primary color to use throughout the app. This should be a color\nwith a `-500` suffix.\n","commentRange":{"start":3,"end":6},"context":{"type":"variable","name":"md-primary-color","value":"$md-indigo-500","scope":"default","line":{"start":7,"end":7}},"type":"Color","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-divider::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-divider {\n      background: get-color('divider', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-divider--error,\n    .md-text-field-divider--error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":792,"end":811}}},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":904,"end":922}}},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1032,"end":1054}}}]},{"description":"A lighter version of the primary color to use throughout the app.\n","commentRange":{"start":9,"end":11},"context":{"type":"variable","name":"md-primary-color-hue-1","value":"$md-indigo-400","scope":"default","line":{"start":12,"end":12}},"type":"Color","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"The secondary color to use throughout the app. This should be a color\nwith a `-a-{NUMBER}` suffix.\n","commentRange":{"start":14,"end":17},"context":{"type":"variable","name":"md-secondary-color","value":"$md-pink-a-200","scope":"default","line":{"start":18,"end":18}},"type":"Color","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"A lighter version of the primary color to use throughout the app. This should be a color\nwith a `-a-{NUMBER}` suffix.\n","commentRange":{"start":20,"end":23},"context":{"type":"variable","name":"md-secondary-color-hue-1","value":"$md-pink-a-100","scope":"default","line":{"start":24,"end":24}},"type":"Color","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"}},{"description":"Boolean if the application is to be themed with the light theme.\n","commentRange":{"start":26,"end":28},"context":{"type":"variable","name":"md-light-theme","value":"true","scope":"default","line":{"start":29,"end":29}},"type":"Boolean","group":["theme"],"access":"public","file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    display: inline-block;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-background, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":90}}},{"description":"Updates the color of the base `md-icon` if the `$light-theme` paramater\ndoes not equal the global `$md-light-theme`.\n","context":{"type":"mixin","name":"react-md-theme-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  @if $light-theme != $md-light-theme {\n    .md-icon {\n      color: $md-icon-color;\n    }\n  }\n","line":{"start":29,"end":37}}},{"description":"This will theme the Slider component with an updated `primary-color` and\noptionally a switch in themes.\n\n","context":{"type":"mixin","name":"react-md-theme-sliders","code":"\n  $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n\n  .md-slider-thumb--on,\n  .md-slider-track-fill {\n    background: $md-slider-on-color;\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-slider-track,\n    .md-slider-thumb--disabled {\n      background: $md-slider-off-color;\n    }\n\n    .md-slider-thumb--continuous-off,\n    .md-slider-thumb--disabled-mask {\n      background: $bg-color;\n    }\n\n    .md-slider-thumb--off {\n      border-color: $md-slider-off-color;\n    }\n  }\n\n  @if $include-discrete {\n    @include react-md-theme-discrete-slider($primary-color);\n  }\n","line":{"start":383,"end":414}}},{"description":"Modifies the styles of the text-field-container ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-container","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-text-field-placeholders(get-color('secondary', $light-theme));\n    }\n\n    .md-text-field-container--disabled {\n      $color: get-color('disabled', $light-theme);\n      @include react-md-theme-text-field-placeholders($color);\n\n      color: $color;\n    }\n  }\n","line":{"start":470,"end":483}}},{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-divider::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-divider {\n      background: get-color('divider', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-divider--error,\n    .md-text-field-divider--error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":792,"end":811}}},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":904,"end":922}}},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1032,"end":1054}}},{"description":"Modifies the styles of the text-field-message ONLY if:\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-text-field-error-color`\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-message","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-message-container {\n      color: get-color('hint', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-message-container--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1180,"end":1192}}},{"description":"Modifies the styles of the text-field-password ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-password","code":"\n  @if $light-theme != $md-light-theme {\n    .md-password-btn {\n      color: get-color('hint', $light-theme);\n    }\n\n    .md-password-btn--active {\n      color: get-color('secondary', $light-theme);\n\n      &::before {\n        background: get-color('secondary', $light-theme);\n      }\n    }\n\n    .md-password-btn--invisible::after {\n      background: get-color('background', $light-theme);\n    }\n  }\n","line":{"start":1277,"end":1295}}},{"description":"Themes the typography in react-md only if `$light-theme` does not equal `$md-light-theme`.\nThis goes into effect by modifying the base html tag with the `$html-class-name` you give.\n\n","context":{"type":"mixin","name":"react-md-theme-typography","code":"\n  @if $light-theme != $md-light-theme {\n    $md-text-color: if($light-theme, $md-light-theme-text-color, $md-dark-theme-text-color);\n    $md-secondary-text-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n    .#{$html-class-name} {\n      background: if($light-theme, $md-light-theme-background-color, $md-dark-theme-background-color);\n\n      .md-headline,\n      .md-title,\n      .md-subheading-2,\n      .md-subheading-1 {\n        color: $md-text-color;\n      }\n\n      .md-display-4,\n      .md-display-3,\n      .md-display-2,\n      .md-display-1,\n      .md-caption {\n        color: $md-secondary-text-color;\n      }\n\n      @if $extend-html-tags {\n        h2,\n        h3,\n        h4,\n        h5,\n        p {\n          color: $md-text-color;\n        }\n\n        h1,\n        caption {\n          color: $md-secondary-text-color;\n        }\n      }\n    }\n  }\n","line":{"start":554,"end":593}}}]}]