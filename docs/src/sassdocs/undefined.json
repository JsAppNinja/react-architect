[{"description":"Boolean if the application is to be themed with the light theme.\n","commentRange":{"start":26,"end":27},"context":{"type":"variable","name":"md-light-theme","value":"true","scope":"default","line":{"start":28,"end":28}},"type":"Boolean","access":"public","group":["undefined"],"file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    display: inline-block;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatars($md-avatar-default-background, $md-avatar-default-background, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatars(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":90}}},{"description":"Updates the color of the base `md-icon` if the `$light-theme` paramater\ndoes not equal the global `$md-light-theme`.\n","context":{"type":"mixin","name":"react-md-theme-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  @if $light-theme != $md-light-theme {\n    .md-icon {\n      color: $md-icon-color;\n    }\n  }\n","line":{"start":29,"end":37}}},{"description":"This will theme the Slider component with an updated `primary-color` and\noptionally a switch in themes.\n\n","context":{"type":"mixin","name":"react-md-theme-sliders","code":"\n  $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n\n  .md-slider-thumb--on,\n  .md-slider-track-fill {\n    background: $md-slider-on-color;\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-slider-track,\n    .md-slider-thumb--disabled {\n      background: $md-slider-off-color;\n    }\n\n    .md-slider-thumb--continuous-off,\n    .md-slider-thumb--disabled-mask {\n      background: $bg-color;\n    }\n\n    .md-slider-thumb--off {\n      border-color: $md-slider-off-color;\n    }\n  }\n\n  @if $include-discrete {\n    @include react-md-theme-discrete-slider($primary-color);\n  }\n","line":{"start":383,"end":414}}},{"description":"Modifies the styles of the text-field-container ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-container","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-text-field-placeholders(get-color('secondary', $light-theme));\n    }\n\n    .md-text-field-container--disabled {\n      $color: get-color('disabled', $light-theme);\n      @include react-md-theme-text-field-placeholders($color);\n\n      color: $color;\n    }\n  }\n","line":{"start":354,"end":367}}},{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-divider::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-divider {\n      background: get-color('divider', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-divider--error,\n    .md-text-field-divider--error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":676,"end":695}}},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":788,"end":806}}},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":916,"end":938}}},{"description":"Modifies the styles of the text-field-message ONLY if:\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-text-field-error-color`\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-message","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-message-container {\n      color: get-color('hint', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-message-container--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1064,"end":1076}}},{"description":"Modifies the styles of the text-field-password ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-password","code":"\n  @if $light-theme != $md-light-theme {\n    .md-password-btn {\n      color: get-color('hint', $light-theme);\n    }\n\n    .md-password-btn--active {\n      color: get-color('secondary', $light-theme);\n\n      &::before {\n        background: get-color('secondary', $light-theme);\n      }\n    }\n\n    .md-password-btn--invisible::after {\n      background: get-color('background', $light-theme);\n    }\n  }\n","line":{"start":1161,"end":1179}}}]},{"description":"The default transition time to use on most animations/transitions.\n","commentRange":{"start":30,"end":31},"context":{"type":"variable","name":"md-transition-time","value":".15s","scope":"default","line":{"start":32,"end":32}},"type":"Number","access":"public","group":["undefined"],"file":{"path":"_globals.scss","name":"_globals.scss"},"usedBy":[{"description":"Includes the css for using `md-icon`.\n","context":{"type":"mixin","name":"react-md-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  .md-icon {\n    color: $md-icon-color;\n    font-size: $md-font-icon-size;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n  }\n","line":{"start":13,"end":22}}},{"description":"This includes the react-md Sliders Component scss.\n\n","context":{"type":"mixin","name":"react-md-sliders","code":"\n  $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n  $md-slider-mask-ink-color: rgba($primary-color, $md-slider-mask-ink-opacity);\n\n  .md-slider-container {\n    display: flex;\n    flex-wrap: wrap;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  .md-slider-container--disabled {\n    &:hover {\n      cursor: initial;\n    }\n  }\n\n  .md-slider-label {\n    display: block;\n    width: 100%;\n  }\n\n  .md-slider-input {\n    height: 0;\n    position: absolute;\n    visibility: hidden;\n    width: 0;\n    z-index: -1;\n  }\n\n  .md-slider-track {\n    $center: ($md-slider-height / 2) - ($md-slider-track-height / 2);\n    background: $md-slider-off-color;\n    content: '';\n    display: block;\n    flex-grow: 1;\n    flex-shrink: 0;\n    height: $md-slider-track-height;\n    margin-bottom: $center;\n    margin-top: $center;\n    position: relative;\n  }\n\n  .md-slider-track--full-width {\n    @extend %full-width;\n  }\n\n  .md-slider-track-fill {\n    background: $md-slider-on-color;\n    height: $md-slider-track-height;\n    left: 0;\n    margin: 0;\n    position: absolute;\n    top: 0;\n    transition-duration: $md-transition-time;\n    transition-property: width;\n  }\n\n  .md-slider-track-fill--dragging {\n    transition-property: none;\n  }\n\n  .md-slider-thumb {\n    border-radius: 50%;\n    content: '';\n    display: inline-block;\n    height: $md-slider-thumb-size;\n    position: absolute;\n    top: -(($md-slider-thumb-size / 2) - ($md-slider-track-height / 2));\n    transition-duration: $md-transition-time;\n    transition-property: left, transform, background;\n    width: $md-slider-thumb-size;\n    z-index: $md-slider-thumb-z-index;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .md-slider-thumb--on {\n    background: $md-slider-on-color;\n  }\n\n  .md-slider-thumb--active {\n    transform: scale($md-slider-thumb-active-scale);\n    transform-origin: center;\n  }\n\n  .md-slider-thumb--dragging {\n    transition-property: transform, background;\n  }\n\n  .md-slider-thumb--disabled {\n    background: $md-slider-off-color;\n    transform: scale($md-slider-thumb-disabled-scale);\n  }\n\n  .md-slider-thumb--continuous-off {\n    background: $bg-color;\n    border: 2px solid;\n    border-color: $md-slider-off-color;\n    position: relative;\n  }\n\n  .md-slider-thumb--mask {\n    transform: scale(1);\n    z-index: -1;\n  }\n\n  .md-slider-thumb--mask-inked {\n    background: $md-slider-mask-ink-color;\n    transform: scale(3.5);\n    z-index: $md-slider-thumb-z-index - 1;\n  }\n\n  .md-slider-thumb--mask-disabled {\n    background: $bg-color;\n    border-radius: initial;\n    transform: scale(1.1);\n    z-index: $md-slider-thumb-z-index - 1;\n  }\n\n  @if $include-discrete {\n    @include react-md-discrete-slider($primary-color, $light-theme);\n  }\n\n  @if $include-editor {\n    @include react-md-editable-slider;\n  }\n\n  @if $include-indicators {\n    @include react-md-slider-indicators;\n  }\n","line":{"start":81,"end":220}}},{"description":"This will include the styles for a discrete Slider.\n\n","context":{"type":"mixin","name":"react-md-discrete-slider","code":"\n  $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n  $md-slider-discrete-mask-ink-color: rgba($primary-color, $md-slider-discrete-mask-ink-opacity);\n\n  .md-slider-thumb--discrete {\n    &::after {\n      border-left: 7px solid transparent;\n      border-right: 7px solid transparent;\n      border-top: 7px solid transparent;\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n      content: '';\n      height: 0;\n      left: 0;\n      position: absolute;\n      top: 10px;\n      transition-duration: $md-transition-time;\n      transition-property: border-top-color, transform;\n      width: 0;\n    }\n  }\n\n  .md-slider-thumb--discrete-active {\n    top: 0;\n    transform: scale(2) translate3d(0, -18px, 0);\n\n  }\n\n  .md-sider-thumb--discrete-on {\n    &::after {\n      border-top-color: $md-slider-on-color;\n    }\n  }\n\n  .md-slider-thumb--discrete-off {\n    background: if($light-theme, $md-black-base, $md-white-base);\n  }\n\n  .md-slider-thumb--discrete-active-off {\n    background: $md-grey-400;\n\n    &::after {\n      border-top-color: $md-grey-400;\n    }\n  }\n\n  .md-slider-thumb--discrete-mask-inked {\n    transform: scale(2.5);\n    transition-duration: $md-slider-discrete-ink-transition-time;\n  }\n\n  .md-slider-thumb--discrete-mask-leaving {\n    background: $md-slider-discrete-mask-ink-color;\n    transition-duration: $md-slider-discrete-ink-transition-time;\n    z-index: $md-slider-thumb-z-index - 1;\n  }\n\n  .md-slider-discrete-value {\n    align-items: center;\n    color: $md-white-base;\n    display: flex;\n    font-size: 12px;\n    height: $md-slider-thumb-size * 2;\n    justify-content: center;\n    position: absolute;\n    text-align: center;\n    transform: translate3d(-7px, -43px, 0);\n    transition-duration: $md-transition-time;\n    transition-property: left;\n    width: $md-slider-thumb-size * 2;\n    z-index: $md-slider-thumb-z-index + 1;\n  }\n\n  .md-slider-discrete-tick {\n    background: if($light-theme, $md-black-base, $md-white-base);\n    content: '';\n    height: $md-slider-discrete-tick-height;\n    position: absolute;\n    top: -(($md-slider-discrete-tick-height / 2) - ($md-slider-track-height / 2));\n    z-index: $md-slider-thumb-z-index - 1;\n  }\n\n  .md-slider-discrete-value--dragging {\n    transition-property: none;\n  }\n","line":{"start":227,"end":316}}},{"description":"Includes only the `md-text-field-container` css. This should normally be used from\nthe `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-container","code":"\n  @if $include-media {\n    @include react-md-text-field-container-media($include-multiline, $include-floating-label);\n  }\n\n  .md-text-field-container {\n    @include react-md-theme-text-field-placeholders(get-color('secondary', $light-theme));\n\n    position: relative;\n    vertical-align: top;\n\n    // scss-lint:disable VendorPrefix, PseudoElement\n    :-moz-placeholder {\n      opacity: 1;\n    }\n\n    ::-moz-placeholder {\n      opacity: 1;\n    }\n\n    :-ms-input-placeholder {\n      opacity: 1;\n    }\n\n    ::-webkit-input-placeholder {\n      opacity: 1;\n    }\n\n    &:hover {\n      cursor: text;\n    }\n  }\n\n  .md-text-field-container--input {\n    display: inline-flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    line-height: 1;\n  }\n\n  .md-text-field-container--full-width {\n    width: 100%;\n  }\n\n  .md-text-field-container--disabled {\n    $color: get-color('disabled', $light-theme);\n    @include react-md-theme-text-field-placeholders($color);\n\n    color: $color;\n\n    &:hover {\n      cursor: initial;\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-container--multiline {\n      display: inline-block;\n      transition-duration: $md-transition-time * 2;\n      transition-property: height;\n    }\n  }\n\n  @if $include-block {\n    .md-text-field-container--block {\n      align-items: center;\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n\n      .md-text-field {\n        width: 100%;\n      }\n    }\n  }\n\n  @if $include-icon {\n    .md-text-field-container--with-icon {\n      align-items: flex-end;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n    }\n  }\n","line":{"start":249,"end":340}}},{"description":"Includes only css for the text field dividers. This is really used if\nyou do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider","code":"\n  @if $include-media {\n    @include react-md-text-field-divider-media;\n  }\n\n  $md-divider-color: get-color('divider', $light-theme);\n\n  .md-text-field-divider {\n    background: $md-divider-color;\n    border: 0;\n    height: $md-text-field-divider-height;\n    margin-top: $md-text-field-divider-top-padding;\n    width: 100%;\n\n    &::after {\n      background: $primary-color;\n      content: '';\n      display: block;\n      height: $md-text-field-divider-active-height;\n      transition-duration: $md-transition-time;\n      transition-property: width;\n      width: 0;\n    }\n  }\n\n  .md-text-field-divider--error,\n  .md-text-field-divider--error::after {\n    background: $error-color;\n  }\n\n  .md-text-field-divider--active::after {\n    width: 100%;\n  }\n\n  .md-text-field-divider--from-left::after {\n    left: 0;\n  }\n\n  .md-text-field-divider--from-center::after {\n    margin: auto;\n  }\n\n  .md-text-field-divider--from-right::after {\n    margin-left: auto;\n    right: 0;\n  }\n","line":{"start":612,"end":658}}},{"description":"Includes the styles for the text field's floating label.\n\n","context":{"type":"mixin","name":"react-md-text-field-floating-label","code":"\n  @if $include-media {\n    @include react-md-text-field-floating-label-media;\n  }\n\n  .md-floating-label {\n    color: get-color('secondary', $light-theme);\n    cursor: text;\n    line-height: 1;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    transition-duration: $md-transition-time;\n    transition-property: transform, font-size, color;\n  }\n\n  .md-floating-label--disabled {\n    color: get-color('disabled', $light-theme);\n  }\n\n  .md-floating-label--floating {\n    font-size: $md-text-field-active-font-size;\n  }\n\n  .md-floating-label--active {\n    color: $primary-color;\n  }\n\n  .md-floating-label--error {\n    color: $error-color;\n  }\n\n  .md-floating-label--icon-offset {\n    left: 40px;\n  }\n","line":{"start":862,"end":897}}},{"description":"Includes the styles for the text field message / counter component.\n\n","context":{"type":"mixin","name":"react-md-text-field-message","code":"\n  .md-text-field-message-container {\n    color: get-color('hint', $light-theme);\n    display: flex;\n    font-size: $md-text-field-message-font-size;\n    justify-content: space-between;\n  }\n\n  .md-text-field-message-container--error {\n    color: $error-color;\n  }\n\n  .md-text-field-message-container--full-width {\n    width: 100%;\n  }\n\n  .md-text-field-message-container--count-only {\n    justify-content: flex-end;\n  }\n\n  @if $include-icon {\n    .md-text-field-message-container--left-icon-offset {\n      margin-left: 40px;\n    }\n\n    .md-text-field-message-container--right-icon-offset {\n      margin-right: 40px;\n    }\n  }\n\n  .md-text-field-counter {\n    display: block;\n    flex-shrink: 0;\n    padding-left: $md-default-padding;\n  }\n\n  .md-text-field-message {\n    flex-grow: 1;\n    transition-duration: $md-transition-time;\n    transition-property: opacity;\n  }\n\n  .md-text-field-message--inactive {\n    opacity: 0;\n  }\n\n  .md-text-field-message--active {\n    opacity: 1;\n  }\n","line":{"start":1000,"end":1049}}}]}]