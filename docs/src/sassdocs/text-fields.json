[{"description":"The error color to use on text fields. This will be applied to the\nany icons, text field error message, floating label, and the text\nfield divider when there is an error.\n","commentRange":{"start":7,"end":10},"context":{"type":"variable","name":"md-text-field-error-color","value":"$md-red-500","scope":"default","line":{"start":11,"end":11}},"type":"Color","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-divider::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-divider {\n      background: get-color('divider', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-divider--error,\n    .md-text-field-divider--error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":792,"end":811}}},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":904,"end":922}}},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1032,"end":1054}}},{"description":"Modifies the styles of the text-field-message ONLY if:\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-text-field-error-color`\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-message","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-message-container {\n      color: get-color('hint', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-message-container--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1180,"end":1192}}}]},{"description":"The text field divider's active height. This is the bar that\ngets colored with the primary color or the error color.\n","commentRange":{"start":13,"end":15},"context":{"type":"variable","name":"md-text-field-divider-active-height","value":"2px","scope":"default","line":{"start":16,"end":16}},"type":"Number","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes only css for the text field dividers. This is really used if\nyou do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider","code":"\n  @if $include-media {\n    @include react-md-text-field-divider-media;\n  }\n\n  $md-divider-color: get-color('divider', $light-theme);\n\n  .md-text-field-divider {\n    background: $md-divider-color;\n    border: 0;\n    height: $md-text-field-divider-height;\n    margin-top: $md-text-field-divider-top-padding;\n    width: 100%;\n\n    &::after {\n      background: $primary-color;\n      content: '';\n      display: block;\n      height: $md-text-field-divider-active-height;\n      transition-duration: $md-transition-time;\n      transition-property: width;\n      width: 0;\n    }\n  }\n\n  .md-text-field-divider--error,\n  .md-text-field-divider--error::after {\n    background: $error-color;\n  }\n\n  .md-text-field-divider--active::after {\n    width: 100%;\n  }\n\n  .md-text-field-divider--from-left::after {\n    left: 0;\n  }\n\n  .md-text-field-divider--from-center::after {\n    margin: auto;\n  }\n\n  .md-text-field-divider--from-right::after {\n    margin-left: auto;\n    right: 0;\n  }\n","line":{"start":728,"end":774}}}]},{"description":"A Map of custom sizes for text fields. Set this to null if you do\nnot want any custom sizes by default.\n","commentRange":{"start":18,"end":20},"context":{"type":"variable","name":"md-text-field-custom-sizes","value":"(\n  title: $md-display-1-font-size,\n)","scope":"default","line":{"start":21,"end":23}},"type":"Map","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the multiline styling should be included by default.\n","commentRange":{"start":25,"end":26},"context":{"type":"variable","name":"md-text-field-include-multiline","value":"true","scope":"default","line":{"start":27,"end":27}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the floating label styling should be included by default.\n","commentRange":{"start":29,"end":30},"context":{"type":"variable","name":"md-text-field-include-floating-label","value":"true","scope":"default","line":{"start":31,"end":31}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the block styling should be included by default.\n","commentRange":{"start":33,"end":34},"context":{"type":"variable","name":"md-text-field-include-block","value":"true","scope":"default","line":{"start":35,"end":35}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the text field icons styling should be included by default.\n","commentRange":{"start":37,"end":38},"context":{"type":"variable","name":"md-text-field-include-icon","value":"true","scope":"default","line":{"start":39,"end":39}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the text field message styling should be included by default.\n","commentRange":{"start":41,"end":42},"context":{"type":"variable","name":"md-text-field-include-message","value":"true","scope":"default","line":{"start":43,"end":43}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Boolean if the password styling should be included by default.\n","commentRange":{"start":45,"end":46},"context":{"type":"variable","name":"md-text-field-include-password","value":"true","scope":"default","line":{"start":47,"end":47}},"type":"Boolean","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"The padding above the text field divider for mobile and desktop.\n","commentRange":{"start":98,"end":99},"context":{"type":"variable","name":"md-text-field-divider-top-padding","value":"8px - $md-text-field-divider-height","scope":"private","line":{"start":100,"end":100}},"type":"Number","group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes only css for the text field dividers. This is really used if\nyou do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider","code":"\n  @if $include-media {\n    @include react-md-text-field-divider-media;\n  }\n\n  $md-divider-color: get-color('divider', $light-theme);\n\n  .md-text-field-divider {\n    background: $md-divider-color;\n    border: 0;\n    height: $md-text-field-divider-height;\n    margin-top: $md-text-field-divider-top-padding;\n    width: 100%;\n\n    &::after {\n      background: $primary-color;\n      content: '';\n      display: block;\n      height: $md-text-field-divider-active-height;\n      transition-duration: $md-transition-time;\n      transition-property: width;\n      width: 0;\n    }\n  }\n\n  .md-text-field-divider--error,\n  .md-text-field-divider--error::after {\n    background: $error-color;\n  }\n\n  .md-text-field-divider--active::after {\n    width: 100%;\n  }\n\n  .md-text-field-divider--from-left::after {\n    left: 0;\n  }\n\n  .md-text-field-divider--from-center::after {\n    margin: auto;\n  }\n\n  .md-text-field-divider--from-right::after {\n    margin-left: auto;\n    right: 0;\n  }\n","line":{"start":728,"end":774}}}]},{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","commentRange":{"start":137,"end":172},"context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}},"example":[{"type":"scss","code":"@include react-md-text-fields;\n\n// or\n$md-primary-color: $md-light-blue-500;\n@include react-md-text-fields;\n\n// or\n@include react-md-text-fields($md-light-theme, $md-light-blue-500);\n","description":"Basic Usage SCSS"}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."},{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the `block` styling\n    should be included."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the minimal styling for\n    using icons should be included."},{"type":"Boolean","name":"include-message","default":"$md-text-field-include-message","description":"Boolean if the text field message\n    styling should be included. This is the css for the counter and/or help/error text."},{"type":"Boolean","name":"include-password","default":"$md-text-field-include-password","description":"Boolean if the styling for password\n    text fields should be included."},{"type":"Map","name":"custom-sizes","default":"$md-text-field-custom-sizes","description":"This is a map of size names and font sizes\n    to apply as custom sizes for the text field."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-container"},{"type":"mixin","name":"react-md-text-field"},{"type":"mixin","name":"react-md-text-field-custom-sizes"},{"type":"mixin","name":"react-md-text-field-floating-label"},{"type":"mixin","name":"react-md-text-field-divider"},{"type":"mixin","name":"react-md-text-field-icon"},{"type":"mixin","name":"react-md-text-field-password"},{"type":"mixin","name":"react-md-text-field-message"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"","commentRange":{"start":212,"end":228},"context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}},"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."},{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the `block` styling\n    should be included."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the minimal styling for\n    using icons should be included."},{"type":"Boolean","name":"include-message","default":"$md-text-field-include-message","description":"Boolean if the text field message\n    styling should be included. This is the css for the counter and/or help/error text."},{"type":"Boolean","name":"include-password","default":"$md-text-field-include-password","description":"Boolean if the styling for password\n    text fields should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-theme-text-field-container"},{"type":"mixin","name":"react-md-theme-text-field-divider"},{"type":"mixin","name":"react-md-theme-text-field-icon"},{"type":"mixin","name":"react-md-theme-text-field-floating-label"},{"type":"mixin","name":"react-md-theme-text-field-message"},{"type":"mixin","name":"react-md-theme-text-field-password"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"","commentRange":{"start":249,"end":260},"context":{"type":"css","name":"// @mixin react-md-text-fields-mobile(\n//   $include-multiline: $md-text-field-include-multiline,\n//   $include-floating-label: $md-text-field-include-floating-label,\n//   $include-block: $md-text-field-include-block,\n//   $include-icon: $md-text-field-include-icon,\n//   $include-password: $md-text-field-include-password,\n//   $custom-sizes: $md-text-field-custom-sizes\n// )","value":"","line":{"start":268,"end":1504}},"group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"","commentRange":{"start":296,"end":307},"context":{"type":"css","name":"// @mixin react-md-text-fields-desktop(\n//   $include-multiline: $md-text-field-include-multiline,\n//   $include-floating-label: $md-text-field-include-floating-label,\n//   $include-block: $md-text-field-include-block,\n//   $include-icon: $md-text-field-include-icon,\n//   $include-password: $md-text-field-include-password,\n//   $custom-sizes: $md-text-field-custom-sizes\n// )","value":"","line":{"start":315,"end":1504}},"group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Includes only the `md-text-field-container` css. This should normally be used from\nthe `react-md-text-fields` mixin.\n\n","commentRange":{"start":343,"end":364},"context":{"type":"mixin","name":"react-md-text-field-container","code":"\n  @if $include-media {\n    @include react-md-text-field-container-media($include-multiline, $include-floating-label);\n  }\n\n  .md-text-field-container {\n    @include react-md-theme-text-field-placeholders(get-color('secondary', $light-theme));\n\n    position: relative;\n    vertical-align: top;\n\n    // scss-lint:disable VendorPrefix, PseudoElement\n    :-moz-placeholder {\n      opacity: 1;\n    }\n\n    ::-moz-placeholder {\n      opacity: 1;\n    }\n\n    :-ms-input-placeholder {\n      opacity: 1;\n    }\n\n    ::-webkit-input-placeholder {\n      opacity: 1;\n    }\n\n    &:hover {\n      cursor: text;\n    }\n  }\n\n  .md-text-field-container--input {\n    display: inline-flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    line-height: 1;\n  }\n\n  .md-text-field-container--full-width {\n    width: 100%;\n  }\n\n  .md-text-field-container--disabled {\n    $color: get-color('disabled', $light-theme);\n    @include react-md-theme-text-field-placeholders($color);\n\n    color: $color;\n\n    &:hover {\n      cursor: initial;\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-container--multiline {\n      display: inline-block;\n      transition-duration: $md-transition-time * 2;\n      transition-property: height;\n    }\n  }\n\n  @if $include-block {\n    .md-text-field-container--block {\n      align-items: center;\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n\n      .md-text-field {\n        width: 100%;\n      }\n    }\n  }\n\n  @if $include-icon {\n    .md-text-field-container--with-icon {\n      align-items: flex-end;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n    }\n  }\n","line":{"start":365,"end":456}},"example":[{"type":"scss","code":"@include react-md-text-field-container;\n\n// or\n$md-primary-color: $md-orange-500;\n@include react-md-text-field-container;\n","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if currently using the light\n    theme."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."},{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the\n    multiline text field css should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean\n    if the floating label css for text fields should be included."},{"type":"Boolean","name":"include-block","default":"$md-text-field-include-block","description":"Boolean if the block styling\n    for text fields should be included."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the icon styling\n    should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-container-media"},{"type":"mixin","name":"react-md-theme-text-field-placeholders"},{"type":"function","name":"get-color"},{"type":"variable","name":"md-transition-time"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}}}]},{"description":"Modifies the styles of the text-field-container ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":458,"end":469},"context":{"type":"mixin","name":"react-md-theme-text-field-container","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-text-field-placeholders(get-color('secondary', $light-theme));\n    }\n\n    .md-text-field-container--disabled {\n      $color: get-color('disabled', $light-theme);\n      @include react-md-theme-text-field-placeholders($color);\n\n      color: $color;\n    }\n  }\n","line":{"start":470,"end":483}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-container(true);\n}","description":"Example Usage SCSS"}],"see":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-theme-text-field-placeholders"},{"type":"function","name":"get-color"},{"type":"variable","name":"md-light-theme"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}]},{"description":"Creates the css that should be put into a media query for text fields on mobile devices.\n\n","commentRange":{"start":485,"end":495},"context":{"type":"mixin","name":"react-md-text-field-container-mobile","code":"\n  .md-text-field-container--input {\n    min-height: $md-text-field-mobile-height;\n  }\n\n  @if $include-floating-label {\n    .md-text-field-container--input-floating-label {\n      height: $md-text-field-mobile-floating-height;\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-container--multiline {\n      min-height: $md-text-field-mobile-height;\n    }\n\n    @if $include-floating-label {\n      .md-text-field-container--multiline-floating-label {\n        min-height: $md-text-field-mobile-floating-height + $md-text-field-mobile-top-padding + $md-text-field-mobile-floating-label-padding + 5;\n      }\n    }\n  }\n","line":{"start":496,"end":518}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-container-mobile;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styling of text fields should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-mobile-height"},{"type":"variable","name":"md-text-field-mobile-floating-height"},{"type":"variable","name":"md-text-field-mobile-top-padding"},{"type":"variable","name":"md-text-field-mobile-floating-label-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-container-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-container-mobile($include-multiline, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-container-desktop($include-multiline, $include-floating-label);\n  }\n","line":{"start":565,"end":573}}}]},{"description":"Creates the css that should be put into a media query for text fields on desktop screens.\n\n","commentRange":{"start":520,"end":530},"context":{"type":"mixin","name":"react-md-text-field-container-desktop","code":"\n  .md-text-field-container--input {\n    min-height: $md-text-field-desktop-height;\n  }\n\n  @if $include-floating-label {\n    .md-text-field-container--input-floating-label {\n      height: $md-text-field-desktop-floating-height;\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-container--multiline {\n      min-height: $md-text-field-desktop-height;\n    }\n\n    @if $include-floating-label {\n      .md-text-field-container--multiline-floating-label {\n        min-height: $md-text-field-desktop-floating-height + $md-text-field-desktop-top-padding + $md-text-field-desktop-floating-label-padding + 5;\n      }\n    }\n  }\n","line":{"start":531,"end":553}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-container-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styling of text fields should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-desktop-height"},{"type":"variable","name":"md-text-field-desktop-floating-height"},{"type":"variable","name":"md-text-field-desktop-top-padding"},{"type":"variable","name":"md-text-field-desktop-floating-label-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-container-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-container-mobile($include-multiline, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-container-desktop($include-multiline, $include-floating-label);\n  }\n","line":{"start":565,"end":573}}}]},{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","commentRange":{"start":555,"end":564},"context":{"type":"mixin","name":"react-md-text-field-container-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-container-mobile($include-multiline, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-container-desktop($include-multiline, $include-floating-label);\n  }\n","line":{"start":565,"end":573}},"example":[{"type":"scss","code":"@include react-md-text-field-container;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline styling\n    of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the floating\n    label styling should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-container-mobile"},{"type":"mixin","name":"react-md-text-field-container-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes only the `md-text-field-container` css. This should normally be used from\nthe `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-container","code":"\n  @if $include-media {\n    @include react-md-text-field-container-media($include-multiline, $include-floating-label);\n  }\n\n  .md-text-field-container {\n    @include react-md-theme-text-field-placeholders(get-color('secondary', $light-theme));\n\n    position: relative;\n    vertical-align: top;\n\n    // scss-lint:disable VendorPrefix, PseudoElement\n    :-moz-placeholder {\n      opacity: 1;\n    }\n\n    ::-moz-placeholder {\n      opacity: 1;\n    }\n\n    :-ms-input-placeholder {\n      opacity: 1;\n    }\n\n    ::-webkit-input-placeholder {\n      opacity: 1;\n    }\n\n    &:hover {\n      cursor: text;\n    }\n  }\n\n  .md-text-field-container--input {\n    display: inline-flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    line-height: 1;\n  }\n\n  .md-text-field-container--full-width {\n    width: 100%;\n  }\n\n  .md-text-field-container--disabled {\n    $color: get-color('disabled', $light-theme);\n    @include react-md-theme-text-field-placeholders($color);\n\n    color: $color;\n\n    &:hover {\n      cursor: initial;\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-container--multiline {\n      display: inline-block;\n      transition-duration: $md-transition-time * 2;\n      transition-property: height;\n    }\n  }\n\n  @if $include-block {\n    .md-text-field-container--block {\n      align-items: center;\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n\n      .md-text-field {\n        width: 100%;\n      }\n    }\n  }\n\n  @if $include-icon {\n    .md-text-field-container--with-icon {\n      align-items: flex-end;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n    }\n  }\n","line":{"start":365,"end":456}}}]},{"description":"Includes the css for the input / textarea tags for text fields. This is normally\nused only within the `react-md-text-fields` mixin.\n\n","commentRange":{"start":577,"end":589},"context":{"type":"mixin","name":"react-md-text-field","code":"\n  @if $include-media {\n    @include react-md-text-field-media;\n  }\n\n  .md-text-field {\n    background: none;\n    border: 0;\n    line-height: inherit;\n    padding: 0;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:-webkit-autofill,\n    &:-webkit-autofill:focus {\n      box-shadow: 0 0 0 50px $md-white-base inset;\n    }\n  }\n\n  .md-text-field--full-width {\n    width: 100%;\n  }\n\n  @if $include-multiline {\n    .md-text-field-multiline-container {\n      position: relative;\n    }\n\n    .md-text-field--multiline {\n      padding-bottom: 0;\n      padding-top: 0;\n      resize: none;\n    }\n\n    .md-text-field--multiline-mask {\n      overflow: hidden;\n      position: absolute;\n      visibility: hidden;\n      z-index: -1;\n    }\n  }\n","line":{"start":590,"end":633}},"example":[{"type":"scss","code":"@include react-md-text-field;","description":"Basic Usage SCSS"}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text field should be styled\n    for the light-theme."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."},{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline styling\n    of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the floating\n    label styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-media"},{"type":"variable","name":"md-white-base"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}}}]},{"description":"Creates the css for styling text fields on a mobile device. This should\nbe used within media queries.\n\n","commentRange":{"start":635,"end":646},"context":{"type":"mixin","name":"react-md-text-field-mobile","code":"\n  .md-text-field {\n    font-size: $md-text-field-mobile-font-size;\n  }\n\n  @if $include-multiline {\n    .md-text-field-multiline-container {\n      height: calc(100% - 16px);\n    }\n\n    @if $include-floating-label {\n      .md-text-field--floating-label-multiline {\n        margin-top: $md-text-field-mobile-top-padding + $md-text-field-mobile-floating-label-padding + $md-text-field-active-font-size;\n      }\n    }\n  }\n","line":{"start":647,"end":663}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-mobile;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-mobile-font-size"},{"type":"variable","name":"md-text-field-mobile-top-padding"},{"type":"variable","name":"md-text-field-mobile-floating-label-padding"},{"type":"variable","name":"md-text-field-active-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-multiline, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-multiline, $include-floating-label);\n  }\n","line":{"start":707,"end":715}}}]},{"description":"Creates the css for styling text fields on a mobile device. This should\nbe used within media queries.\n\n","commentRange":{"start":665,"end":676},"context":{"type":"mixin","name":"react-md-text-field-desktop","code":"\n  .md-text-field {\n    font-size: $md-text-field-desktop-font-size;\n  }\n\n  @if $include-multiline {\n    .md-text-field-multiline-container {\n      height: calc(100% - 12px);\n    }\n\n    @if $include-floating-label {\n      .md-text-field--floating-label-multiline {\n        margin-top: $md-text-field-desktop-top-padding + $md-text-field-desktop-floating-label-padding + $md-text-field-active-font-size;\n      }\n    }\n  }\n\n","line":{"start":677,"end":694}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-desktop-font-size"},{"type":"variable","name":"md-text-field-desktop-top-padding"},{"type":"variable","name":"md-text-field-desktop-floating-label-padding"},{"type":"variable","name":"md-text-field-active-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-multiline, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-multiline, $include-floating-label);\n  }\n","line":{"start":707,"end":715}}}]},{"description":"Includes the media queries for text fields on mobile and desktop devices. This\nis really only helpful if you do not use the `react-md-text-fields` mixin.\n\n","commentRange":{"start":697,"end":706},"context":{"type":"mixin","name":"react-md-text-field-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-multiline, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-multiline, $include-floating-label);\n  }\n","line":{"start":707,"end":715}},"example":[{"type":"scss","code":"@include react-md-text-field-media;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"include-multiline","default":"$md-text-field-include-multiline","description":"Boolean if the multiline\n    styling of text fields should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    floating label styles should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-mobile"},{"type":"mixin","name":"react-md-text-field-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for the input / textarea tags for text fields. This is normally\nused only within the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field","code":"\n  @if $include-media {\n    @include react-md-text-field-media;\n  }\n\n  .md-text-field {\n    background: none;\n    border: 0;\n    line-height: inherit;\n    padding: 0;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:-webkit-autofill,\n    &:-webkit-autofill:focus {\n      box-shadow: 0 0 0 50px $md-white-base inset;\n    }\n  }\n\n  .md-text-field--full-width {\n    width: 100%;\n  }\n\n  @if $include-multiline {\n    .md-text-field-multiline-container {\n      position: relative;\n    }\n\n    .md-text-field--multiline {\n      padding-bottom: 0;\n      padding-top: 0;\n      resize: none;\n    }\n\n    .md-text-field--multiline-mask {\n      overflow: hidden;\n      position: absolute;\n      visibility: hidden;\n      z-index: -1;\n    }\n  }\n","line":{"start":590,"end":633}}}]},{"description":"Includes only css for the text field dividers. This is really used if\nyou do not use the `react-md-text-fields` mixin.\n\n","commentRange":{"start":717,"end":727},"context":{"type":"mixin","name":"react-md-text-field-divider","code":"\n  @if $include-media {\n    @include react-md-text-field-divider-media;\n  }\n\n  $md-divider-color: get-color('divider', $light-theme);\n\n  .md-text-field-divider {\n    background: $md-divider-color;\n    border: 0;\n    height: $md-text-field-divider-height;\n    margin-top: $md-text-field-divider-top-padding;\n    width: 100%;\n\n    &::after {\n      background: $primary-color;\n      content: '';\n      display: block;\n      height: $md-text-field-divider-active-height;\n      transition-duration: $md-transition-time;\n      transition-property: width;\n      width: 0;\n    }\n  }\n\n  .md-text-field-divider--error,\n  .md-text-field-divider--error::after {\n    background: $error-color;\n  }\n\n  .md-text-field-divider--active::after {\n    width: 100%;\n  }\n\n  .md-text-field-divider--from-left::after {\n    left: 0;\n  }\n\n  .md-text-field-divider--from-center::after {\n    margin: auto;\n  }\n\n  .md-text-field-divider--from-right::after {\n    margin-left: auto;\n    right: 0;\n  }\n","line":{"start":728,"end":774}},"example":[{"type":"scss","code":"@include react-md-text-field-divider;","description":"Example Usage SCSS"}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-divider-media"},{"type":"function","name":"get-color"},{"type":"variable","name":"md-text-field-divider-height"},{"type":"variable","name":"md-text-field-divider-top-padding"},{"type":"variable","name":"md-text-field-divider-active-height"},{"type":"variable","name":"md-transition-time"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}}}]},{"description":"Modifies the styles of the text-field-divider ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":776,"end":791},"context":{"type":"mixin","name":"react-md-theme-text-field-divider","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-divider::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-divider {\n      background: get-color('divider', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-divider--error,\n    .md-text-field-divider--error::after {\n      background: $error-color;\n    }\n  }\n","line":{"start":792,"end":811}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-divider($md-light-blue-400, true, $md-orange-500);\n}","description":"Example Usage SCSS"}],"see":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to use."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."},{"type":"Color","name":"error-color","default":"$md-text-field-error-color","description":"The error color to use."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-primary-color"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-text-field-error-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}]},{"description":"Creates the styles for the text field dividers for mobile devices.\nThis should be used within a media query.\n\n","commentRange":{"start":813,"end":819},"context":{"type":"mixin","name":"react-md-text-field-divider-mobile","code":"\n  .md-text-field-divider {\n    margin-bottom: $md-text-field-mobile-divider-bottom-padding;\n  }\n","line":{"start":820,"end":824}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-divider-mobile;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-mobile-divider-bottom-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the mobile and desktop media queries for the text field dividers.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n","line":{"start":843,"end":851}}}]},{"description":"Creates the styles for the text field dividers for mobile devices.\nThis should be used within a media query.\n\n","commentRange":{"start":826,"end":832},"context":{"type":"mixin","name":"react-md-text-field-divider-desktop","code":"\n  .md-text-field-divider {\n    margin-bottom: $md-text-field-desktop-divider-bottom-padding;\n  }\n","line":{"start":833,"end":837}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-divider-desktop;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-desktop-divider-bottom-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the mobile and desktop media queries for the text field dividers.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n","line":{"start":843,"end":851}}}]},{"description":"Includes the mobile and desktop media queries for the text field dividers.\n\n","commentRange":{"start":839,"end":842},"context":{"type":"mixin","name":"react-md-text-field-divider-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n","line":{"start":843,"end":851}},"example":[{"type":"scss","code":"@include react-md-text-field-divider-media;","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-divider-mobile"},{"type":"mixin","name":"react-md-text-field-divider-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes only css for the text field dividers. This is really used if\nyou do not use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-divider","code":"\n  @if $include-media {\n    @include react-md-text-field-divider-media;\n  }\n\n  $md-divider-color: get-color('divider', $light-theme);\n\n  .md-text-field-divider {\n    background: $md-divider-color;\n    border: 0;\n    height: $md-text-field-divider-height;\n    margin-top: $md-text-field-divider-top-padding;\n    width: 100%;\n\n    &::after {\n      background: $primary-color;\n      content: '';\n      display: block;\n      height: $md-text-field-divider-active-height;\n      transition-duration: $md-transition-time;\n      transition-property: width;\n      width: 0;\n    }\n  }\n\n  .md-text-field-divider--error,\n  .md-text-field-divider--error::after {\n    background: $error-color;\n  }\n\n  .md-text-field-divider--active::after {\n    width: 100%;\n  }\n\n  .md-text-field-divider--from-left::after {\n    left: 0;\n  }\n\n  .md-text-field-divider--from-center::after {\n    margin: auto;\n  }\n\n  .md-text-field-divider--from-right::after {\n    margin-left: auto;\n    right: 0;\n  }\n","line":{"start":728,"end":774}}}]},{"description":"Includes the styles for using icons with text fields. This is really only useful if you did\nnot use the `react-md-text-fields` mixin.\n\n","commentRange":{"start":853,"end":863},"context":{"type":"mixin","name":"react-md-text-field-icon","code":"\n  @if $include-media {\n    @include react-md-text-field-icon-media;\n  }\n\n  .md-text-field-icon + .md-text-field-divider-container,\n  .md-text-field-divider-container + .md-text-field-icon {\n    margin-left: 16px;\n  }\n\n  .md-text-field-icon--disabled {\n    color: get-color('disabled', $light-theme);\n  }\n\n  .md-text-field-icon--active {\n    color: $primary-color;\n  }\n\n  .md-text-field-icon--error {\n    color: $error-color;\n  }\n","line":{"start":864,"end":885}},"example":[{"type":"scss","code":"@include react-md-text-field-icon;","description":"Example Usage SCSS"}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-icon-media"},{"type":"function","name":"get-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}}}]},{"description":"Modifies the styles of the text-field-icon ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":888,"end":903},"context":{"type":"mixin","name":"react-md-theme-text-field-icon","code":"\n  @if $primary-color != $md-primary-color {\n    .md-text-field-icon--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text-field-icon--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-icon--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":904,"end":922}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-icon($md-light-blue-400, true, $md-orange-500);\n}","description":"Example Usage SCSS"}],"see":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to use."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."},{"type":"Color","name":"error-color","default":"$md-text-field-error-color","description":"The error color to use."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-primary-color"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-text-field-error-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}]},{"description":"Creates the styles for text field icons on mobile devices. This should be included within\na media query.\n\n","commentRange":{"start":924,"end":930},"context":{"type":"mixin","name":"react-md-text-field-icon-mobile","code":"\n  $text-field-height: 19px;\n\n  .md-text-field-icon {\n    margin-bottom: 16px - (($md-font-icon-size - $text-field-height) / 2);\n  }\n","line":{"start":931,"end":937}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-icon-mobile;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-font-icon-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries and styles for the text field icons.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop;\n  }\n","line":{"start":958,"end":966}}}]},{"description":"Creates the styles for text field icons on desktop screens. This should be included within\na media query.\n\n","commentRange":{"start":939,"end":945},"context":{"type":"mixin","name":"react-md-text-field-icon-desktop","code":"\n  $text-field-height: 15px;\n\n  .md-text-field-icon {\n    margin-bottom: 12px - (($md-font-icon-size - $text-field-height) / 2);\n  }\n","line":{"start":946,"end":952}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-icon-desktop;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-font-icon-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries and styles for the text field icons.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop;\n  }\n","line":{"start":958,"end":966}}}]},{"description":"Includes the media queries and styles for the text field icons.\n\n","commentRange":{"start":954,"end":957},"context":{"type":"mixin","name":"react-md-text-field-icon-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop;\n  }\n","line":{"start":958,"end":966}},"example":[{"type":"scss","code":"@include react-md-text-field-icon-media;","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-icon-mobile"},{"type":"mixin","name":"react-md-text-field-icon-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the styles for using icons with text fields. This is really only useful if you did\nnot use the `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon","code":"\n  @if $include-media {\n    @include react-md-text-field-icon-media;\n  }\n\n  .md-text-field-icon + .md-text-field-divider-container,\n  .md-text-field-divider-container + .md-text-field-icon {\n    margin-left: 16px;\n  }\n\n  .md-text-field-icon--disabled {\n    color: get-color('disabled', $light-theme);\n  }\n\n  .md-text-field-icon--active {\n    color: $primary-color;\n  }\n\n  .md-text-field-icon--error {\n    color: $error-color;\n  }\n","line":{"start":864,"end":885}}}]},{"description":"Includes the styles for the text field's floating label.\n\n","commentRange":{"start":968,"end":977},"context":{"type":"mixin","name":"react-md-text-field-floating-label","code":"\n  @if $include-media {\n    @include react-md-text-field-floating-label;\n  }\n\n  .md-floating-label {\n    color: get-color('secondary', $light-theme);\n    cursor: text;\n    line-height: 1;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    transition-duration: $md-transition-time;\n    transition-property: transform, font-size, color;\n  }\n\n  .md-floating-label--disabled {\n    color: get-color('disabled', $light-theme);\n  }\n\n  .md-floating-label--floating {\n    font-size: $md-text-field-active-font-size;\n  }\n\n  .md-floating-label--active {\n    color: $primary-color;\n  }\n\n  .md-floating-label--error {\n    color: $error-color;\n  }\n\n  .md-floating-label--icon-offset {\n    left: 40px;\n  }\n","line":{"start":978,"end":1013}},"example":[{"type":"scss","code":"@include react-md-text-field-floating-label;","description":"Example Usage SCSS"}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to theme text fields with."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-transition-time"},{"type":"variable","name":"md-text-field-active-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}}}]},{"description":"Modifies the styles of the text-field-floating-label ONLY if:\n- the `$primary-color` is different than `$md-primary-color`\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-error-color`.\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":1016,"end":1031},"context":{"type":"mixin","name":"react-md-theme-text-field-floating-label","code":"\n  @if $primary-color != $md-primary-color {\n    .md-floating-label--active {\n      color: $primary-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-floating-label {\n      color: get-color('secondary', $light-theme);\n    }\n\n    .md-floating-label--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-floating-label--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1032,"end":1054}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-floating-label($md-light-blue-400, true, $md-orange-500);\n}","description":"Example Usage SCSS"}],"see":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}],"parameter":[{"type":"Color","name":"primary-color","default":"$md-primary-color","description":"The primary color to use."},{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."},{"type":"Color","name":"error-color","default":"$md-text-field-error-color","description":"The error color to use."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-primary-color"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-text-field-error-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}]},{"description":"Creates the styles for the text field floating labels for mobile devices.\nThis should be used within a media query.\n\n","commentRange":{"start":1056,"end":1062},"context":{"type":"mixin","name":"react-md-text-field-floating-label-mobile","code":"\n  .md-floating-label--inactive {\n    font-size: $md-text-field-mobile-font-size;\n    transform: translate3d(0, 40px, 0);\n  }\n\n  .md-floating-label--floating {\n    transform: translate3d(0, 16px, 0);\n  }\n","line":{"start":1063,"end":1072}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-floating-label-mobile;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-mobile-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries and styles for the text field floating labels..\n\n","context":{"type":"mixin","name":"react-md-text-field-floating-label-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n","line":{"start":1096,"end":1104}}}]},{"description":"Creates the styles for the text field floating labels for desktop screens.\nThis should be used within a media query.\n\n","commentRange":{"start":1074,"end":1080},"context":{"type":"mixin","name":"react-md-text-field-floating-label-desktop","code":"\n  .md-floating-label--inactive {\n    font-size: $md-text-field-desktop-font-size;\n    transform: translate3d(0, 34px, 0);\n  }\n\n  .md-floating-label--floating {\n    transform: translate3d(0, 12px, 0);\n  }\n","line":{"start":1081,"end":1090}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-floating-label-desktop;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-desktop-font-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries and styles for the text field floating labels..\n\n","context":{"type":"mixin","name":"react-md-text-field-floating-label-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n","line":{"start":1096,"end":1104}}}]},{"description":"Includes the media queries and styles for the text field floating labels..\n\n","commentRange":{"start":1092,"end":1095},"context":{"type":"mixin","name":"react-md-text-field-floating-label-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n","line":{"start":1096,"end":1104}},"example":[{"type":"scss","code":"@include react-md-text-field-floating-label-media;","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-floating-label-mobile"},{"type":"mixin","name":"react-md-text-field-floating-label-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Includes the styles for the text field message / counter component.\n\n","commentRange":{"start":1106,"end":1115},"context":{"type":"mixin","name":"react-md-text-field-message","code":"\n  .md-text-field-message-container {\n    color: get-color('hint', $light-theme);\n    display: flex;\n    font-size: $md-text-field-message-font-size;\n    justify-content: space-between;\n  }\n\n  .md-text-field-message-container--error {\n    color: $error-color;\n  }\n\n  .md-text-field-message-container--full-width {\n    width: 100%;\n  }\n\n  .md-text-field-message-container--count-only {\n    justify-content: flex-end;\n  }\n\n  @if $include-icon {\n    .md-text-field-message-container--left-icon-offset {\n      margin-left: 40px;\n    }\n\n    .md-text-field-message-container--right-icon-offset {\n      margin-right: 40px;\n    }\n  }\n\n  .md-text-field-counter {\n    display: block;\n    flex-shrink: 0;\n    padding-left: $md-default-padding;\n  }\n\n  .md-text-field-message {\n    flex-grow: 1;\n    transition-duration: $md-transition-time;\n    transition-property: opacity;\n  }\n\n  .md-text-field-message--inactive {\n    opacity: 0;\n  }\n\n  .md-text-field-message--active {\n    opacity: 1;\n  }\n","line":{"start":1116,"end":1165}},"example":[{"type":"scss","code":"@include react-md-text-field-message;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Color","name":"error-color","default":"$md-red-500","description":"The error color to use with text fields."},{"type":"Boolean","name":"include-icon","default":"$md-text-field-include-icon","description":"Boolean if the styles for text fields\n    with icons and messages shuld be included."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-text-field-message-font-size"},{"type":"variable","name":"md-transition-time"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}}}]},{"description":"Modifies the styles of the text-field-message ONLY if:\n- the `$light-theme` is different than `$md-light-theme`\n- the `$error-color` is different than `$md-text-field-error-color`\n\nIn most cases, you should use the `react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":1167,"end":1179},"context":{"type":"mixin","name":"react-md-theme-text-field-message","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-message-container {\n      color: get-color('hint', $light-theme);\n    }\n  }\n\n  @if $error-color != $md-text-field-error-color {\n    .md-text-field-message-container--error {\n      color: $error-color;\n    }\n  }\n","line":{"start":1180,"end":1192}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-message(true);\n}","description":"Example Usage SCSS"}],"see":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-light-theme"},{"type":"variable","name":"md-text-field-error-color"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}]},{"description":"Includes the styles for having a password text field.\n\n","commentRange":{"start":1194,"end":1201},"context":{"type":"mixin","name":"react-md-text-field-password","code":"\n  @if $include-media {\n    @include react-md-text-field-password;\n  }\n\n  .md-password-btn {\n    background: transparent;\n    border: 0;\n    color: get-color('hint', $light-theme);\n    height: $md-font-icon-size;\n    padding: 0;\n    position: absolute;\n    right: 0;\n    width: $md-font-icon-size;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-password-btn--active {\n    color: get-color('secondary', $light-theme);\n\n    &::before {\n      background: get-color('secondary', $light-theme);\n    }\n  }\n\n  .md-password-btn--invisible {\n    &::before,\n    &::after {\n      content: '';\n      display: block;\n      height: 2px;\n      position: absolute;\n      top: 50%;\n      width: 100%;\n    }\n\n    &::before {\n      transform: translate3d(-1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n\n    &::after {\n      background: get-color('background', $light-theme);\n      transform: translate3d(1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n  }\n\n  .md-text-field--password {\n    margin-right: $md-font-icon-size;\n  }\n","line":{"start":1202,"end":1262}},"example":[{"type":"scss","code":"@include react-md-text-field-password;","description":"Example Usage SCSS"}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the text fields should be styled for\n    the light or dark theme."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-font-icon-size"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}}}]},{"description":"Modifies the styles of the text-field-password ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","commentRange":{"start":1265,"end":1276},"context":{"type":"mixin","name":"react-md-theme-text-field-password","code":"\n  @if $light-theme != $md-light-theme {\n    .md-password-btn {\n      color: get-color('hint', $light-theme);\n    }\n\n    .md-password-btn--active {\n      color: get-color('secondary', $light-theme);\n\n      &::before {\n        background: get-color('secondary', $light-theme);\n      }\n    }\n\n    .md-password-btn--invisible::after {\n      background: get-color('background', $light-theme);\n    }\n  }\n","line":{"start":1277,"end":1295}},"example":[{"type":"scss","code":".my-subsection-styling {\n  @include react-md-theme-text-field-password(true);\n}","description":"Example Usage SCSS"}],"see":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}],"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if using the light theme."}],"group":["text-fields"],"access":"public","require":[{"type":"function","name":"get-color"},{"type":"variable","name":"md-light-theme"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"","context":{"type":"mixin","name":"react-md-theme-text-fields","code":"\n  @include react-md-theme-text-field-container($light-theme);\n  @include react-md-theme-text-field-divider($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-icon($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-floating-label($primary-color, $light-theme, $error-color);\n  @include react-md-theme-text-field-message($light-theme, $error-color);\n  @include react-md-theme-text-field-password($light-theme);\n","line":{"start":229,"end":247}}}]},{"description":"Creates the styles for a password text field on mobile devices. This should\nbe used within a media query.\n\n","commentRange":{"start":1297,"end":1303},"context":{"type":"mixin","name":"react-md-text-field-password-mobile","code":"\n  .md-password-btn {\n    bottom: 14px;\n  }\n","line":{"start":1304,"end":1308}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-password-mobile;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries for the password text field.\n\n","context":{"type":"mixin","name":"react-md-text-field-password-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-password-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-password-desktop;\n  }\n","line":{"start":1327,"end":1335}}}]},{"description":"Creates the styles for a password text field on desktop screens. This should\nbe used within a media query.\n\n","commentRange":{"start":1310,"end":1316},"context":{"type":"mixin","name":"react-md-text-field-password-desktop","code":"\n  .md-password-btn {\n    bottom: 9px;\n  }\n","line":{"start":1317,"end":1321}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-password-desktop;\n}","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the media queries for the password text field.\n\n","context":{"type":"mixin","name":"react-md-text-field-password-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-password-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-password-desktop;\n  }\n","line":{"start":1327,"end":1335}}}]},{"description":"Includes the media queries for the password text field.\n\n","commentRange":{"start":1323,"end":1326},"context":{"type":"mixin","name":"react-md-text-field-password-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-password-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-password-desktop;\n  }\n","line":{"start":1327,"end":1335}},"example":[{"type":"scss","code":"@include react-md-text-field-password-media;","description":"Example Usage SCSS"}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-password-mobile"},{"type":"mixin","name":"react-md-text-field-password-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"}},{"description":"Creates the styles for the custom sized text field for mobile devices. This should\nbe used in a media query.\n\n","commentRange":{"start":1337,"end":1348},"context":{"type":"mixin","name":"react-md-text-field-custom-size-mobile","code":"\n  $font-difference: $font-size - $md-text-field-mobile-font-size;\n  $floating-height: $md-text-field-mobile-floating-height + $font-difference;\n\n  .md-text-field-container--#{$name} {\n    min-height: $md-text-field-mobile-height + $font-difference;\n  }\n\n  @if $include-floating-label {\n    .md-text-field-container--floating-label-#{$name} {\n      min-height: $floating-height;\n    }\n\n    .md-floating-label--#{$name} {\n      transform: translate3d(0, $floating-height - $font-size - $md-text-field-mobile-top-padding, 0);\n    }\n  }\n","line":{"start":1349,"end":1366}},"example":[{"type":"scss","code":"@media #{$md-mobile-media} {\n  @include react-md-text-field-custom-sizes-mobile;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"String","name":"name","description":"The name of the custom text field size."},{"type":"Number","name":"font-size","description":"The font size for the custom text field size."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    custom text field size should include the styles for floating labels."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-mobile-font-size"},{"type":"variable","name":"md-text-field-mobile-floating-height"},{"type":"variable","name":"md-text-field-mobile-height"},{"type":"variable","name":"md-text-field-mobile-top-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the mobile and desktop media queries for the custom sized text fields.\n\n","context":{"type":"mixin","name":"react-md-text-field-custom-size-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-custom-size-mobile($name, $font-size, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-custom-size-desktop($name, $font-size, $include-floating-label);\n  }\n","line":{"start":1409,"end":1417}}}]},{"description":"Creates the styles for the custom sized text field for desktop screens. This should\nbe used in a media query.\n\n","commentRange":{"start":1368,"end":1379},"context":{"type":"mixin","name":"react-md-text-field-custom-size-desktop","code":"\n  $font-difference: $font-size - $md-text-field-desktop-font-size;\n  $floating-height: $md-text-field-desktop-floating-height + $font-difference;\n\n  .md-text-field-container--#{$name} {\n    min-height: $md-text-field-desktop-height + $font-difference;\n  }\n\n  @if $include-floating-label {\n    .md-text-field-container--floating-label-#{$name} {\n      min-height: $floating-height;\n    }\n\n    .md-floating-label--#{$name} {\n      transform: translate3d(0, $floating-height - $font-size - $md-text-field-desktop-top-padding, 0);\n    }\n  }\n","line":{"start":1380,"end":1397}},"example":[{"type":"scss","code":"@media #{$md-desktop-media} {\n  @include react-md-text-field-custom-sizes-desktop;\n}","description":"Example Usage SCSS"}],"parameter":[{"type":"String","name":"name","description":"The name of the custom text field size."},{"type":"Number","name":"font-size","description":"The font size for the custom text field size."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    custom text field size should include the styles for floating labels."}],"group":["text-fields"],"access":"public","require":[{"type":"variable","name":"md-text-field-desktop-font-size"},{"type":"variable","name":"md-text-field-desktop-floating-height"},{"type":"variable","name":"md-text-field-desktop-height"},{"type":"variable","name":"md-text-field-desktop-top-padding"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the mobile and desktop media queries for the custom sized text fields.\n\n","context":{"type":"mixin","name":"react-md-text-field-custom-size-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-custom-size-mobile($name, $font-size, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-custom-size-desktop($name, $font-size, $include-floating-label);\n  }\n","line":{"start":1409,"end":1417}}}]},{"description":"Includes the mobile and desktop media queries for the custom sized text fields.\n\n","commentRange":{"start":1400,"end":1408},"context":{"type":"mixin","name":"react-md-text-field-custom-size-media","code":"\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-custom-size-mobile($name, $font-size, $include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-custom-size-desktop($name, $font-size, $include-floating-label);\n  }\n","line":{"start":1409,"end":1417}},"example":[{"type":"scss","code":"@include react-md-text-field-custom-size-media(title, 32px);","description":"Example Usage SCSS"}],"parameter":[{"type":"String","name":"name","description":"The name of the custom text field size."},{"type":"Number","name":"font-size","description":"The font size for the custom text field size."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    custom text field size should include the styles for floating labels."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-custom-size-mobile"},{"type":"mixin","name":"react-md-text-field-custom-size-desktop"},{"type":"variable","name":"md-mobile-media"},{"type":"variable","name":"md-desktop-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for custom sizes for text fields. This will create some class names with the\ncomponents they modify and a `--#{$name}` suffix.\n\n","context":{"type":"mixin","name":"react-md-text-field-custom-sizes","code":"\n  @if $font-sizes != null {\n    @each $name, $font-size in $font-sizes {\n      @if $include-media {\n        @include react-md-text-field-custom-size-media($name, $font-size, $include-floating-label);\n      }\n\n      .md-text-field--#{$name} {\n        font-size: $font-size;\n      }\n\n      @if $include-floating-label {\n        .md-floating-label--#{$name} {\n          font-size: $font-size;\n        }\n      }\n    }\n  }\n","line":{"start":1438,"end":1456}}}]},{"description":"Includes the css for custom sizes for text fields. This will create some class names with the\ncomponents they modify and a `--#{$name}` suffix.\n\n","commentRange":{"start":1419,"end":1437},"context":{"type":"mixin","name":"react-md-text-field-custom-sizes","code":"\n  @if $font-sizes != null {\n    @each $name, $font-size in $font-sizes {\n      @if $include-media {\n        @include react-md-text-field-custom-size-media($name, $font-size, $include-floating-label);\n      }\n\n      .md-text-field--#{$name} {\n        font-size: $font-size;\n      }\n\n      @if $include-floating-label {\n        .md-floating-label--#{$name} {\n          font-size: $font-size;\n        }\n      }\n    }\n  }\n","line":{"start":1438,"end":1456}},"example":[{"type":"scss","code":"@include react-md-text-field-custom-sizes;","description":"Example Usage SCSS"},{"type":"scss","code":".md-text-field--title {\n  font-size: 34px;\n}\n\n.md-floating-label--title {\n  font-size: 34px;\n}","description":"Example Usage CSS Output"}],"parameter":[{"type":"Map","name":"font-sizes","default":"$md-text-field-custom-sizes","description":"A map of size names with font sizes."},{"type":"Boolean","name":"include-media","default":"true","description":"Boolean if the media queries should be included."},{"type":"Boolean","name":"include-floating-label","default":"$md-text-field-include-floating-label","description":"Boolean if the\n    custom text field size should include the styles for floating labels."}],"group":["text-fields"],"access":"public","require":[{"type":"mixin","name":"react-md-text-field-custom-size-media"}],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes the css for text fields. The floating label, block styling, icon, password, and\nmessages are all optional. These sections can be enabled or disabled by modifying the params\non this mixin or modifying the default values.\n\nAlso if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n\n","context":{"type":"mixin","name":"react-md-text-fields","code":"\n\n  @include react-md-text-field-container($light-theme, $include-media, $include-multiline, $include-floating-label, $include-block, $include-icon);\n  @include react-md-text-field($light-theme, $include-media, $include-multiline);\n  @include react-md-text-field-custom-sizes($custom-sizes, $include-media, $include-floating-label);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-block {\n    @include react-md-text-field-divider($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color, $include-media);\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme, $include-media);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n","line":{"start":173,"end":210}}}]},{"description":"Applies a color to all the browser placeholder psuedo elements.\n\n","commentRange":{"start":1458,"end":1484},"context":{"type":"mixin","name":"react-md-theme-text-field-placeholders","code":"\n  // scss-lint:disable VendorPrefix, PseudoElement\n\n  :-moz-placeholder {\n    color: $color;\n  }\n\n  ::-moz-placeholder {\n    color: $color;\n  }\n\n  :-ms-input-placeholder {\n    color: $color;\n  }\n\n  ::-webkit-input-placeholder {\n    color: $color;\n  }\n","line":{"start":1485,"end":1503}},"example":[{"type":"scss","code":".md-primary.md-toolbar {\n  @include md-theme-text-field-placeholders($md-dark-theme-help-text-color);\n}","description":"Basic Usage SASS"},{"type":"scss","code":".md-primary.md-toolbar {\n  :-moz-placeholder {\n    color: $color;\n  }\n\n  ::-moz-placeholder {\n    color: $color;\n  }\n\n  :-ms-input-placeholder {\n    color: $color;\n  }\n\n  ::-webkit-input-placeholder {\n    color: $color;\n  }\n}","description":"Basic Usage CSS Output"}],"parameter":[{"type":"Color","name":"color","description":"The placeholder color to use"}],"group":["text-fields"],"access":"public","require":[],"file":{"path":"components/_text-fields.scss","name":"_text-fields.scss"},"usedBy":[{"description":"Includes only the `md-text-field-container` css. This should normally be used from\nthe `react-md-text-fields` mixin.\n\n","context":{"type":"mixin","name":"react-md-text-field-container","code":"\n  @if $include-media {\n    @include react-md-text-field-container-media($include-multiline, $include-floating-label);\n  }\n\n  .md-text-field-container {\n    @include react-md-theme-text-field-placeholders(get-color('secondary', $light-theme));\n\n    position: relative;\n    vertical-align: top;\n\n    // scss-lint:disable VendorPrefix, PseudoElement\n    :-moz-placeholder {\n      opacity: 1;\n    }\n\n    ::-moz-placeholder {\n      opacity: 1;\n    }\n\n    :-ms-input-placeholder {\n      opacity: 1;\n    }\n\n    ::-webkit-input-placeholder {\n      opacity: 1;\n    }\n\n    &:hover {\n      cursor: text;\n    }\n  }\n\n  .md-text-field-container--input {\n    display: inline-flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    line-height: 1;\n  }\n\n  .md-text-field-container--full-width {\n    width: 100%;\n  }\n\n  .md-text-field-container--disabled {\n    $color: get-color('disabled', $light-theme);\n    @include react-md-theme-text-field-placeholders($color);\n\n    color: $color;\n\n    &:hover {\n      cursor: initial;\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-container--multiline {\n      display: inline-block;\n      transition-duration: $md-transition-time * 2;\n      transition-property: height;\n    }\n  }\n\n  @if $include-block {\n    .md-text-field-container--block {\n      align-items: center;\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n\n      .md-text-field {\n        width: 100%;\n      }\n    }\n  }\n\n  @if $include-icon {\n    .md-text-field-container--with-icon {\n      align-items: flex-end;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n    }\n  }\n","line":{"start":365,"end":456}}},{"description":"Modifies the styles of the text-field-container ONLY if the value of `$light-theme` is\ndifferent than the `$md-light-theme`. This is only useful if you have a part of your app\nthat is `dark-theme` while another section is not. In most cases, you should use the\n`react-md-theme-text-fields` mixin instead.\n\n","context":{"type":"mixin","name":"react-md-theme-text-field-container","code":"\n  @if $light-theme != $md-light-theme {\n    .md-text-field-container {\n      @include react-md-theme-text-field-placeholders(get-color('secondary', $light-theme));\n    }\n\n    .md-text-field-container--disabled {\n      $color: get-color('disabled', $light-theme);\n      @include react-md-theme-text-field-placeholders($color);\n\n      color: $color;\n    }\n  }\n","line":{"start":470,"end":483}}}]}]