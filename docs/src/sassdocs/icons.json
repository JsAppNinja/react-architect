[{"description":"The font icon size.\n","commentRange":{"start":6,"end":7},"context":{"type":"variable","name":"md-font-icon-size","value":"24px","scope":"private","line":{"start":8,"end":8}},"type":"Number","group":["icons"],"access":"public","file":{"path":"components/_icons.scss","name":"_icons.scss"},"usedBy":[{"description":"Includes the css for the Avatars.\n","context":{"type":"mixin","name":"react-md-avatars","code":"\n  .md-avatar {\n    border: 1px solid if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    border-radius: 50%;\n    display: inline-block;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-avatar--icon-sized {\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-background, default);\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n","line":{"start":49,"end":90}}},{"description":"Includes the css for using `md-icon`.\n","context":{"type":"mixin","name":"react-md-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  .md-icon {\n    color: $md-icon-color;\n    font-size: $md-font-icon-size;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n  }\n","line":{"start":13,"end":22}}},{"description":"This includes the small scss for displaying `.md-icon` or indicators with a Slider.\n","context":{"type":"mixin","name":"react-md-slider-indicators","code":"\n  .md-slider-container {\n    .md-icon {\n      $margin: ($md-slider-height - $md-font-icon-size) / 2;\n\n      margin-bottom: $margin;\n      margin-top: $margin;\n    }\n  }\n\n  .md-slider-ind {\n    display: block;\n    text-align: center;\n  }\n\n  .md-slider-track--ind-left {\n    margin-left: $md-default-padding;\n  }\n\n  .md-slider-track--ind-right {\n    margin-right: $md-default-padding;\n  }\n\n  @media only screen and (min-width: $md-mobile-min-width) {\n    .md-slider-ind {\n      font-size: $md-text-field-mobile-font-size;\n      margin-top: 14px;\n    }\n  }\n\n  @media only screen and (min-width: $md-desktop-min-width) {\n    .md-slider-ind {\n      font-size: $md-text-field-desktop-font-size;\n      margin-top: 16px;\n    }\n  }\n","line":{"start":333,"end":369}}},{"description":"Creates the styles for text field icons on mobile devices. This should be included within\na media query.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-mobile","code":"\n  $text-field-height: 19px;\n\n  .md-text-field-icon {\n    margin-bottom: 16px - (($md-font-icon-size - $text-field-height) / 2);\n  }\n","line":{"start":931,"end":937}}},{"description":"Creates the styles for text field icons on desktop screens. This should be included within\na media query.\n\n","context":{"type":"mixin","name":"react-md-text-field-icon-desktop","code":"\n  $text-field-height: 15px;\n\n  .md-text-field-icon {\n    margin-bottom: 12px - (($md-font-icon-size - $text-field-height) / 2);\n  }\n","line":{"start":946,"end":952}}},{"description":"Includes the styles for having a password text field.\n\n","context":{"type":"mixin","name":"react-md-text-field-password","code":"\n  @if $include-media {\n    @include react-md-text-field-password;\n  }\n\n  .md-password-btn {\n    background: transparent;\n    border: 0;\n    color: get-color('hint', $light-theme);\n    height: $md-font-icon-size;\n    padding: 0;\n    position: absolute;\n    right: 0;\n    width: $md-font-icon-size;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-password-btn--active {\n    color: get-color('secondary', $light-theme);\n\n    &::before {\n      background: get-color('secondary', $light-theme);\n    }\n  }\n\n  .md-password-btn--invisible {\n    &::before,\n    &::after {\n      content: '';\n      display: block;\n      height: 2px;\n      position: absolute;\n      top: 50%;\n      width: 100%;\n    }\n\n    &::before {\n      transform: translate3d(-1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n\n    &::after {\n      background: get-color('background', $light-theme);\n      transform: translate3d(1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n  }\n\n  .md-text-field--password {\n    margin-right: $md-font-icon-size;\n  }\n","line":{"start":1202,"end":1262}}}]},{"description":"Includes the css for using `md-icon`.\n","commentRange":{"start":10,"end":12},"context":{"type":"mixin","name":"react-md-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  .md-icon {\n    color: $md-icon-color;\n    font-size: $md-font-icon-size;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n  }\n","line":{"start":13,"end":22}},"parameter":[{"type":"Boolean","name":"light-theme","default":"$md-light-theme","description":"Boolean if the\n    application is using the light-theme or not."}],"group":["icons"],"access":"public","require":[{"type":"variable","name":"md-light-theme-secondary-text-color"},{"type":"variable","name":"md-dark-theme-secondary-text-color"},{"type":"variable","name":"md-font-icon-size"},{"type":"variable","name":"md-transition-time"}],"file":{"path":"components/_icons.scss","name":"_icons.scss"}},{"description":"Updates the color of the base `md-icon` if the `$light-theme` paramater\ndoes not equal the global `$md-light-theme`.\n","commentRange":{"start":25,"end":28},"context":{"type":"mixin","name":"react-md-theme-icons","code":"\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  @if $light-theme != $md-light-theme {\n    .md-icon {\n      color: $md-icon-color;\n    }\n  }\n","line":{"start":29,"end":37}},"parameter":[{"name":"{Boolean{","description":"$light-theme [$md-light-theme] - Boolean if using the\n    light theme."}],"group":["icons"],"access":"public","require":[{"type":"variable","name":"md-light-theme-secondary-text-color"},{"type":"variable","name":"md-dark-theme-secondary-text-color"},{"type":"variable","name":"md-light-theme"}],"file":{"path":"components/_icons.scss","name":"_icons.scss"}}]