[{"description":"The `RadioGroup` component is a state manager for the `Radio` component.\nIt will automatically inject the name, an onChange function, and\ndetermine whether a radio is checked.\n\nThis is just a simple wrapper to reduce some prop redundancy.","methods":[],"props":{"defaultValue":{"type":{"name":"string"},"required":false,"description":"The default value for the radio group. This will check the radio that\nhas the same value first by default.\n\nIf this is omitted, the first radio will be selected."},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean if the entire radio group is disabled."},"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the radio group."},"children":{"type":{"name":"arrayOf","value":{"name":"node"}},"required":true,"description":"The radio buttons to manage."},"component":{"type":{"name":"string"},"required":true,"description":"The component to render the radio group as.","defaultValue":{"value":"'div'","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"Boolean if the radio buttons should be force to be inline.","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"An optional onChange function to call when any of the radio buttons are clicked.\nThis will return the clicked radio's value and the change event.\n\n`onChange(value, event)`."},"name":{"type":{"name":"string"},"required":false,"description":"The name to give to all the radio buttons."},"value":{"type":{"name":"string"},"required":false,"description":"The current value for the radio group. This will convert the radio group\ninto a controlled component which will require the onChange prop\nto be given."}},"source":"src/js/SelectionControls/RadioGroup.js","component":"RadioGroup"},{"description":"The `Radio` component can be used with the `RadioGroup` component for\nadditional state management. It is completely optional to use these\ntwo components together though. It is just to eliminate some redundancies.","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"The optional className to apply to the surrounding label."},"disabled":{"type":{"name":"bool"},"required":false,"description":"Boolean if the radio is disabled."},"onChange":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the checked state is called.\nThe radio value and change event will be passed.\n\n`onChange(value, event)`."},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":true,"description":"The value for the radio"},"defaultChecked":{"type":{"name":"bool"},"required":true,"description":"Boolean if the radio should be checked by default. Only use this\nif you are not using the `RadioGroup` component.","defaultValue":{"value":"false","computed":false}},"checked":{"type":{"name":"bool"},"required":false,"description":"Boolean if the radio button is checked. If you are using the\n`RadioGroup` component, this will be injected automatically\nfor you. If this prop is defined, it has become a controlled component\nso you will need to use include the `onChange` prop as well."},"checkedIcon":{"type":{"name":"node"},"required":true,"description":"The icon to use for the checked state of the radio.","defaultValue":{"value":"<FontIcon>radio_button_checked</FontIcon>","computed":false}},"uncheckedIcon":{"type":{"name":"node"},"required":true,"description":"The icon to use for the unchecked state of the radio.","defaultValue":{"value":"<FontIcon>radio_button_unchecked</FontIcon>","computed":false}},"label":{"type":{"name":"node"},"required":false,"description":"The optional label to display with the radio button."},"labelBefore":{"type":{"name":"bool"},"required":true,"description":"Boolean if the label should appear before the radio button.","defaultValue":{"value":"false","computed":false}},"name":{"type":{"name":"string"},"required":false,"description":"The name to use for the radio. If you are usng the `RadioGroup` component,\nthis will be injected automatically."}},"source":"src/js/SelectionControls/Radio.js","component":"Radio"}]