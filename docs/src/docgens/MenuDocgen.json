[{"description":"The Menu component is a controlled component. It requires a boolean `isOpen`\nto determinte its state.\n\nMenus allow users to take an action by selecting from a list of choices revealed\nupon opening a temporary, new sheet of material.","methods":[],"props":{"className":{"type":{"name":"string"},"required":false,"description":"The optional className for the menu container."},"style":{"type":{"name":"object"},"required":false,"description":"The optional style to apply to the menu container."},"listClassName":{"type":{"name":"string"},"required":false,"description":"The optional className to apply to the opened menu List."},"listStyle":{"type":{"name":"object"},"required":false,"description":"The optional style to apply to the opened menu List."},"children":{"type":{"name":"union","value":[{"name":"element"},{"name":"arrayOf","value":{"name":"element"}}]},"required":false,"description":"An array of `ListItem`, `ListItemControl`, `Divider`, `Subheader`, or react element\nto display when the menu is open."},"toggle":{"type":{"name":"node"},"required":false,"description":"The component to use that will toggle the `isOpen` prop. This will make\nthe menu relative to this component. An example would be using an `IconButton`,\nor another button as a toggle."},"isOpen":{"type":{"name":"bool"},"required":true,"description":"Boolean if the menu is currently open."},"position":{"type":{"name":"enum","value":[{"value":"Menu.Positions.TOP_RIGHT","computed":true},{"value":"Menu.Positions.TOP_LEFT","computed":true},{"value":"Menu.Positions.BOTTOM_RIGHT","computed":true},{"value":"Menu.Positions.BOTTOM_LEFT","computed":true},{"value":"Menu.Positions.BELOW","computed":true}]},"required":false,"description":"The position that the menu should appear from.","defaultValue":{"value":"Menu.Positions.TOP_RIGHT","computed":true}},"close":{"type":{"name":"func"},"required":false,"description":"An optional function that will force the menu to close. This is used so that the\nmenu will be closed when an element outside the menu is clicked."},"autoclose":{"type":{"name":"bool"},"required":false,"description":"Boolean if the menu should autoclose when one of the items are clicked.\nThis will only work if the `close` function is given as well.","defaultValue":{"value":"true","computed":false}},"cascading":{"type":{"name":"bool"},"required":false,"description":"Boolean if there are any nested items in the menu items. This will apply additional\nstyling and position for the nested items."},"expanderIconChildren":{"type":{"name":"node"},"required":false,"description":"Any children needed to display the expander icon for nested `ListItem`.","defaultValue":{"value":"'keyboard_arrow_right'","computed":false}},"expanderIconClassName":{"type":{"name":"string"},"required":false,"description":"The icon className to use for the expander icon.","defaultValue":{"value":"'material-icons'","computed":false}},"limitHeight":{"type":{"name":"bool"},"required":false,"description":"Boolean if the height of the open menu should be limited to the `$md-dropdown-max-height`\nand enable scrolling in the menu."},"fullWidth":{"type":{"name":"bool"},"required":false,"description":"Boolean if the menu should span the full width."}},"source":"src/js/Menus/Menu.js","component":"Menu"}]