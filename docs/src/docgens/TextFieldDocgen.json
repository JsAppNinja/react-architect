[{"description":"There is also an additional css class you can add to the text field to increase the font\nsize to a \"title\". This is configurable and there is a mixin to generate more of these helpers.\n\nText Fields display as `inline-block` by default so that their size does not span `100%`. If\nyou want a text field per-line, wrap them in a div, or set them to display block (will make their width\nexpand as well though).","methods":[{"name":"focus","docblock":"This is a helper method to focus the text field since the text field is nested\nin some containers. This will allow the following to work:\n\n```js\nthis.refs.textField.focus();\n```\n\nBecause of the containers and the positioning of the text field, the following will\n*not* work:\n\n```js\nReactDOM.findDOMNode(this.refs.textFeld).focus();\n```","modifiers":[],"params":[],"returns":null,"description":"This is a helper method to focus the text field since the text field is nested\nin some containers. This will allow the following to work:\n\n```js\nthis.refs.textField.focus();\n```\n\nBecause of the containers and the positioning of the text field, the following will\n*not* work:\n\n```js\nReactDOM.findDOMNode(this.refs.textFeld).focus();\n```"}],"props":{"className":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the text field container."},"inputClassName":{"type":{"name":"string"},"required":false,"description":"An optional className to apply to the input field iteself."},"type":{"type":{"name":"string"},"required":true,"description":"A valid text field type. This should be one of the valid html5 input types.\n\n> If the text field is a multiline text field, it will not be applied because\n> the main text field will be a `textarea`.","defaultValue":{"value":"'text'","computed":false}},"label":{"type":{"name":"string"},"required":false,"description":"A label to display with the text field. If the text field is set to be\na single line text field, this will automatically be used as the placeholder\ntext if there is no `placeholder` prop given."},"placeholder":{"type":{"name":"string"},"required":false,"description":"An optional placeholder to display along with the floating label."},"value":{"type":{"name":"custom","raw":"valueType"},"required":false,"description":"An optional value to set in the text field. This will make the component\ncontrolled and require the `onChange` prop to be set."},"defaultValue":{"type":{"name":"custom","raw":"valueType"},"required":false,"description":"A default value to use for the text field.","defaultValue":{"value":"''","computed":false}},"rows":{"type":{"name":"number"},"required":false,"description":"The number of rows to display by default. This will convert the text field\ninto a multiline text field."},"maxRows":{"type":{"name":"number"},"required":false,"description":"The maximum number of rows that can be displayed in a multiline text field.\nThe text field will continue to expand in height until this value is met.\nSettings this value to `-1` will allow the text field to expand infinitely."},"errorText":{"type":{"name":"string"},"required":false,"description":"An optional error text to display below the text field. If this value is `trueish`,\nthe icon, label, and text field didivder will be styled with the error color."},"helpText":{"type":{"name":"string"},"required":false,"description":"An optional help text to display below the text field."},"helpOnFocus":{"type":{"name":"bool"},"required":false,"description":"A boolean if the help text should only be displayed on focus."},"maxLength":{"type":{"name":"number"},"required":false,"description":"The max length for the text field. If this prop is set, it will automatically\nadd a counter below the text field."},"floatingLabel":{"type":{"name":"bool"},"required":false,"description":"Boolean if the label for the text field should float. Settings this to false\nwill make a single line text field.","defaultValue":{"value":"true","computed":false}},"icon":{"type":{"name":"node"},"required":false,"description":"An optional icon to display to the left of the text field."},"rightIcon":{"type":{"name":"node"},"required":false,"description":"An optional icon to display to the right of the text field."},"onBlur":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the text field is blurred."},"onChange":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the text field's value has changed.\nThe callback will be `onChange(newValue, event)`."},"onFocus":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the text field gains focus."},"onInput":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the text field's value has changed.\nIt is similar to `onChange` except that it triggers immediately after\nthe value has changed while `onChange` happens on blur and after the\ncontent has updated. You most likely want to use `onChange`."},"onInvalid":{"type":{"name":"func"},"required":false,"description":"An optional function to call when a required text field is submitted in\na form without any value."},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"An optional function to call when a user has pressed a key down."},"onKeyPress":{"type":{"name":"func"},"required":false,"description":"An optional function to call when a user has pressed and released a key."},"onKeyUp":{"type":{"name":"func"},"required":false,"description":"An optional function to call when a user has released a key."},"onSelect":{"type":{"name":"func"},"required":false,"description":"An optional function to call when text in the text field has been selected."},"onClick":{"type":{"name":"func"},"required":false,"description":"An optional function to call when the text field is clicked."},"style":{"type":{"name":"object"},"required":false,"description":"Optional style to apply to the text field container."},"inputStyle":{"type":{"name":"object"},"required":false,"description":"Optional style to apply to the text field input itself."},"lineDirection":{"type":{"name":"enum","value":[{"value":"'left'","computed":false},{"value":"'center'","computed":false},{"value":"'right'","computed":false}]},"required":false,"description":"The direction that the text field divider expands from when the text field\ngains focus.","defaultValue":{"value":"'left'","computed":false}},"required":{"type":{"name":"bool"},"required":false,"description":"Boolean if the text field is required."},"disabled":{"type":{"name":"bool"},"required":false,"description":"An optional boolean if the text field is disabaled."},"readOnly":{"type":{"name":"bool"},"required":false,"description":"Boolean if the text field is read only."},"size":{"type":{"name":"number"},"required":false,"description":"An optional size for the text field."},"block":{"type":{"name":"bool"},"required":false,"description":"Boolean if this text field should be styled as a full width text field.\nFloating labels and the text field indicator will be removed automatically."},"fullWidth":{"type":{"name":"bool"},"required":false,"description":"Boolean if the this text field should span the full width of a parent."},"passwordIconChildren":{"type":{"name":"node"},"required":false,"description":"Any children used to render the password icon button.","defaultValue":{"value":"'remove_red_eye'","computed":false}},"passwordIconClassName":{"type":{"name":"string"},"required":false,"description":"Any icon className to use to render the password icon button."}},"source":"src/js/TextFields/TextField.js","component":"TextField"}]